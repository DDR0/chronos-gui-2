From 6b7871dd089d7301b2893194e56b9d9369b42b92 Mon Sep 17 00:00:00 2001
From: Johan Thornton <j@jth.co>
Date: Fri, 26 Oct 2018 16:57:55 -0700
Subject: [PATCH 1/7] added set gain

---
 camobj.py        | 190 +++++++++++++++++++++++++++++++++++++
 fpgah.py         | 107 +++++++++++++++++++++
 ioports.py       |  22 +++++
 live.py          |  42 +++++++++
 lux.py           |  73 +++++++++++++++
 lux1310.py       | 247 ++++++++++++++++++++++++++++++++++++++++++++++++
 lux1310h.py      |  94 +++++++++++++++++++
 lux1310sensor.py |  46 +++++++++
 memobj.py        |  53 +++++++++++
 mmapregisters.py | 280 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 sensorobj.py     | 128 +++++++++++++++++++++++++
 spi.py           |  24 +++++
 12 files changed, 1306 insertions(+)
 create mode 100644 camobj.py
 create mode 100644 fpgah.py
 create mode 100644 ioports.py
 create mode 100644 live.py
 create mode 100644 lux.py
 create mode 100644 lux1310.py
 create mode 100644 lux1310h.py
 create mode 100644 lux1310sensor.py
 create mode 100644 memobj.py
 create mode 100644 mmapregisters.py
 create mode 100644 sensorobj.py
 create mode 100644 spi.py

diff --git a/camobj.py b/camobj.py
new file mode 100644
index 0000000..b3aef7b
--- /dev/null
+++ b/camobj.py
@@ -0,0 +1,190 @@
+
+# Camera class
+#from mem import fpga_mmio
+from mmapregisters import *
+from memobj import MemObject
+from sensorobj import SensorObject
+from lux1310 import Lux1310Object
+import fpgah
+#import sys, smbus
+#import pyi2cflash-0.1.1
+
+#from smbus2 import SMBus
+
+from smbus2 import SMBusWrapper
+from smbus2 import SMBus
+
+'''    
+bus = SMBus()
+bus.open(1)
+
+v = bus.read_byte(80, 0)
+print (f"EEPROM: {hex(v)}")
+'''
+
+from ioports import board_chronos14_ioports
+
+MAX_FRAME_LENGTH = 0xf000
+REC_START_ADDR = MAX_FRAME_LENGTH * 4
+
+CAMERA_SERIAL_I2CADDR =	0x54
+CAMERA_SERIAL_LENGTH =	32
+CAMERA_SERIAL_OFFSET =	0
+
+
+
+def i2c_eeprom_do_read(addr,  offset,  leng):
+	bus = SMBus(1)
+	#for i in range(1):
+	#	b = bus.read_byte_data(CAMERA_SERIAL_I2CADDR + i, CAMERA_SERIAL_OFFSET)
+	#	print(b)
+	#bus.close()
+	# print ("huh?")
+
+	with SMBusWrapper(1) as bus:
+	    # Read a block of 16 bytes from address 80, offset 0
+	    # block = bus.read_i2c_block_data(addr, offset, leng)
+	    block = bus.read_i2c_block_data(84 , 30, leng)
+	    # Returned value is a list of 16 bytes
+	    print(block)
+
+
+
+class CamObject:
+	def __init__(self):
+		print ("CamObject Init")
+		self.CamInit()
+
+
+	#print("CamObject created")
+	# mem = MemObject()
+
+
+
+	'''
+    int err;
+    err = ioctl(fd, I2C_SLAVE, addr);
+    if (err < 0) {
+        return err;
+    }
+
+    err = i2c_eeprom_write_chunk(fd, addr, offset, NULL, 0, offsz);
+    if (err < 0) {
+        return err;
+    }
+    usleep(1000);
+    err = read(fd, buf, len);
+    return err;
+	'''
+
+	def i2c_eeprom_read16(fd, addr, offset, leng):
+	    return i2c_eeprom_do_read(fd, addr, offset, leng, 2);
+	    pass
+	    #print ("EEPROM")
+	    #print (pyi2cflash.read(addr, offset, leng))
+
+
+	def ReadSerial():
+		#iofile = ioports["eeprom-i2c"]
+		#fd = open(iofile, O_RDWR)
+		#return i2c_eeprom_read16(fd, CAMERA_SERIAL_I2CADDR, CAMERA_SERIAL_OFFSET, CAMERA_SERIAL_LENGTH);
+		i2c_eeprom_do_read(CAMERA_SERIAL_I2CADDR, CAMERA_SERIAL_OFFSET, CAMERA_SERIAL_LENGTH)
+
+	def TestLive(self):
+		print("!!!!!")
+		tfunc = self.sensor.OpsDict["SetPeriod"]
+		tfunc()
+		self.sensor.OpsDict["SetExposure"]()
+		self.sensor.OpsDict["CalSuffix"]()
+		self.sensor.OpsDict["SetGain"](12)
+
+		# self.CamInit()
+
+	def SetLiveTiming(self, geometry, hOutRes, vOutRes, maxFPS):
+
+		pxClock = 100000000
+		hSync = 50
+		hPorch = 166
+		vSync = 3
+		vPorch = 38
+
+		hPeriod = hOutRes + hSync + hPorch + hSync
+
+		# Calculate minimum hPeriod to fit within the max vertical
+		# resolution and make sure hPeriod is equal to or larger
+	 
+		minHPeriod = (pxClock / ((sensor.v_max_res + vPorch + vSync + vSync) * maxFps)) + 1; # the +1 is just to round up
+		if hPeriod < minHPeriod: 
+			hPeriod = minHPeriod
+
+		# calculate vPeriod and make sure it's large enough for the frame
+		vPeriod = pxClock / (hPeriod * maxFps)
+		if vPeriod < (vOutRes + vSync + vPorch + vSync):
+			vPeriod = vOutRes + vSync + vPorch + vSync
+	
+		# calculate FPS for debug output
+		fps = pxClock / (vPeriod * hPeriod)
+		print ("Timing: %d*%d@%d (%d*%d max: %d)\n", \
+			   (hPeriod - hSync - hPorch - hSync), (vPeriod - vSync - vPorch - vSync), \
+			   fps, hOutRes, vOutRes, maxFps)
+
+	 
+	def CamInit(self):
+		
+		print (self.sensor)
+
+		print (f"pixel rate is {self.sensor.ImageSensor.pixel_rate}")
+		 
+		maxfps = self.sensor.ImageSensor.pixel_rate / \
+			(self.sensor.ImageSensor.h_max_res * self.sensor.ImageSensor.v_max_res);
+		print (f"maxfps is {maxfps}")
+
+		# Configure the FIFO threshold and image sequencer
+
+		self.mem.fpga_mmio.write32(SEQ_LIVE_ADDR_0, MAX_FRAME_LENGTH)
+		self.mem.fpga_mmio.write32(SEQ_LIVE_ADDR_1, MAX_FRAME_LENGTH * 2)
+		self.mem.fpga_mmio.write32(SEQ_LIVE_ADDR_2, MAX_FRAME_LENGTH * 3)
+		self.mem.fpga_mmio.write32(SEQ_REC_REGION_START_ADDR, MAX_FRAME_LENGTH * 3)
+
+
+
+	print ("begin")
+	mem = MemObject()
+	#sensor = SensorObject(mem)
+	sensor = Lux1310Object(mem)
+
+	
+	ioports = board_chronos14_ioports
+
+	# self.CamInit()
+
+
+	ReadSerial()
+
+
+
+
+	# self.SetLiveTiming()
+
+
+
+
+# minHPeriod;
+# hPeriod;
+# vPeriod;
+# fps;
+
+
+# def cam_init(cam):
+
+# 	frame_words = 0
+# 	maxfps = 3
+
+
+
+
+#print ("cam begin")
+
+#camobj = CamObject()
+
+#camobj.mem.mm_print()
diff --git a/fpgah.py b/fpgah.py
new file mode 100644
index 0000000..80cb3aa
--- /dev/null
+++ b/fpgah.py
@@ -0,0 +1,107 @@
+from dataclasses import dataclass
+from struct import Struct
+
+'''
+@dataclass
+class ImageConstraintsData:
+	t_min_period: int = 0
+	t_max_period: int = 0
+
+	# Exposure timing must satisfy the constraints:
+	# tMinExposure <= tExposure <= (tFramePeriod * tMaxShutter) / 360 - tExposureDelay
+
+	t_min_exposure: int = 0
+	t_exposure_delay: int = 0
+	t_max_shutter: int = 0
+
+	# All timing values will be implicitly quantized by this frequency. */
+	f_quantization: int = 0
+
+# TODO: rebuild thes dataclasses as const? enum? hmmm...
+#
+# Do them as Struct.struct?
+
+@dataclass
+class FPGASeq:
+	control: int = 0
+	status: int = 0
+	frame_size: int = 0
+	region_start: int = 0
+	region_stop: int = 0
+	live_addr: int = 0
+	trig_delay: int = 0
+	md_fifo_read: int = 0
+
+
+@dataclass
+class FPGADisplay:
+	control: int = 0
+	frame_address: int = 0
+	fpn_address: int = 0
+	gain: int = 0
+	h_period: int = 0
+	v_period: int = 0
+	h_sync_len: int = 0
+	v_sync_len: int = 0
+	h_back_porch: int = 0
+	v_back_porch: int = 0
+	h_res: int = 0
+	v_res: int = 0
+	h_out_res: int = 0
+	__reserved0: int = 0
+	v_out_res: int = 0
+	peaking_thresh: int = 0
+	pipeline: int = 0
+	__reserved1: int = 0
+	manual_sync: int = 0
+
+
+# Video RAM readout
+@dataclass
+class FPGAVram:
+	identifier: int = 0
+	version: int = 0
+	subver: int = 0
+	control: int = 0
+	status: int = 0
+	__reserved0[3]: int = 0
+	address: int = 0
+	burst: int = 0
+	__reserved1: int = 0 # Align to offset 0x200 
+
+VRAM_IDENTIFIER			= 0x40
+
+VRAM_CTL_TRIG_READ		= (1 << 0)
+VRAM_CTL_TRIG_WRITE		= (1 << 1)
+
+@dataclass
+class FPGAOverlay:
+	# Overlay control registers. 
+	identifier: int = 0    # Always reads 0x0055
+	version: int = 0
+	subver: int = 0
+	control: int = 0
+	status: int = 0
+	text0_xpos: int = 0
+	text0_ypos: int = 0
+	text0_xsize: int = 0
+	text0_ysize: int = 0
+	text1_xpos: int = 0
+	text1_ypos: int = 0
+	text1_xsize: int = 0
+	text1_ysize: int = 0
+	wmark_xpos: int = 0
+	wmark_ypos: int = 0
+	text0_xoffset: int = 0
+	text1_xoffset: int = 0
+	text0_yoffset: int = 0
+	text1_yoffset: int = 0
+	logo_xpos: int = 0
+	logo_ypos: int = 0
+	logo_xsize: int = 0
+	logo_ysize: int = 0
+	text0_abgr: int = 0
+	text1_abgr: int = 0
+	wmark_abgr: int = 0
+	__reserved0: int = 0 # Align to offset 0x100 
+'''
\ No newline at end of file
diff --git a/ioports.py b/ioports.py
new file mode 100644
index 0000000..acbf866
--- /dev/null
+++ b/ioports.py
@@ -0,0 +1,22 @@
+board_chronos14_ioports = {
+    "ddr3-i2c" :       "/dev/i2c-0",
+    "eeprom-i2c" :     "/dev/i2c-1",
+    "lux1310-spidev" : "/dev/spidev3.0",
+    "lux1310-dac-cs" : "/sys/class/gpio/gpio33/value",
+    "lux1310-color" :  "/sys/class/gpio/gpio66/value",
+    "encoder-a" :      "/sys/class/gpio/gpio20/value",
+    "encoder-b" :      "/sys/class/gpio/gpio26/value",
+    "encoder-sw" :     "/sys/class/gpio/gpio27/value",
+    "shutter-sw" :     "/sys/class/gpio/gpio66/value",
+    "record-led.0" :   "/sys/class/gpio/gpio41/value",
+    "record-led.1" :   "/sys/class/gpio/gpio25/value",
+    "trigger-pin" :    "/sys/class/gpio/gpio127/value",
+    "frame-irq" :      "/sys/class/gpio/gpio51/value",
+    # FPGA Programming Pins 
+    "ecp5-spidev" :    "/dev/spidev3.0",
+    "ecp5-progn" :     "/sys/class/gpio/gpio47/value",
+    "ecp5-init" :      "/sys/class/gpio/gpio45/value",
+    "ecp5-done" :      "/sys/class/gpio/gpio52/value",
+    "ecp5-cs" :        "/sys/class/gpio/gpio58/value",
+    "ecp5-holdn" :     "/sys/class/gpio/gpio58/value" 
+    }
\ No newline at end of file
diff --git a/live.py b/live.py
new file mode 100644
index 0000000..a9dfa12
--- /dev/null
+++ b/live.py
@@ -0,0 +1,42 @@
+
+
+from camobj import CamObject
+
+print ("Live Video Testing")
+
+
+
+
+
+# main part
+
+cam = CamObject()
+
+
+def nicehex(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+print ("LIVE FPGA registers")
+
+#print (cam)
+
+for i in range(0, 10, 4):
+	mm = cam.mem.fpga_mmio.read32(i)
+	print (nicehex(i), " - ", nicehex4(mm))
+
+print ("LIVE!")
+
+print (cam.sensor.ImageGeometry.hres)
+print (cam.sensor.numfunc())
+
+
+
+
+
+cam.TestLive()
+
+# print (cam.sensor.ImageConstraints)
+# print (cam.sensor.ImageGeometry)
+print (cam.sensor.ImageSensor)
diff --git a/lux.py b/lux.py
new file mode 100644
index 0000000..474db94
--- /dev/null
+++ b/lux.py
@@ -0,0 +1,73 @@
+import spi
+from luxh import *
+
+def setDACCS(flag):
+	pass	
+
+
+
+
+def writeDACVoltage(chan, voltage):
+	if chan == VDR3_VOLTAGE:
+		writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
+	elif chan == VABL_VOLTAGE:
+		writeDAC(voltage * VABL_SCALE, VABL_VOLTAGE)
+	elif chan == VDR1_VOLTAGE:
+		writeDAC(voltage * VDR1_SCALE, VDR1_VOLTAGE)
+	elif chan == VDR2_VOLTAGE:
+		writeDAC(voltage * VDR2_SCALE, VDR2_VOLTAGE)
+	elif chan == VRSTB_VOLTAGE:
+		writeDAC(voltage * VRSTB_SCALE, VRSTB_VOLTAGE)
+	elif chan == VRSTH_VOLTAGE:
+		writeDAC(voltage * VRSTH_SCALE, VRSTH_VOLTAGE)
+	elif chan == VRSTL_VOLTAGE:
+		writeDAC(voltage * VRSTL_SCALE, VRSTL_VOLTAGE)
+	elif chan == VRST_VOLTAGE:
+		writeDAC(voltage * VRST_SCALE, VRST_VOLTAGE)
+	else:
+		pass
+
+
+def writeDAC(data, channel):
+	writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
+
+
+def writeDACSPI(data):
+	spi.spi_transfer(data)
+
+
+def writeDACVoltages():
+	initDAC();
+	writeDACVoltage(VABL_VOLTAGE, 0.3);
+	writeDACVoltage(VRSTB_VOLTAGE, 2.7);
+	writeDACVoltage(VRST_VOLTAGE, 3.3);
+	writeDACVoltage(VRSTL_VOLTAGE, 0.7);
+	writeDACVoltage(VRSTH_VOLTAGE, 3.6);
+	writeDACVoltage(VDR1_VOLTAGE, 2.5);
+	writeDACVoltage(VDR2_VOLTAGE, 2);
+	writeDACVoltage(VDR3_VOLTAGE, 1.5);
+
+def initDAC():
+	spi.spi_open()
+	spi.spi_transfer(0x9000)
+
+
+'''
+def writeDACSPI(data)
+{
+	UInt8 tx[2];
+	UInt8 rx[sizeof(tx)];
+	int retval;
+
+	tx[1] = data >> 8;
+	tx[0] = data & 0xFF;
+
+	setDACCS(false);
+	//delayms(1);
+	retval = spi->Transfer((uint64_t) tx, (uint64_t) rx, sizeof(tx));
+	//delayms(1);
+	setDACCS(true);
+	return retval;
+}
+
+'''
diff --git a/lux1310.py b/lux1310.py
new file mode 100644
index 0000000..1c3ea9d
--- /dev/null
+++ b/lux1310.py
@@ -0,0 +1,247 @@
+
+from sensorobj import SensorObject
+import spi
+from lux1310h import *
+from mmapregisters import *
+import time
+from dataclasses import dataclass
+import struct
+
+from lux1310sensor import *
+
+'''
+#convert this to Struct.struct
+@dataclass
+class FPGA1310Sensor:
+
+	control = 0
+	clk_phase = 0
+	sync_token = 0
+	data_correct = 0
+	fifo_start = 0
+	fifo_stop = 0
+	__reserved = 0
+	frame_period = 0
+	int_tim = 0
+	sci_control = 0
+	sci_address = 0
+	sci_datalen = 0
+	sci_fifo_addr = 0
+	sci_fifo_data = 0
+
+'''
+
+Lux1310GainData = [
+    {   # x1 - 0dB 
+        "vrstb": 2700,
+        "vrst": 3300,
+        "vrsth": 3600,
+        "sampling": 0x7f,
+        "feedback": 0x7f,
+        "gain_bit": 3,
+        "analog_gain": 0,
+    },
+    { # x2 - 6dB 
+        "vrstb": 2700,
+        "vrst": 3300,
+        "vrsth": 3600,
+        "sampling": 0xfff,
+        "feedback": 0x7f,
+        "gain_bit": 3,
+        "analog_gain": 6,
+    },
+    { # x4 - 12dB 
+        "vrstb": 2700,
+        "vrst": 3300,
+        "vrsth": 3600,
+        "sampling": 0xfff,
+        "feedback": 0x7f,
+        "gain_bit": 0,
+        "analog_gain": 12,
+    },
+    { # x8 - 18dB 
+        "vrstb": 1700,
+        "vrst": 2300,
+        "vrsth": 2600,
+        "sampling": 0xfff,
+        "feedback": 0x7,
+        "gain_bit": 0,
+        "analog_gain": 18,
+    },
+    { # x16 - 24dB 
+        "vrstb": 1700,
+        "vrst": 2300,
+        "vrsth": 2600,
+        "sampling": 0xfff,
+        "feedback": 0x1,
+        "gain_bit": 0,
+        "analog_gain": 24,
+    }
+]
+
+
+
+def Lux1310SetExposure():
+	print ("Lux1310SetExposure")
+
+def Lux1310SetPeriod():
+	print ("Lux1310SetPeriod")
+
+def Lux1310SetResolutions():
+	pass
+
+def Lux1310GetConstraints():
+	pass
+
+def Lux1310SetGain(gain):
+	print ("Lux1310SetGain")
+	for gdict in Lux1310GainData:
+		if gdict["analog_gain"] == gain:
+			print (gdict)
+			break
+	pass
+
+def Lux1310CalGain():
+	pass
+
+def Lux1310CalSuffix():
+	pass
+
+
+
+Lux1310OpsDict = {
+	"SetExposure": Lux1310SetExposure,
+	"SetPeriod": Lux1310SetPeriod,
+	"SetResolutions": Lux1310SetResolutions,
+	"GetConstraints": Lux1310GetConstraints,
+	"SetGain": Lux1310SetGain,
+	"CalGain": Lux1310CalGain,
+	"CalSuffix": Lux1310CalSuffix
+}
+
+
+
+
+class Lux1310Object(SensorObject):
+
+	OpsDict = Lux1310OpsDict
+
+	# print ("class SO")
+	def lux1310num(self):
+		return 77
+
+#	lux1310num()
+
+
+	def __init__(self, mem):
+		SensorObject.__init__(self)
+		self.mem = mem
+		self.lux1310num()
+		self.initlux1310()		
+		self.SensorInit()
+		#self.OpsDict = Lux1310OpsDict
+		print ("Lux1310 initialized!")
+
+
+	#numfunc = lux1310num
+
+
+	def setDACCS(self, flag):
+		pass	
+
+
+
+
+	def writeDACVoltage(self, chan, voltage):
+		if chan == VDR3_VOLTAGE:
+			self.writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
+		elif chan == VABL_VOLTAGE:
+			self.writeDAC(voltage * VABL_SCALE, VABL_VOLTAGE)
+		elif chan == VDR1_VOLTAGE:
+			self.writeDAC(voltage * VDR1_SCALE, VDR1_VOLTAGE)
+		elif chan == VDR2_VOLTAGE:
+			self.writeDAC(voltage * VDR2_SCALE, VDR2_VOLTAGE)
+		elif chan == VRSTB_VOLTAGE:
+			self.writeDAC(voltage * VRSTB_SCALE, VRSTB_VOLTAGE)
+		elif chan == VRSTH_VOLTAGE:
+			self.writeDAC(voltage * VRSTH_SCALE, VRSTH_VOLTAGE)
+		elif chan == VRSTL_VOLTAGE:
+			self.writeDAC(voltage * VRSTL_SCALE, VRSTL_VOLTAGE)
+		elif chan == VRST_VOLTAGE:
+			self.writeDAC(voltage * VRST_SCALE, VRST_VOLTAGE)
+		else:
+			pass
+
+
+	def writeDAC(self, data, channel):
+		self.writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
+
+
+	def writeDACSPI(self, data):
+		spi.spi_transfer(data)
+
+
+	def initDAC(self):
+		spi.spi_open()
+		spi.spi_transfer(0x9000)
+
+	def writeDACVoltages(self):
+		self.initDAC();
+		self.writeDACVoltage(VABL_VOLTAGE, 0.3);
+		self.writeDACVoltage(VRSTB_VOLTAGE, 2.7);
+		self.writeDACVoltage(VRST_VOLTAGE, 3.3);
+		self.writeDACVoltage(VRSTL_VOLTAGE, 0.7);
+		self.writeDACVoltage(VRSTH_VOLTAGE, 3.6);
+		self.writeDACVoltage(VDR1_VOLTAGE, 2.5);
+		self.writeDACVoltage(VDR2_VOLTAGE, 2);
+		self.writeDACVoltage(VDR3_VOLTAGE, 1.5);
+
+
+
+
+
+
+	def initlux1310(self):
+
+		print ("initlux1310")
+
+		self.mem.mm_open()
+		#self.mem.initlux()
+
+		self.initDAC()
+		self.writeDACVoltages()
+
+
+		# Now do rest of lux init
+		time.sleep(0.01)
+
+
+		self.lux1310SetReset(True)
+		self.lux1310SetReset(False)
+
+		time.sleep(0.001)
+
+
+
+		# Set up DAC with SPI
+	def lux1310SetReset(self, value):
+		readvalue = self.mem.fpga_mmio.read16(IMAGE_SENSOR_CONTROL_ADDR)
+		if value:
+			self.mem.fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue | IMAGE_SENSOR_RESET_MASK)
+		else:
+			self.mem.fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue & ~IMAGE_SENSOR_RESET_MASK)
+
+	def SensorInit(self):
+		#self.ImageSensor = ImageSensorData()
+		self.ImageSensor.name = "lux1310"
+		self.ImageSensor.mfr = "Luxima";
+		self.ImageSensor.h_max_res = 1280;
+		self.ImageSensor.v_max_res = 1024;
+		self.ImageSensor.h_min_res = 336;
+		self.ImageSensor.v_min_res = 96;
+		self.ImageSensor.h_increment = LUX1310_HRES_INCREMENT;
+		self.ImageSensor.v_increment = 2;
+		self.ImageSensor.pixel_rate = self.ImageSensor.h_max_res * self.ImageSensor.v_max_res * 1057;
+		self.ImageSensor.adc_count = LUX1310_ADC_COUNT;
+
+
diff --git a/lux1310h.py b/lux1310h.py
new file mode 100644
index 0000000..ae78610
--- /dev/null
+++ b/lux1310h.py
@@ -0,0 +1,94 @@
+
+
+
+LUX1310_HRES_INCREMENT		= 16
+LUX1310_VRES_INCREMENT		= 2
+LUX1310_MAX_STRIDE			= 1280
+LUX1310_MAX_H_RES			= 1280
+LUX1310_MAX_V_RES			= 1024
+LUX1310_MIN_HRES			= 192		#Limited by video encoder minimum
+LUX1310_MIN_VRES			= 96
+LUX1310_MAGIC_ABN_DELAY		= 26
+
+TIMING_CLOCK_FREQ			= 100000000.0	#Hz
+LUX1310_SENSOR_CLOCK		= 90000000.0	#Hz
+
+LUX1310_ROT					= (9+4)		#Granularity clock cycles (63MHz periods by default)
+LUX1310_FOT					= 315		#Granularity clock cycles (63MHz periods by default)
+
+ROT_TIMER					= 9
+FOT_TIMER					= 315
+
+ROT							= (ROT_TIMER + 4)
+FOT							= (FOT_TIMER + 29)
+MAX_TS						= 54
+
+LUX1310_MIN_INT_TIME		= 0.000001	#1 us
+LUX1310_MAX_SLAVE_PERIOD 	= (0xFFFFFFFF)
+
+LUX1310_GAIN_CORRECTION_MIN = 0.999
+LUX1310_GAIN_CORRECTION_MAX = 1.2
+
+VDR3_VOLTAGE				= 0
+VABL_VOLTAGE				= 1
+VDR1_VOLTAGE				= 2
+VDR2_VOLTAGE				= 3
+VRSTB_VOLTAGE				= 4
+VRSTH_VOLTAGE				= 5
+VRSTL_VOLTAGE				= 6
+VRST_VOLTAGE				= 7
+
+
+LUX1310_DAC_FS				= 4095.0
+LUX1310_DAC_VREF			= 3.3
+VDR3_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VABL_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * (10.0 + 23.2) / 10.0)
+VDR1_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VDR2_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VRSTB_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VRSTH_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * 49.9 / (49.9 + 10.0))
+VRSTL_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * (10.0 + 23.2) / 10.0)
+VRST_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * 49.9 / (49.9 + 10.0))
+
+
+LUX1310_WAVETABLE_80		= 0
+LUX1310_WAVETABLE_39		= 1
+LUX1310_WAVETABLE_30		= 2
+LUX1310_WAVETABLE_25		= 3
+LUX1310_WAVETABLE_20		= 4
+LUX1310_WAVETABLE_AUTO		= 0x7FFFFFFF
+
+LUX1310_WAVETABLE_80_FN		= "WT80"
+LUX1310_WAVETABLE_39_FN		= "WT39"
+LUX1310_WAVETABLE_30_FN		= "WT30"
+LUX1310_WAVETABLE_25_FN		= "WT25"
+LUX1310_WAVETABLE_20_FN		= "WT20"
+
+LUX1310_GAIN_1				= 0
+LUX1310_GAIN_2				= 1
+LUX1310_GAIN_4				= 2
+LUX1310_GAIN_8				= 3
+LUX1310_GAIN_16				= 4
+
+#Strings to build FPN filenames
+LUX1310_GAIN_1_FN			= "G1"
+LUX1310_GAIN_2_FN			= "G2"
+LUX1310_GAIN_4_FN			= "G4"
+LUX1310_GAIN_8_FN			= "G8"
+LUX1310_GAIN_16_FN			= "G16"
+
+ABN_DELAY_WT80				= 25
+ABN_DELAY_WT39				= 30
+ABN_DELAY_WT30				= 29
+ABN_DELAY_WT25				= 27
+ABN_DELAY_WT20				= 25
+
+LUX1310_VERSION_1			= 1
+LUX1310_VERSION_2			= 2
+
+LUX1310_CLOCK_PERIOD		= (1.0/90000000.0)
+LUX1310_MIN_WAVETABLE_SIZE	= 20
+
+FILTER_COLOR_RED			= 0
+FILTER_COLOR_GREEN			= 1
+FILTER_COLOR_BLUE			= 2
diff --git a/lux1310sensor.py b/lux1310sensor.py
new file mode 100644
index 0000000..112368e
--- /dev/null
+++ b/lux1310sensor.py
@@ -0,0 +1,46 @@
+LUX1310_ADC_COUNT =				16
+LUX1310_ADC_OFFSET_BITS =		10
+
+
+LUX1310_SENSOR_CLOCK_RATE =		90000000
+LUX1310_TIMING_CLOCK_RATE =		100000000
+LUX1310_MIN_EXPOSURE =			1000
+LUX1310_MIN_WAVETABLE_SIZE =	20
+LUX1310_MAGIC_ABN_DELAY =		26
+LUX1310_HRES_INCREMENT =		LUX1310_ADC_COUNT
+
+LUX1310_BLACK_COLS =			32
+LUX1310_BLACK_ROWS =			8
+
+
+LUX1310_DAC_FULL_SCALE =		4095
+LUX1310_DAC_VREF =				3300 # 3300mV 
+LUX1310_DAC_AUTOUPDATE =		9
+
+# Which DAC output controls what sensor voltages 
+LUX1310_DAC_VDR3 =				0
+LUX1310_DAC_VABL =				1
+LUX1310_DAC_VDR1 =				2
+LUX1310_DAC_VDR2 =				3
+LUX1310_DAC_VRSTB =				4
+LUX1310_DAC_VRSTH =				5
+LUX1310_DAC_VRSTL =				6
+LUX1310_DAC_VRST =				7
+
+# Gain networks on some DAC outputs. 
+LUX1310_VABL_MUL =				100 + 232
+LUX1310_VABL_DIV =				100
+LUX1310_VRSTH_MUL =				499
+LUX1310_VRSTH_DIV =				499 + 100
+LUX1310_VRSTL_MUL =				100 + 232
+LUX1310_VRSTL_DIV =				100
+LUX1310_VRST_MUL =				499
+LUX1310_VRST_DIV =				499 + 100
+
+
+
+
+
+
+
+
diff --git a/memobj.py b/memobj.py
new file mode 100644
index 0000000..3772903
--- /dev/null
+++ b/memobj.py
@@ -0,0 +1,53 @@
+import time
+
+from periphery import MMIO
+#import spidev
+#from periphery import SPI
+from mmapregisters import *
+from spi import *
+from lux import *
+
+
+def nicehex(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+
+class MemObject:
+	#print ("Created!")
+	fpga_mmio = MMIO(0x01000000, 0x3000)
+
+	def mm_write16(self, addr, data):
+		self.fpga_mmio.write16(addr, data)
+
+	def mm_write32(self, addr, data):
+		self.fpga_mmio.write32(addr, data)
+
+	def mm_open(self):
+		# Open FPGA memory map
+		#rint("Open!")
+		self.mm_write32(IMAGER_FRAME_PERIOD_ADDR, 100*4000)  #Disable integration
+		self.mm_write32(IMAGER_INT_TIME_ADDR, 100*4100)
+
+		#print (self.fpga_mmio.read32(IMAGER_INT_TIME_ADDR))
+
+	def mm_print(self):
+		print ("FPGA registers")
+
+		for i in range(0, 12, 4):
+			mm = self.fpga_mmio.read32(i)
+			print (nicehex(i), " - ", nicehex4(mm))
+
+		for i in range(1024, 1024+12, 4):
+			mm = self.fpga_mmio.read32(i)
+			print (nicehex(i), " - ", nicehex4(mm))
+
+		mm = fpga_mmio.read32(28)
+		#print (nicehex(28), nicehex4(mm))
+
+
+
+
+
+#fpga_mmio.close()
diff --git a/mmapregisters.py b/mmapregisters.py
new file mode 100644
index 0000000..56fca82
--- /dev/null
+++ b/mmapregisters.py
@@ -0,0 +1,280 @@
+
+
+#Register definitions from control register verilog file (in 16 bit word addresses)
+SENSOR_CONTROL				=	0
+SENSOR_CLK_PHASE			=	2
+SENSOR_SYNC_TOKEN			=	4
+SENSOR_DATA_CORRECT			=	6
+SENSOR_FIFO_START_W_THRESH	=	8
+SENSOR_FIFO_STOP_W_THRESH	=	10
+IMAGER_FRAME_PERIOD			=	14
+IMAGER_INT_TIME				=	16
+SENSOR_SCI_CONTROL			=	18
+SENSOR_SCI_ADDRESS			=	20
+SENSOR_SCI_DATALEN			=	22
+SENSOR_SCI_FIFO_WR_ADDR		=	24
+SENSOR_SCI_READ_DATA		=	26
+
+SEQ_CTL						=	32
+SEQ_STATUS					=	34
+SEQ_FRAME_SIZE				=	36
+SEQ_REC_REGION_START		=	38
+SEQ_REC_REGION_END			=	40
+SEQ_LIVE_ADDR_0				=	42
+SEQ_LIVE_ADDR_1				=	44
+SEQ_LIVE_ADDR_2				=	46
+SEQ_TRIG_DELAY				=	48
+SEQ_MD_FIFO_READ			=	50
+
+SENSOR_MAGIC_START_DELAY	=	52
+SENSOR_LINE_PERIOD			=	54
+
+TRIG_ENABLE					=	0x50
+TRIG_INVERT					=	0x52
+TRIG_DEBOUNCE				=	0x54
+
+IO_OUT_LEVEL				=	0x56
+IO_OUT_SOURCE				=	0x58
+IO_OUT_INVERT				=	0x5A
+IO_IN						=	0x5C
+EXT_SHUTTER_CTL				=	0x5E
+
+SEQ_PGM_MEM_START			=	0x80
+GPMC_PAGE_OFFSET			=	0x100
+
+DISPLAY_CTL					=	0x200
+DISPLAY_FRAME_ADDRESS		=	0x202
+DISPLAY_FPN_ADDRESS			=	0x204
+DISPLAY_GAIN				=	0x206
+DISPLAY_H_PERIOD			=	0x208
+DISPLAY_V_PERIOD			=	0x20A
+DISPLAY_H_SYNC_LEN			=	0x20C
+DISPLAY_V_SYNC_LEN			=	0x20E
+DISPLAY_H_BACK_PORCH		=	0x210
+DISPLAY_V_BACK_PORCH		=	0x212
+DISPLAY_H_RES				=	0x214
+DISPLAY_V_RES				=	0x216
+DISPLAY_H_OUT_RES			=	0x218
+DISPLAY_V_OUT_RES			=	0x220
+DISPLAY_PEAKING_THRESH		=	0x222
+DISPLAY_PIPELINE            =	0x224
+DISPLAY_MANUAL_SYNC         =	0x228
+
+CCM_11						=	0x260
+CCM_12						=	0x262
+CCM_13						=	0x264
+CCM_21						=	0x268
+CCM_22						=	0x26A
+CCM_23						=	0x26C
+CCM_31						=	0x26E
+CCM_32						=	0x270
+CCM_33						=	0x272
+WL_DYNDLY_0					=	0x274
+WL_DYNDLY_1					=	0x276
+WL_DYNDLY_2					=	0x278
+WL_DYNDLY_3					=	0x27A
+
+MMU_CONFIG_ADDRESS          =	0x290
+
+SYSTEM_RESET				=	0x300
+FPGA_VERSION				=	0x302
+FPGA_SUBVERSION             =	0x304
+DCG_MEM_START				=	0x800
+
+
+
+                                      
+#Image sensor control register
+IMAGE_SENSOR_CONTROL_ADDR		=	0
+
+IMAGE_SENSOR_RESET_MASK			=	0x1
+IMAGE_SENSOR_EVEN_TIMESLOT_MASK =	0x2
+
+#Phase control register
+
+IMAGE_SENSOR_CLK_PHASE_ADDR		=	(SENSOR_CLK_PHASE * 2)
+IMAGE_SENSOR_CLK_PHASE_OFFSET	=	0
+
+#Sync Token Register
+IMAGE_SENSOR_SYNC_TOKEN_ADDR	=	(SENSOR_SYNC_TOKEN * 2)
+
+#Data Correct
+#Indicates data channels 11:0 and sync are correct
+# Format: data[11], data[10], ... data[0], sync
+
+IMAGE_SENSOR_DATA_CORRECT_ADDR	=	(SENSOR_DATA_CORRECT * 2)
+
+#Image data write path FIFO thresholds for start and stop of data write to ram
+
+IMAGE_SENSOR_FIFO_START_W_THRESH_ADDR	=	(SENSOR_FIFO_START_W_THRESH	* 2)
+IMAGE_SENSOR_FIFO_STOP_W_THRESH_ADDR	=	(SENSOR_FIFO_STOP_W_THRESH * 2)
+
+IMAGER_FRAME_PERIOD_ADDR			=	(IMAGER_FRAME_PERIOD * 2)
+IMAGER_INT_TIME_ADDR				=	(IMAGER_INT_TIME * 2)
+
+SENSOR_SCI_CONTROL_ADDR				=	(SENSOR_SCI_CONTROL * 2)
+SENSOR_SCI_CONTROL_RUN_MASK			=	0x1						#Write 1 to start, reads 1 while busy, 0 when done
+SENSOR_SCI_CONTROL_RW_MASK			=	0x2						#Read == 1, Write == 0
+SENSOR_SCI_CONTROL_FIFO_FULL_MASK	=	0x4					#1 indicates FIFO is full
+SENSOR_SCI_ADDRESS_ADDR				=	(SENSOR_SCI_ADDRESS * 2)
+SENSOR_SCI_DATALEN_ADDR				=	(SENSOR_SCI_DATALEN * 2)
+SENSOR_SCI_FIFO_WR_ADDR_ADDR		=	(SENSOR_SCI_FIFO_WR_ADDR * 2)
+SENSOR_SCI_READ_DATA_ADDR			=	(SENSOR_SCI_READ_DATA * 2)
+
+SEQ_CTL_ADDR					=	(SEQ_CTL * 2)
+SEQ_CTL_SW_TRIG_MASK			=	0x1
+SEQ_CTL_START_REC_MASK			=	0x2
+SEQ_CTL_STOP_REC_MASK			=	0x4
+SEQ_CTL_TRIG_DELAY_MODE_MASK	=	0x8
+
+SEQ_STATUS_ADDR					=	(SEQ_STATUS * 2)
+SEQ_STATUS_RECORDING_MASK		=	0x1
+SEQ_STATUS_MD_FIFO_EMPTY_MASK	=	0x2
+
+SEQ_FRAME_SIZE_ADDR				=	(SEQ_FRAME_SIZE * 2)
+SEQ_REC_REGION_START_ADDR		=	(SEQ_REC_REGION_START * 2)
+SEQ_REC_REGION_END_ADDR			=	(SEQ_REC_REGION_END * 2)
+SEQ_LIVE_ADDR_0_ADDR			=	(SEQ_LIVE_ADDR_0 * 2)
+SEQ_LIVE_ADDR_1_ADDR			=	(SEQ_LIVE_ADDR_1 * 2)
+SEQ_LIVE_ADDR_2_ADDR			=	(SEQ_LIVE_ADDR_2 * 2)
+SEQ_TRIG_DELAY_ADDR				=	(SEQ_TRIG_DELAY * 2)
+SEQ_MD_FIFO_READ_ADDR			=	(SEQ_MD_FIFO_READ * 2)
+SEQ_PGM_MEM_START_ADDR			=	(SEQ_PGM_MEM_START * 2)
+
+SENSOR_MAGIC_START_DELAY_ADDR	=	(SENSOR_MAGIC_START_DELAY * 2)
+SENSOR_LINE_PERIOD_ADDR			=	(SENSOR_LINE_PERIOD * 2)
+
+TRIG_ENABLE_ADDR				=	(TRIG_ENABLE * 2)
+TRIG_INVERT_ADDR				=	(TRIG_INVERT * 2)
+TRIG_DEBOUNCE_ADDR				=	(TRIG_DEBOUNCE * 2)
+
+IO_OUT_LEVEL_ADDR				=	(IO_OUT_LEVEL * 2)		#1 outputs high if selected (invert does not affect this)
+IO_OUT_SOURCE_ADDR				=	(IO_OUT_SOURCE * 2)		#1 selects int time, 0 selects IO_OUT_LEVEL
+IO_OUT_INVERT_ADDR				=	(IO_OUT_INVERT * 2)		#1 inverts int time signal
+IO_IN_ADDR						=	(IO_IN * 2)		#1 inverts int time signal
+
+EXT_SHUTTER_CTL_ADDR			=	(EXT_SHUTTER_CTL * 2)
+EXT_SH_TRIGD_EXP_EN_MASK		=	0x1
+EXT_SH_TRIGD_EXP_EN_OFFSET		=	0
+EXT_SH_GATING_EN_MASK			=	0x2
+EXT_SH_GATING_EN_OFFSET			=	1
+EXT_SH_SRC_EN_MASK				=	0x1C
+EXT_SH_SRC_EN_OFFSET			=	2
+
+GPMC_PAGE_OFFSET_ADDR			=	(GPMC_PAGE_OFFSET * 2)
+
+DISPLAY_CTL_ADDR				=	(DISPLAY_CTL * 2)
+DISPLAY_CTL_ADDRESS_SEL_OFFSET	=	0
+DISPLAY_CTL_SCALER_NN_OFFSET	=	1
+DISPLAY_CTL_SYNC_INH_OFFSET		=	2
+DISPLAY_CTL_READOUT_INH_OFFSET	=	3
+DISPLAY_CTL_COLOR_MODE_OFFSET	=	4
+DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET	=	5
+DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET	=	6
+DISPLAY_CTL_ZEBRA_EN_OFFSET		=	9
+
+DISPLAY_CTL_ADDRESS_SEL_MASK	=	(1 << DISPLAY_CTL_ADDRESS_SEL_OFFSET)
+DISPLAY_CTL_SCALER_NN_MASK		=	(1 << DISPLAY_CTL_SCALER_NN_OFFSET)
+DISPLAY_CTL_SYNC_INH_MASK		=	(1 << DISPLAY_CTL_SYNC_INH_OFFSET)
+DISPLAY_CTL_READOUT_INH_MASK	=	(1 << DISPLAY_CTL_READOUT_INH_OFFSET)
+DISPLAY_CTL_COLOR_MODE_MASK		=	(1 << DISPLAY_CTL_COLOR_MODE_OFFSET)
+DISPLAY_CTL_FOCUS_PEAK_EN_MASK	=	(1 << DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET)
+DISPLAY_CTL_FOCUS_PEAK_COLOR_MASK	=	(7 << DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET)
+DISPLAY_CTL_ZEBRA_EN_MASK		=	(1 << DISPLAY_CTL_ZEBRA_EN_OFFSET)
+
+DISPLAY_FRAME_ADDRESS_ADDR		=	(DISPLAY_FRAME_ADDRESS * 2)
+DISPLAY_FPN_ADDRESS_ADDR		=	(DISPLAY_FPN_ADDRESS * 2)
+DISPLAY_GAIN_ADDR				=	(DISPLAY_GAIN * 2)
+DISPLAY_H_PERIOD_ADDR			=	(DISPLAY_H_PERIOD * 2)
+DISPLAY_V_PERIOD_ADDR			=	(DISPLAY_V_PERIOD * 2)
+DISPLAY_H_SYNC_LEN_ADDR			=	(DISPLAY_H_SYNC_LEN * 2)
+DISPLAY_V_SYNC_LEN_ADDR			=	(DISPLAY_V_SYNC_LEN * 2)
+DISPLAY_H_BACK_PORCH_ADDR		=	(DISPLAY_H_BACK_PORCH * 2)
+DISPLAY_V_BACK_PORCH_ADDR		=	(DISPLAY_V_BACK_PORCH * 2)
+DISPLAY_H_RES_ADDR				=	(DISPLAY_H_RES * 2)
+DISPLAY_V_RES_ADDR				=	(DISPLAY_V_RES * 2)
+DISPLAY_H_OUT_RES_ADDR			=	(DISPLAY_H_OUT_RES * 2)
+DISPLAY_V_OUT_RES_ADDR			=	(DISPLAY_V_OUT_RES * 2)
+DISPLAY_PEAKING_THRESH_ADDR		=	(DISPLAY_PEAKING_THRESH * 2)
+
+DISPLAY_PIPELINE_ADDR           	=	(DISPLAY_PIPELINE * 2)
+DISPLAY_PIPELINE_BIPASS_FPN         =	(1 << 0)
+DISPLAY_PIPELINE_BIPASS_GAIN        =	(1 << 1)
+DISPLAY_PIPELINE_BIPASS_DEMOSIAC    =	(1 << 2)
+DISPLAY_PIPELINE_BIPASS_COLORMATRIX =	(1 << 3)
+DISPLAY_PIPELINE_BIPASS_GAMMA_TABLE =	(1 << 4)
+DISPLAY_PIPELINE_RAW_12BPP          =	(1 << 5)
+DISPLAY_PIPELINE_RAW_16BPP          =	(1 << 6)
+DISPLAY_PIPELINE_RAW_RIGHT_JUSTIFY  =	(1 << 7)
+DISPLAY_PIPELINE_RAW_TEST_PATTERN   =	(1 << 15)
+
+DISPLAY_MANUAL_SYNC_ADDR        =	(DISPLAY_MANUAL_SYNC * 2)
+DISPLAY_MANUAL_SYNC_MASK        =	(1)
+
+CCM_11_ADDR						=	(CCM_11 * 2)
+CCM_12_ADDR						=	(CCM_12 * 2)
+CCM_13_ADDR						=	(CCM_13 * 2)
+CCM_21_ADDR						=	(CCM_21 * 2)
+CCM_22_ADDR						=	(CCM_22 * 2)
+CCM_23_ADDR						=	(CCM_23 * 2)
+CCM_31_ADDR						=	(CCM_31 * 2)
+CCM_32_ADDR						=	(CCM_32 * 2)
+CCM_33_ADDR						=	(CCM_33 * 2)
+
+WL_DYNDLY_0_ADDR				=	(WL_DYNDLY_0 * 2)
+WL_DYNDLY_1_ADDR				=	(WL_DYNDLY_1 * 2)
+WL_DYNDLY_2_ADDR				=	(WL_DYNDLY_2 * 2)
+WL_DYNDLY_3_ADDR				=	(WL_DYNDLY_3 * 2)
+
+MMU_CONFIG_ADDR                 =	(MMU_CONFIG_ADDRESS * 2)
+MMU_INVERT_CS                   =	1
+MMU_SWITCH_STUFFED              =	2
+
+SYSTEM_RESET_ADDR				=	(SYSTEM_RESET * 2)
+
+FPGA_VERSION_ADDR				=	(FPGA_VERSION * 2)
+FPGA_SUBVERSION_ADDR            =	(FPGA_SUBVERSION * 2)
+
+DCG_MEM_START_ADDR				=	(DCG_MEM_START * 2)
+
+
+
+#========================================================================================================
+#                                   New format registers
+
+#---------------------------------- Wishbone RAM Access -----------------------------------------
+
+
+RAM_REG_BASE                =	(0x2000)
+RAM_REG_BLOCK               =	(RAM_REG_BASE)
+
+# identifier
+RAM_IDENTIFIER_REG          =	(RAM_REG_BLOCK + 0x00)
+RAM_VERSION_REG             =	(RAM_REG_BLOCK + 0x04)
+RAM_SUBVERSION_REG          =	(RAM_REG_BLOCK + 0x08)
+
+# reset and control
+RAM_CONTROL                 =	(RAM_REG_BLOCK + 0x0C)
+RAM_STATUS                  =	(RAM_REG_BLOCK + 0x10)
+
+RAM_ADDRESS                 =	(RAM_REG_BLOCK + 0x20) # 32 bit 
+RAM_BURST_LENGTH            =	(RAM_REG_BLOCK + 0x24)
+
+# Read/write buffers
+RAM_BUFFER_START            =	(RAM_REG_BLOCK + 0x200) # 1024*16bit (64-ram page) 
+RAM_BUFFER_END              =	(RAM_REG_BLOCK + 0xA00)
+
+
+
+RAM_IDENTIFIER =	(0x0040)
+
+RAM_CONTROL_TRIGGER_READ  =	0x0001
+RAM_CONTROL_TRIGGER_WRITE =	0x0002
+
+RAM_BURST_LENGTH_MAX =	32
+
+#------------------------------------------------------------------------------------------------
+
+
+
+
diff --git a/sensorobj.py b/sensorobj.py
new file mode 100644
index 0000000..e396555
--- /dev/null
+++ b/sensorobj.py
@@ -0,0 +1,128 @@
+
+from dataclasses import dataclass
+
+
+
+@dataclass
+class ImageGeometryData:
+	hres: int = 1280
+	vres: int = 1024
+	hoffset: int = 0
+	voffset: int = 0
+
+# Image timing constraings are a function of the selected frame geometry, so this
+# structure is to be returned by the ops->get_constraings function for a given
+# X/Y resolution.
+
+
+@dataclass
+class ImageConstraintsData:
+	t_min_period: int = 0
+	t_max_period: int = 0
+
+	# Exposure timing must satisfy the constraints:
+	# tMinExposure <= tExposure <= (tFramePeriod * tMaxShutter) / 360 - tExposureDelay
+
+	t_min_exposure: int = 0
+	t_exposure_delay: int = 0
+	t_max_shutter: int = 0
+
+	# All timing values will be implicitly quantized by this frequency. */
+	f_quantization: int = 0
+
+
+@dataclass
+class ImageSensorData:
+	#struct fpga *fpga;
+	#const struct image_sensor_ops *ops;
+
+	# Image Sensor descriptions. 
+	name: str = " "
+	mfr: str = " "
+	iformat: int = 0
+	
+	# Image Sensor Limits
+	h_max_res: int = 0
+	v_max_res: int = 0
+	h_min_res: int = 0
+	v_min_res: int = 0
+	h_increment: int = 0
+	v_increment: int = 0
+	pixel_rate: int = 0
+	adc_count: int = 0
+
+	# Black Pixel Regions. 
+	blk_top: int = 0
+	blk_bottom: int = 0
+	blk_left: int = 0
+	blk_right: int = 0
+
+
+
+
+# @dataclass
+# class ImageSensorData:
+# 	#struct fpga *fpga;
+# 	#const struct image_sensor_ops *ops;
+
+# 	# Image Sensor descriptions. 
+# 	name: str = " "
+# 	mfr: str = " "
+# 	iformat: int = 0
+	
+# 	# Image Sensor Limits
+# 	h_max_res: int = 0
+# 	v_max_res: int = 0
+# 	h_min_res: int = 0
+# 	v_min_res: int = 0
+# 	h_increment: int = 0
+# 	v_increment: int = 0
+# 	pixel_rate: int = 0
+# 	adc_count: int = 0
+
+# 	# Black Pixel Regions. 
+# 	blk_top: int = 0
+# 	blk_bottom: int = 0
+# 	blk_left: int = 0
+# 	blk_right: int = 0
+
+
+
+
+
+'''
+@dataclass
+class image_sensor_ops {
+	int (*set_exposure)(struct image_sensor *sensor, const struct image_geometry *g, unsigned long long nsec);
+	int (*set_period)(struct image_sensor *sensor, const struct image_geometry *g, unsigned long long nsec);
+	int (*set_resolution)(struct image_sensor *sensor, const struct image_geometry *g);
+	int (*get_constraints)(struct image_sensor *sensor, const struct image_geometry *g, struct image_constraints *c);
+	/* ADC Gain Configuration and Calibration */
+	int (*set_gain)(struct image_sensor *sensor, int gain, FILE *cal);
+	int (*cal_gain)(struct image_sensor *sensor, const struct image_geometry *g, const void *frame, FILE *cal);
+	char *(*cal_suffix)(struct image_sensor *sensor, char *filename, size_t maxlen);
+};
+'''
+
+def luxnum(self):
+	return 5
+
+class SensorObject():
+	# def __init__(self, mem):
+	def __init__(self):
+		print ("SensorObject Init")
+		#self.mem = mem
+		#print (mem)
+		# self.SensorInit()
+
+	# print ("class SensorObject")
+	# print (mem)
+	
+	ImageGeometry = ImageGeometryData()
+	ImageConstraints = ImageConstraintsData()
+	ImageSensor = ImageSensorData()
+	OpsDict = {}
+	# ImageGeometry.hres = 500000001
+	# ImageSensor = ImageSensorData
+	numfunc = luxnum
+
diff --git a/spi.py b/spi.py
new file mode 100644
index 0000000..2ac8366
--- /dev/null
+++ b/spi.py
@@ -0,0 +1,24 @@
+from periphery import SPI
+
+
+# Now set up sensor with SPI
+
+SPI_DEV = "/dev/spidev3.0"
+SPI_MODE = 1
+SPI_SPEED = 1000000
+SPI_BITORDER = "msb"
+SPI_BITS = 16
+
+spi = 0
+
+def spi_open():
+	global spi
+	spi = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+	#print (spi)
+
+def spi_transfer(data):
+	global spi
+	spilist = [data >> 8, data & 255]
+	#print (spilist)
+	spi.transfer(spilist)
+
-- 
2.7.4


From 51389069236c791a57c144c7463e229242c3a960 Mon Sep 17 00:00:00 2001
From: Johan Thornton <j@jth.co>
Date: Thu, 1 Nov 2018 15:27:08 -0700
Subject: [PATCH 2/7] more methods for lux1310

---
 camobj.py        |  15 ++-
 lux1310.py       | 278 +++++++++++++++++++++++++++++++++++++------------------
 memobj.py        |  29 ++++--
 mmapregisters.py | 154 +++++++++++++++---------------
 4 files changed, 294 insertions(+), 182 deletions(-)

diff --git a/camobj.py b/camobj.py
index b3aef7b..ab97001 100644
--- a/camobj.py
+++ b/camobj.py
@@ -92,12 +92,11 @@ class CamObject:
 
 	def TestLive(self):
 		print("!!!!!")
-		tfunc = self.sensor.OpsDict["SetPeriod"]
-		tfunc()
+		self.sensor.OpsDict["SetPeriod"](self, 1000000)
 		self.sensor.OpsDict["SetExposure"]()
 		self.sensor.OpsDict["CalSuffix"]()
-		self.sensor.OpsDict["SetGain"](12)
-
+		self.sensor.OpsDict["SetGain"](self, 12)
+		
 		# self.CamInit()
 
 	def SetLiveTiming(self, geometry, hOutRes, vOutRes, maxFPS):
@@ -141,10 +140,10 @@ class CamObject:
 
 		# Configure the FIFO threshold and image sequencer
 
-		self.mem.fpga_mmio.write32(SEQ_LIVE_ADDR_0, MAX_FRAME_LENGTH)
-		self.mem.fpga_mmio.write32(SEQ_LIVE_ADDR_1, MAX_FRAME_LENGTH * 2)
-		self.mem.fpga_mmio.write32(SEQ_LIVE_ADDR_2, MAX_FRAME_LENGTH * 3)
-		self.mem.fpga_mmio.write32(SEQ_REC_REGION_START_ADDR, MAX_FRAME_LENGTH * 3)
+		self.mem.fpga_write32(SEQ_LIVE_ADDR_0, MAX_FRAME_LENGTH)
+		self.mem.fpga_write32(SEQ_LIVE_ADDR_1, MAX_FRAME_LENGTH * 2)
+		self.mem.fpga_write32(SEQ_LIVE_ADDR_2, MAX_FRAME_LENGTH * 3)
+		self.mem.fpga_write32(SEQ_REC_REGION_START, MAX_FRAME_LENGTH * 3)
 
 
 
diff --git a/lux1310.py b/lux1310.py
index 1c3ea9d..dc9d4b4 100644
--- a/lux1310.py
+++ b/lux1310.py
@@ -6,7 +6,7 @@ from mmapregisters import *
 import time
 from dataclasses import dataclass
 import struct
-
+from lux1310waves import *
 from lux1310sensor import *
 
 '''
@@ -31,99 +31,195 @@ class FPGA1310Sensor:
 
 '''
 
-Lux1310GainData = [
-    {   # x1 - 0dB 
-        "vrstb": 2700,
-        "vrst": 3300,
-        "vrsth": 3600,
-        "sampling": 0x7f,
-        "feedback": 0x7f,
-        "gain_bit": 3,
-        "analog_gain": 0,
-    },
-    { # x2 - 6dB 
-        "vrstb": 2700,
-        "vrst": 3300,
-        "vrsth": 3600,
-        "sampling": 0xfff,
-        "feedback": 0x7f,
-        "gain_bit": 3,
-        "analog_gain": 6,
-    },
-    { # x4 - 12dB 
-        "vrstb": 2700,
-        "vrst": 3300,
-        "vrsth": 3600,
-        "sampling": 0xfff,
-        "feedback": 0x7f,
-        "gain_bit": 0,
-        "analog_gain": 12,
-    },
-    { # x8 - 18dB 
-        "vrstb": 1700,
-        "vrst": 2300,
-        "vrsth": 2600,
-        "sampling": 0xfff,
-        "feedback": 0x7,
-        "gain_bit": 0,
-        "analog_gain": 18,
-    },
-    { # x16 - 24dB 
-        "vrstb": 1700,
-        "vrst": 2300,
-        "vrsth": 2600,
-        "sampling": 0xfff,
-        "feedback": 0x1,
-        "gain_bit": 0,
-        "analog_gain": 24,
-    }
-]
-
-
-
-def Lux1310SetExposure():
-	print ("Lux1310SetExposure")
-
-def Lux1310SetPeriod():
-	print ("Lux1310SetPeriod")
-
-def Lux1310SetResolutions():
-	pass
-
-def Lux1310GetConstraints():
-	pass
-
-def Lux1310SetGain(gain):
-	print ("Lux1310SetGain")
-	for gdict in Lux1310GainData:
-		if gdict["analog_gain"] == gain:
-			print (gdict)
-			break
-	pass
-
-def Lux1310CalGain():
-	pass
-
-def Lux1310CalSuffix():
-	pass
-
-
-
-Lux1310OpsDict = {
-	"SetExposure": Lux1310SetExposure,
-	"SetPeriod": Lux1310SetPeriod,
-	"SetResolutions": Lux1310SetResolutions,
-	"GetConstraints": Lux1310GetConstraints,
-	"SetGain": Lux1310SetGain,
-	"CalGain": Lux1310CalGain,
-	"CalSuffix": Lux1310CalSuffix
-}
+
 
 
 
 
 class Lux1310Object(SensorObject):
 
+
+
+	# Gain parameters
+	Lux1310GainData = [
+		{   # x1 - 0dB 
+			"vrstb": 2700,
+			"vrst": 3300,
+			"vrsth": 3600,
+			"sampling": 0x7f,
+			"feedback": 0x7f,
+			"gain_bit": 3,
+			"analog_gain": 0,
+		},
+		{ # x2 - 6dB 
+			"vrstb": 2700,
+			"vrst": 3300,
+			"vrsth": 3600,
+			"sampling": 0xfff,
+			"feedback": 0x7f,
+			"gain_bit": 3,
+			"analog_gain": 6,
+		},
+		{ # x4 - 12dB 
+			"vrstb": 2700,
+			"vrst": 3300,
+			"vrsth": 3600,
+			"sampling": 0xfff,
+			"feedback": 0x7f,
+			"gain_bit": 0,
+			"analog_gain": 12,
+		},
+		{ # x8 - 18dB 
+			"vrstb": 1700,
+			"vrst": 2300,
+			"vrsth": 2600,
+			"sampling": 0xfff,
+			"feedback": 0x7,
+			"gain_bit": 0,
+			"analog_gain": 18,
+		},
+		{ # x16 - 24dB 
+			"vrstb": 1700,
+			"vrst": 2300,
+			"vrsth": 2600,
+			"sampling": 0xfff,
+			"feedback": 0x1,
+			"gain_bit": 0,
+			"analog_gain": 24,
+		}
+	]
+
+	def Lux1310SCIWrite(self, addr, value):
+		pass
+
+
+	def FPGAAndBits(self, addr, mask):
+		readdata = self.fpga_read16(addr)
+		readdata &= mask
+		self.fpga_write16(addr, readdata)
+
+	def FPGAOrBits(self, addr, mask):
+		readdata = self.fpga_read16(addr)
+		readdata |= mask
+		self.fpga_write16(addr, readdata)
+
+	def Lux1310SCIWrite(self, addr, value):
+		'''Perform a simple 16bit register write'''
+		# Clear RW, and setup the transfer and fill the FIFO
+		FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
+		self.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.fpga_write16(SENSOR_SCI_DATALEN, 2)
+		self.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, (value >> 8) & 0xff)
+		self.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, value & 0xff)
+
+		# Start the transfer and then wait for completion.
+		FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		while self.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+			pass
+
+	def Lux1310SCIWriteBuf(self, addr, values):
+		'''Perform a series of 8 bit register writes'''
+		# Clear RW, and setup the transfer and fill the FIFO
+		FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
+		self.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.fpga_write16(SENSOR_SCI_DATALEN, len(values))
+		for b in values:
+			self.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, b)
+
+		# Start the transfer and then wait for completion.
+		FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		while self.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+			pass
+
+	def Lux1310SCIRead(self, addr, value):
+		'''Perform a simple 16bit register read'''
+		# Set RW, address and length.
+		FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RW_MASK)
+		self.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.fpga_write16(SENSOR_SCI_DATALEN, 2)
+		
+		# Start the transfer and then wait for completion.
+		Lux1310OrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		while self.fpga+read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+			pass
+
+		return self.fpga_read16(SENSOR_SCI_READ_DATA)
+	
+
+	def Lux1310WriteWaveTab(self, wavedict):
+		waves = wavedict["table"]
+		#Lux1310Write()
+
+	def lux1310_min_period(self, wavelen):
+	
+		t_hblank = 2
+		t_tx = 25
+		t_fovf = 50
+		t_fovb = 50 # Duration between PRSTN falling and TXN falling (I think) 
+		
+		#print (self)
+		
+		g = self.ImageGeometry
+		# Sum up the minimum number of clocks to read a frame at this resolution 
+		t_read = (g.hres / LUX1310_HRES_INCREMENT)
+		t_row = max(t_read + t_hblank, wavelen + 3)
+		print (f"comparing {t_read + t_hblank} and {wavelen + 3}")
+		minperiod =  (t_row * g.vres) + t_tx + t_fovf + t_fovb
+		# print (f" minperiod = {minperiod}")
+		return minperiod
+
+	def Lux1310SetExposure():
+		print ("Lux1310SetExposure")
+
+	def Lux1310SetPeriod(self, nsec):
+		print (f"Lux1310SetPeriod: {nsec}")
+		t_frame = ((nsec * LUX1310_TIMING_CLOCK_RATE) + 999999999) / 1000000000
+		print (f" t_frame = {t_frame}")
+		
+		self.mem.fpga_write32(IMAGER_FRAME_PERIOD, int(t_frame))
+		for i in Lux1310WaveTables:
+			# if t_frame >= self.lux1310_min_period(i[""])
+			#print (i["read_delay"])
+			min_period = self.sensor.lux1310_min_period(i["read_delay"])
+			print (f"{i['read_delay']}: min period is {min_period}")
+			if t_frame >= min_period:
+				self.sensor.Lux1310WriteWaveTab(i)
+				break
+		
+	def Lux1310SetResolutions():
+		pass
+
+	def Lux1310GetConstraints():
+		pass
+
+	def Lux1310SetGain(self, gain):
+		print (f"Lux1310SetGain: {gain}")
+		for gdict in self.sensor.Lux1310GainData:
+			if gdict["analog_gain"] == gain:
+				print (gdict)
+				break
+		pass
+
+	def Lux1310CalGain():
+		pass
+
+	def Lux1310CalSuffix():
+		pass
+
+
+
+
+	Lux1310OpsDict = {
+		"SetExposure": Lux1310SetExposure,
+		"SetPeriod": Lux1310SetPeriod,
+		"SetResolutions": Lux1310SetResolutions,
+		"GetConstraints": Lux1310GetConstraints,
+		"SetGain": Lux1310SetGain,
+		"CalGain": Lux1310CalGain,
+		"CalSuffix": Lux1310CalSuffix
+	}
+
+
 	OpsDict = Lux1310OpsDict
 
 	# print ("class SO")
@@ -225,11 +321,11 @@ class Lux1310Object(SensorObject):
 
 		# Set up DAC with SPI
 	def lux1310SetReset(self, value):
-		readvalue = self.mem.fpga_mmio.read16(IMAGE_SENSOR_CONTROL_ADDR)
+		readvalue = self.mem.fpga_mmio.read16(IMAGE_SENSOR_CONTROL)
 		if value:
-			self.mem.fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue | IMAGE_SENSOR_RESET_MASK)
+			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue | IMAGE_SENSOR_RESET_MASK)
 		else:
-			self.mem.fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue & ~IMAGE_SENSOR_RESET_MASK)
+			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue & ~IMAGE_SENSOR_RESET_MASK)
 
 	def SensorInit(self):
 		#self.ImageSensor = ImageSensorData()
diff --git a/memobj.py b/memobj.py
index 3772903..a9d8d03 100644
--- a/memobj.py
+++ b/memobj.py
@@ -18,17 +18,34 @@ class MemObject:
 	#print ("Created!")
 	fpga_mmio = MMIO(0x01000000, 0x3000)
 
-	def mm_write16(self, addr, data):
-		self.fpga_mmio.write16(addr, data)
+	# don't use these ones
+	# def mm_write16(self, addr, data):
+	# 	self.fpga_mmio.write16(addr, data)
+
+	# def mm_write32(self, addr, data):
+	# 	self.fpga_mmio.write32(addr, data)
+
+	# use these two functions to write to the (16 bit) FPGA address
+	def fpga_write16(self, addr, data):
+		self.fpga_mmio.write16(2 * addr, data)
+
+	def fpga_write32(self, addr, data):
+		self.fpga_mmio.write32(2 * addr, data)
+
+
+	def fpga_read32(self, addr):
+		return self.mem.fpga_mmio.read32(2 * addr)
+
+	def fpga_read16(self, addr):
+		return self.mem.fpga_mmio.read16(2 * addr)
+
 
-	def mm_write32(self, addr, data):
-		self.fpga_mmio.write32(addr, data)
 
 	def mm_open(self):
 		# Open FPGA memory map
 		#rint("Open!")
-		self.mm_write32(IMAGER_FRAME_PERIOD_ADDR, 100*4000)  #Disable integration
-		self.mm_write32(IMAGER_INT_TIME_ADDR, 100*4100)
+		self.fpga_write32(IMAGER_FRAME_PERIOD, 100*4000)  #Disable integration
+		self.fpga_write32(IMAGER_INT_TIME, 100*4100)
 
 		#print (self.fpga_mmio.read32(IMAGER_INT_TIME_ADDR))
 
diff --git a/mmapregisters.py b/mmapregisters.py
index 56fca82..2b69d62 100644
--- a/mmapregisters.py
+++ b/mmapregisters.py
@@ -85,75 +85,75 @@ DCG_MEM_START				=	0x800
 
                                       
 #Image sensor control register
-IMAGE_SENSOR_CONTROL_ADDR		=	0
+IMAGE_SENSOR_CONTROL		=	0		# this used to have an _ADDR suffix
 
 IMAGE_SENSOR_RESET_MASK			=	0x1
 IMAGE_SENSOR_EVEN_TIMESLOT_MASK =	0x2
 
 #Phase control register
 
-IMAGE_SENSOR_CLK_PHASE_ADDR		=	(SENSOR_CLK_PHASE * 2)
+ ### IMAGE_SENSOR_CLK_PHASE_ADDR		=	(SENSOR_CLK_PHASE * 2)
 IMAGE_SENSOR_CLK_PHASE_OFFSET	=	0
 
 #Sync Token Register
-IMAGE_SENSOR_SYNC_TOKEN_ADDR	=	(SENSOR_SYNC_TOKEN * 2)
+ ### IMAGE_SENSOR_SYNC_TOKEN_ADDR	=	(SENSOR_SYNC_TOKEN * 2)
 
 #Data Correct
 #Indicates data channels 11:0 and sync are correct
 # Format: data[11], data[10], ... data[0], sync
 
-IMAGE_SENSOR_DATA_CORRECT_ADDR	=	(SENSOR_DATA_CORRECT * 2)
+ ### IMAGE_SENSOR_DATA_CORRECT_ADDR	=	(SENSOR_DATA_CORRECT * 2)
 
 #Image data write path FIFO thresholds for start and stop of data write to ram
 
-IMAGE_SENSOR_FIFO_START_W_THRESH_ADDR	=	(SENSOR_FIFO_START_W_THRESH	* 2)
-IMAGE_SENSOR_FIFO_STOP_W_THRESH_ADDR	=	(SENSOR_FIFO_STOP_W_THRESH * 2)
+ ### IMAGE_SENSOR_FIFO_START_W_THRESH_ADDR	=	(SENSOR_FIFO_START_W_THRESH	* 2)
+ ### IMAGE_SENSOR_FIFO_STOP_W_THRESH_ADDR	=	(SENSOR_FIFO_STOP_W_THRESH * 2)
 
-IMAGER_FRAME_PERIOD_ADDR			=	(IMAGER_FRAME_PERIOD * 2)
-IMAGER_INT_TIME_ADDR				=	(IMAGER_INT_TIME * 2)
+ ### IMAGER_FRAME_PERIOD_ADDR			=	(IMAGER_FRAME_PERIOD * 2)
+ ### IMAGER_INT_TIME_ADDR				=	(IMAGER_INT_TIME * 2)
 
-SENSOR_SCI_CONTROL_ADDR				=	(SENSOR_SCI_CONTROL * 2)
+ ### SENSOR_SCI_CONTROL_ADDR				=	(SENSOR_SCI_CONTROL * 2)
 SENSOR_SCI_CONTROL_RUN_MASK			=	0x1						#Write 1 to start, reads 1 while busy, 0 when done
 SENSOR_SCI_CONTROL_RW_MASK			=	0x2						#Read == 1, Write == 0
 SENSOR_SCI_CONTROL_FIFO_FULL_MASK	=	0x4					#1 indicates FIFO is full
-SENSOR_SCI_ADDRESS_ADDR				=	(SENSOR_SCI_ADDRESS * 2)
-SENSOR_SCI_DATALEN_ADDR				=	(SENSOR_SCI_DATALEN * 2)
-SENSOR_SCI_FIFO_WR_ADDR_ADDR		=	(SENSOR_SCI_FIFO_WR_ADDR * 2)
-SENSOR_SCI_READ_DATA_ADDR			=	(SENSOR_SCI_READ_DATA * 2)
+ ### SENSOR_SCI_ADDRESS_ADDR				=	(SENSOR_SCI_ADDRESS * 2)
+ ### SENSOR_SCI_DATALEN_ADDR				=	(SENSOR_SCI_DATALEN * 2)
+ ### SENSOR_SCI_FIFO_WR_ADDR_ADDR		=	(SENSOR_SCI_FIFO_WR_ADDR * 2)
+ ### SENSOR_SCI_READ_DATA_ADDR			=	(SENSOR_SCI_READ_DATA * 2)
 
-SEQ_CTL_ADDR					=	(SEQ_CTL * 2)
+ ### SEQ_CTL_ADDR					=	(SEQ_CTL * 2)
 SEQ_CTL_SW_TRIG_MASK			=	0x1
 SEQ_CTL_START_REC_MASK			=	0x2
 SEQ_CTL_STOP_REC_MASK			=	0x4
 SEQ_CTL_TRIG_DELAY_MODE_MASK	=	0x8
 
-SEQ_STATUS_ADDR					=	(SEQ_STATUS * 2)
+ ### SEQ_STATUS_ADDR					=	(SEQ_STATUS * 2)
 SEQ_STATUS_RECORDING_MASK		=	0x1
 SEQ_STATUS_MD_FIFO_EMPTY_MASK	=	0x2
 
-SEQ_FRAME_SIZE_ADDR				=	(SEQ_FRAME_SIZE * 2)
-SEQ_REC_REGION_START_ADDR		=	(SEQ_REC_REGION_START * 2)
-SEQ_REC_REGION_END_ADDR			=	(SEQ_REC_REGION_END * 2)
-SEQ_LIVE_ADDR_0_ADDR			=	(SEQ_LIVE_ADDR_0 * 2)
-SEQ_LIVE_ADDR_1_ADDR			=	(SEQ_LIVE_ADDR_1 * 2)
-SEQ_LIVE_ADDR_2_ADDR			=	(SEQ_LIVE_ADDR_2 * 2)
-SEQ_TRIG_DELAY_ADDR				=	(SEQ_TRIG_DELAY * 2)
-SEQ_MD_FIFO_READ_ADDR			=	(SEQ_MD_FIFO_READ * 2)
-SEQ_PGM_MEM_START_ADDR			=	(SEQ_PGM_MEM_START * 2)
-
-SENSOR_MAGIC_START_DELAY_ADDR	=	(SENSOR_MAGIC_START_DELAY * 2)
-SENSOR_LINE_PERIOD_ADDR			=	(SENSOR_LINE_PERIOD * 2)
-
-TRIG_ENABLE_ADDR				=	(TRIG_ENABLE * 2)
-TRIG_INVERT_ADDR				=	(TRIG_INVERT * 2)
-TRIG_DEBOUNCE_ADDR				=	(TRIG_DEBOUNCE * 2)
-
-IO_OUT_LEVEL_ADDR				=	(IO_OUT_LEVEL * 2)		#1 outputs high if selected (invert does not affect this)
-IO_OUT_SOURCE_ADDR				=	(IO_OUT_SOURCE * 2)		#1 selects int time, 0 selects IO_OUT_LEVEL
-IO_OUT_INVERT_ADDR				=	(IO_OUT_INVERT * 2)		#1 inverts int time signal
-IO_IN_ADDR						=	(IO_IN * 2)		#1 inverts int time signal
-
-EXT_SHUTTER_CTL_ADDR			=	(EXT_SHUTTER_CTL * 2)
+ ### SEQ_FRAME_SIZE_ADDR				=	(SEQ_FRAME_SIZE * 2)
+ ### SEQ_REC_REGION_START_ADDR		=	(SEQ_REC_REGION_START * 2)
+ ### SEQ_REC_REGION_END_ADDR			=	(SEQ_REC_REGION_END * 2)
+ ### SEQ_LIVE_ADDR_0_ADDR			=	(SEQ_LIVE_ADDR_0 * 2)
+ ### SEQ_LIVE_ADDR_1_ADDR			=	(SEQ_LIVE_ADDR_1 * 2)
+ ### SEQ_LIVE_ADDR_2_ADDR			=	(SEQ_LIVE_ADDR_2 * 2)
+ ### SEQ_TRIG_DELAY_ADDR				=	(SEQ_TRIG_DELAY * 2)
+ ### SEQ_MD_FIFO_READ_ADDR			=	(SEQ_MD_FIFO_READ * 2)
+ ### SEQ_PGM_MEM_START_ADDR			=	(SEQ_PGM_MEM_START * 2)
+
+ ### SENSOR_MAGIC_START_DELAY_ADDR	=	(SENSOR_MAGIC_START_DELAY * 2)
+ ### SENSOR_LINE_PERIOD_ADDR			=	(SENSOR_LINE_PERIOD * 2)
+
+ ### TRIG_ENABLE_ADDR				=	(TRIG_ENABLE * 2)
+ ### TRIG_INVERT_ADDR				=	(TRIG_INVERT * 2)
+ ### TRIG_DEBOUNCE_ADDR				=	(TRIG_DEBOUNCE * 2)
+
+ ### IO_OUT_LEVEL_ADDR				=	(IO_OUT_LEVEL * 2)		#1 outputs high if selected (invert does not affect this)
+ ### IO_OUT_SOURCE_ADDR				=	(IO_OUT_SOURCE * 2)		#1 selects int time, 0 selects IO_OUT_LEVEL
+ ### IO_OUT_INVERT_ADDR				=	(IO_OUT_INVERT * 2)		#1 inverts int time signal
+ ### IO_IN_ADDR						=	(IO_IN * 2)		#1 inverts int time signal
+
+ ### EXT_SHUTTER_CTL_ADDR			=	(EXT_SHUTTER_CTL * 2)
 EXT_SH_TRIGD_EXP_EN_MASK		=	0x1
 EXT_SH_TRIGD_EXP_EN_OFFSET		=	0
 EXT_SH_GATING_EN_MASK			=	0x2
@@ -161,9 +161,9 @@ EXT_SH_GATING_EN_OFFSET			=	1
 EXT_SH_SRC_EN_MASK				=	0x1C
 EXT_SH_SRC_EN_OFFSET			=	2
 
-GPMC_PAGE_OFFSET_ADDR			=	(GPMC_PAGE_OFFSET * 2)
+ ### GPMC_PAGE_OFFSET_ADDR			=	(GPMC_PAGE_OFFSET * 2)
 
-DISPLAY_CTL_ADDR				=	(DISPLAY_CTL * 2)
+ ### DISPLAY_CTL_ADDR				=	(DISPLAY_CTL * 2)
 DISPLAY_CTL_ADDRESS_SEL_OFFSET	=	0
 DISPLAY_CTL_SCALER_NN_OFFSET	=	1
 DISPLAY_CTL_SYNC_INH_OFFSET		=	2
@@ -182,22 +182,22 @@ DISPLAY_CTL_FOCUS_PEAK_EN_MASK	=	(1 << DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET)
 DISPLAY_CTL_FOCUS_PEAK_COLOR_MASK	=	(7 << DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET)
 DISPLAY_CTL_ZEBRA_EN_MASK		=	(1 << DISPLAY_CTL_ZEBRA_EN_OFFSET)
 
-DISPLAY_FRAME_ADDRESS_ADDR		=	(DISPLAY_FRAME_ADDRESS * 2)
-DISPLAY_FPN_ADDRESS_ADDR		=	(DISPLAY_FPN_ADDRESS * 2)
-DISPLAY_GAIN_ADDR				=	(DISPLAY_GAIN * 2)
-DISPLAY_H_PERIOD_ADDR			=	(DISPLAY_H_PERIOD * 2)
-DISPLAY_V_PERIOD_ADDR			=	(DISPLAY_V_PERIOD * 2)
-DISPLAY_H_SYNC_LEN_ADDR			=	(DISPLAY_H_SYNC_LEN * 2)
-DISPLAY_V_SYNC_LEN_ADDR			=	(DISPLAY_V_SYNC_LEN * 2)
-DISPLAY_H_BACK_PORCH_ADDR		=	(DISPLAY_H_BACK_PORCH * 2)
-DISPLAY_V_BACK_PORCH_ADDR		=	(DISPLAY_V_BACK_PORCH * 2)
-DISPLAY_H_RES_ADDR				=	(DISPLAY_H_RES * 2)
-DISPLAY_V_RES_ADDR				=	(DISPLAY_V_RES * 2)
-DISPLAY_H_OUT_RES_ADDR			=	(DISPLAY_H_OUT_RES * 2)
-DISPLAY_V_OUT_RES_ADDR			=	(DISPLAY_V_OUT_RES * 2)
-DISPLAY_PEAKING_THRESH_ADDR		=	(DISPLAY_PEAKING_THRESH * 2)
-
-DISPLAY_PIPELINE_ADDR           	=	(DISPLAY_PIPELINE * 2)
+ ### DISPLAY_FRAME_ADDRESS_ADDR		=	(DISPLAY_FRAME_ADDRESS * 2)
+ ### DISPLAY_FPN_ADDRESS_ADDR		=	(DISPLAY_FPN_ADDRESS * 2)
+ ### DISPLAY_GAIN_ADDR				=	(DISPLAY_GAIN * 2)
+ ### DISPLAY_H_PERIOD_ADDR			=	(DISPLAY_H_PERIOD * 2)
+ ### DISPLAY_V_PERIOD_ADDR			=	(DISPLAY_V_PERIOD * 2)
+ ### DISPLAY_H_SYNC_LEN_ADDR			=	(DISPLAY_H_SYNC_LEN * 2)
+ ### DISPLAY_V_SYNC_LEN_ADDR			=	(DISPLAY_V_SYNC_LEN * 2)
+ ### DISPLAY_H_BACK_PORCH_ADDR		=	(DISPLAY_H_BACK_PORCH * 2)
+ ### DISPLAY_V_BACK_PORCH_ADDR		=	(DISPLAY_V_BACK_PORCH * 2)
+ ### DISPLAY_H_RES_ADDR				=	(DISPLAY_H_RES * 2)
+ ### DISPLAY_V_RES_ADDR				=	(DISPLAY_V_RES * 2)
+ ### DISPLAY_H_OUT_RES_ADDR			=	(DISPLAY_H_OUT_RES * 2)
+ ### DISPLAY_V_OUT_RES_ADDR			=	(DISPLAY_V_OUT_RES * 2)
+ ### DISPLAY_PEAKING_THRESH_ADDR		=	(DISPLAY_PEAKING_THRESH * 2)
+
+ ### DISPLAY_PIPELINE_ADDR           	=	(DISPLAY_PIPELINE * 2)
 DISPLAY_PIPELINE_BIPASS_FPN         =	(1 << 0)
 DISPLAY_PIPELINE_BIPASS_GAIN        =	(1 << 1)
 DISPLAY_PIPELINE_BIPASS_DEMOSIAC    =	(1 << 2)
@@ -208,34 +208,34 @@ DISPLAY_PIPELINE_RAW_16BPP          =	(1 << 6)
 DISPLAY_PIPELINE_RAW_RIGHT_JUSTIFY  =	(1 << 7)
 DISPLAY_PIPELINE_RAW_TEST_PATTERN   =	(1 << 15)
 
-DISPLAY_MANUAL_SYNC_ADDR        =	(DISPLAY_MANUAL_SYNC * 2)
+ ### DISPLAY_MANUAL_SYNC_ADDR        =	(DISPLAY_MANUAL_SYNC * 2)
 DISPLAY_MANUAL_SYNC_MASK        =	(1)
 
-CCM_11_ADDR						=	(CCM_11 * 2)
-CCM_12_ADDR						=	(CCM_12 * 2)
-CCM_13_ADDR						=	(CCM_13 * 2)
-CCM_21_ADDR						=	(CCM_21 * 2)
-CCM_22_ADDR						=	(CCM_22 * 2)
-CCM_23_ADDR						=	(CCM_23 * 2)
-CCM_31_ADDR						=	(CCM_31 * 2)
-CCM_32_ADDR						=	(CCM_32 * 2)
-CCM_33_ADDR						=	(CCM_33 * 2)
-
-WL_DYNDLY_0_ADDR				=	(WL_DYNDLY_0 * 2)
-WL_DYNDLY_1_ADDR				=	(WL_DYNDLY_1 * 2)
-WL_DYNDLY_2_ADDR				=	(WL_DYNDLY_2 * 2)
-WL_DYNDLY_3_ADDR				=	(WL_DYNDLY_3 * 2)
-
-MMU_CONFIG_ADDR                 =	(MMU_CONFIG_ADDRESS * 2)
+ ### CCM_11_ADDR						=	(CCM_11 * 2)
+ ### CCM_12_ADDR						=	(CCM_12 * 2)
+ ### CCM_13_ADDR						=	(CCM_13 * 2)
+ ### CCM_21_ADDR						=	(CCM_21 * 2)
+ ### CCM_22_ADDR						=	(CCM_22 * 2)
+ ### CCM_23_ADDR						=	(CCM_23 * 2)
+ ### CCM_31_ADDR						=	(CCM_31 * 2)
+ ### CCM_32_ADDR						=	(CCM_32 * 2)
+ ### CCM_33_ADDR						=	(CCM_33 * 2)
+
+ ### WL_DYNDLY_0_ADDR				=	(WL_DYNDLY_0 * 2)
+ ### WL_DYNDLY_1_ADDR				=	(WL_DYNDLY_1 * 2)
+ ### WL_DYNDLY_2_ADDR				=	(WL_DYNDLY_2 * 2)
+ ### WL_DYNDLY_3_ADDR				=	(WL_DYNDLY_3 * 2)
+
+ ### MMU_CONFIG_ADDR                 =	(MMU_CONFIG_ADDRESS * 2)
 MMU_INVERT_CS                   =	1
 MMU_SWITCH_STUFFED              =	2
 
-SYSTEM_RESET_ADDR				=	(SYSTEM_RESET * 2)
+ ### SYSTEM_RESET_ADDR				=	(SYSTEM_RESET * 2)
 
-FPGA_VERSION_ADDR				=	(FPGA_VERSION * 2)
-FPGA_SUBVERSION_ADDR            =	(FPGA_SUBVERSION * 2)
+ ### FPGA_VERSION_ADDR				=	(FPGA_VERSION * 2)
+ ### FPGA_SUBVERSION_ADDR            =	(FPGA_SUBVERSION * 2)
 
-DCG_MEM_START_ADDR				=	(DCG_MEM_START * 2)
+ ### DCG_MEM_START_ADDR				=	(DCG_MEM_START * 2)
 
 
 
-- 
2.7.4


From 4268d820a2354b2c211e3a77ae3b484bc6761014 Mon Sep 17 00:00:00 2001
From: Johan Thornton <j@jth.co>
Date: Thu, 1 Nov 2018 19:36:04 -0700
Subject: [PATCH 3/7] GPIO is pythonic

---
 camobj.py  | 81 +++++++++++++++++++++++++++++++++++++++++++++-----------------
 ioports.py |  4 +++-
 live.py    | 15 +++++++++++-
 lux.py     | 73 -------------------------------------------------------
 lux1310.py | 48 +++++++++++++++++++++----------------
 5 files changed, 104 insertions(+), 117 deletions(-)
 delete mode 100644 lux.py

diff --git a/camobj.py b/camobj.py
index ab97001..f6c4b07 100644
--- a/camobj.py
+++ b/camobj.py
@@ -1,6 +1,8 @@
 
 # Camera class
 #from mem import fpga_mmio
+from periphery import GPIO
+
 from mmapregisters import *
 from memobj import MemObject
 from sensorobj import SensorObject
@@ -42,11 +44,11 @@ def i2c_eeprom_do_read(addr,  offset,  leng):
 	# print ("huh?")
 
 	with SMBusWrapper(1) as bus:
-	    # Read a block of 16 bytes from address 80, offset 0
-	    # block = bus.read_i2c_block_data(addr, offset, leng)
-	    block = bus.read_i2c_block_data(84 , 30, leng)
-	    # Returned value is a list of 16 bytes
-	    print(block)
+		# Read a block of 16 bytes from address 80, offset 0
+		# block = bus.read_i2c_block_data(addr, offset, leng)
+		block = bus.read_i2c_block_data(84 , 30, leng)
+		# Returned value is a list of 16 bytes
+		print(block)
 
 
 
@@ -62,26 +64,26 @@ class CamObject:
 
 
 	'''
-    int err;
-    err = ioctl(fd, I2C_SLAVE, addr);
-    if (err < 0) {
-        return err;
-    }
-
-    err = i2c_eeprom_write_chunk(fd, addr, offset, NULL, 0, offsz);
-    if (err < 0) {
-        return err;
-    }
-    usleep(1000);
-    err = read(fd, buf, len);
-    return err;
+	int err;
+	err = ioctl(fd, I2C_SLAVE, addr);
+	if (err < 0) {
+		return err;
+	}
+
+	err = i2c_eeprom_write_chunk(fd, addr, offset, NULL, 0, offsz);
+	if (err < 0) {
+		return err;
+	}
+	usleep(1000);
+	err = read(fd, buf, len);
+	return err;
 	'''
 
 	def i2c_eeprom_read16(fd, addr, offset, leng):
-	    return i2c_eeprom_do_read(fd, addr, offset, leng, 2);
-	    pass
-	    #print ("EEPROM")
-	    #print (pyi2cflash.read(addr, offset, leng))
+		return i2c_eeprom_do_read(fd, addr, offset, leng, 2);
+		pass
+		#print ("EEPROM")
+		#print (pyi2cflash.read(addr, offset, leng))
 
 
 	def ReadSerial():
@@ -146,6 +148,41 @@ class CamObject:
 		self.mem.fpga_write32(SEQ_REC_REGION_START, MAX_FRAME_LENGTH * 3)
 
 
+	def GPIOWrite(self, pin_name, value):
+		gpio = self._GPIO_ports[pin_name]
+		gpio.write(bool(value))
+
+	def GPIORead(self, pin_name):
+		gpio = self._GPIO_ports[pin_name]
+		return gpio.read()
+
+
+	_board_chronos14_gpio = {
+	"lux1310-dac-cs" : (33, "out"),
+	"lux1310-color" :  (66, "in"),
+	"encoder-a" :      (20, "in"),
+	"encoder-b" :      (26, "in"),
+	"encoder-sw" :     (27, "in"),
+	"shutter-sw" :     (66, "in"),
+	"record-led.0" :   (41, "out"),
+	"record-led.1" :   (25, "out"),
+	"trigger-pin" :    (127, "in"),
+	"frame-irq" :      (51, "in"),
+	# FPGA Programming Pins 
+	# "ecp5-progn" :     (47, ""),
+	# "ecp5-init" :      (45, ""),
+	# "ecp5-done" :      (52, ""),
+	# "ecp5-cs" :        (58, ""),
+	# "ecp5-holdn" :     (58  ""),
+	}
+
+	_GPIO_ports = {}
+
+	for key, value in _board_chronos14_gpio.items():
+		gpioaccess = GPIO(value[0], value[1])
+		_GPIO_ports.update({key : gpioaccess})
+
+	print(_GPIO_ports)
 
 	print ("begin")
 	mem = MemObject()
diff --git a/ioports.py b/ioports.py
index acbf866..b4bcee7 100644
--- a/ioports.py
+++ b/ioports.py
@@ -1,3 +1,5 @@
+#from periphery import GPIO
+
 board_chronos14_ioports = {
     "ddr3-i2c" :       "/dev/i2c-0",
     "eeprom-i2c" :     "/dev/i2c-1",
@@ -19,4 +21,4 @@ board_chronos14_ioports = {
     "ecp5-done" :      "/sys/class/gpio/gpio52/value",
     "ecp5-cs" :        "/sys/class/gpio/gpio58/value",
     "ecp5-holdn" :     "/sys/class/gpio/gpio58/value" 
-    }
\ No newline at end of file
+    }
diff --git a/live.py b/live.py
index a9dfa12..c9b5ce8 100644
--- a/live.py
+++ b/live.py
@@ -1,5 +1,5 @@
 
-
+import time
 from camobj import CamObject
 
 print ("Live Video Testing")
@@ -32,6 +32,19 @@ print (cam.sensor.ImageGeometry.hres)
 print (cam.sensor.numfunc())
 
 
+sw = cam.GPIORead("encoder-sw")
+print(f"Encoder switch is {sw}")
+
+for x in range(40):
+	cam.GPIOWrite("record-led.0", x & 1)
+	cam.GPIOWrite("record-led.1", not (x & 1))
+	time.sleep(0.05)
+
+while True:
+	sw = cam.GPIORead("encoder-sw")
+	cam.GPIOWrite("record-led.0", sw)
+	cam.GPIOWrite("record-led.1", not sw)
+
 
 
 
diff --git a/lux.py b/lux.py
deleted file mode 100644
index 474db94..0000000
--- a/lux.py
+++ /dev/null
@@ -1,73 +0,0 @@
-import spi
-from luxh import *
-
-def setDACCS(flag):
-	pass	
-
-
-
-
-def writeDACVoltage(chan, voltage):
-	if chan == VDR3_VOLTAGE:
-		writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
-	elif chan == VABL_VOLTAGE:
-		writeDAC(voltage * VABL_SCALE, VABL_VOLTAGE)
-	elif chan == VDR1_VOLTAGE:
-		writeDAC(voltage * VDR1_SCALE, VDR1_VOLTAGE)
-	elif chan == VDR2_VOLTAGE:
-		writeDAC(voltage * VDR2_SCALE, VDR2_VOLTAGE)
-	elif chan == VRSTB_VOLTAGE:
-		writeDAC(voltage * VRSTB_SCALE, VRSTB_VOLTAGE)
-	elif chan == VRSTH_VOLTAGE:
-		writeDAC(voltage * VRSTH_SCALE, VRSTH_VOLTAGE)
-	elif chan == VRSTL_VOLTAGE:
-		writeDAC(voltage * VRSTL_SCALE, VRSTL_VOLTAGE)
-	elif chan == VRST_VOLTAGE:
-		writeDAC(voltage * VRST_SCALE, VRST_VOLTAGE)
-	else:
-		pass
-
-
-def writeDAC(data, channel):
-	writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
-
-
-def writeDACSPI(data):
-	spi.spi_transfer(data)
-
-
-def writeDACVoltages():
-	initDAC();
-	writeDACVoltage(VABL_VOLTAGE, 0.3);
-	writeDACVoltage(VRSTB_VOLTAGE, 2.7);
-	writeDACVoltage(VRST_VOLTAGE, 3.3);
-	writeDACVoltage(VRSTL_VOLTAGE, 0.7);
-	writeDACVoltage(VRSTH_VOLTAGE, 3.6);
-	writeDACVoltage(VDR1_VOLTAGE, 2.5);
-	writeDACVoltage(VDR2_VOLTAGE, 2);
-	writeDACVoltage(VDR3_VOLTAGE, 1.5);
-
-def initDAC():
-	spi.spi_open()
-	spi.spi_transfer(0x9000)
-
-
-'''
-def writeDACSPI(data)
-{
-	UInt8 tx[2];
-	UInt8 rx[sizeof(tx)];
-	int retval;
-
-	tx[1] = data >> 8;
-	tx[0] = data & 0xFF;
-
-	setDACCS(false);
-	//delayms(1);
-	retval = spi->Transfer((uint64_t) tx, (uint64_t) rx, sizeof(tx));
-	//delayms(1);
-	setDACCS(true);
-	return retval;
-}
-
-'''
diff --git a/lux1310.py b/lux1310.py
index dc9d4b4..d281a0b 100644
--- a/lux1310.py
+++ b/lux1310.py
@@ -1,4 +1,5 @@
 
+from periphery import GPIO
 from sensorobj import SensorObject
 import spi
 from lux1310h import *
@@ -89,9 +90,6 @@ class Lux1310Object(SensorObject):
 		}
 	]
 
-	def Lux1310SCIWrite(self, addr, value):
-		pass
-
 
 	def FPGAAndBits(self, addr, mask):
 		readdata = self.fpga_read16(addr)
@@ -233,7 +231,7 @@ class Lux1310Object(SensorObject):
 		SensorObject.__init__(self)
 		self.mem = mem
 		self.lux1310num()
-		self.initlux1310()		
+		self.Lux1310Init()		
 		self.SensorInit()
 		#self.OpsDict = Lux1310OpsDict
 		print ("Lux1310 initialized!")
@@ -243,12 +241,22 @@ class Lux1310Object(SensorObject):
 
 
 	def setDACCS(self, flag):
+		board_chronos14_gpio["lux1310-dac-cs"]
 		pass	
 
+	def WriteGPIO(name, value):
+		pass
+		#GPIOset
+
+	def _htole16(bigend):
+		return ((bigend & 0xff) << 8) | ((bigend & 0xff00) >> 8)
 
+	def Lux1310SetVoltage(channel, mv, mul, div):
+		vdac = (LUX1310_DAC_FULL_SCALE * mv * mul) / (LUX1310_DAC_VREF * div)
+		reg = _htole16(((channel & 0x7) << 12) | vdac)
 
 
-	def writeDACVoltage(self, chan, voltage):
+	def _writeDACVoltage(self, chan, voltage):
 		if chan == VDR3_VOLTAGE:
 			self.writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
 		elif chan == VABL_VOLTAGE:
@@ -277,35 +285,35 @@ class Lux1310Object(SensorObject):
 		spi.spi_transfer(data)
 
 
-	def initDAC(self):
+	def _initDAC(self):
 		spi.spi_open()
 		spi.spi_transfer(0x9000)
 
-	def writeDACVoltages(self):
-		self.initDAC();
-		self.writeDACVoltage(VABL_VOLTAGE, 0.3);
-		self.writeDACVoltage(VRSTB_VOLTAGE, 2.7);
-		self.writeDACVoltage(VRST_VOLTAGE, 3.3);
-		self.writeDACVoltage(VRSTL_VOLTAGE, 0.7);
-		self.writeDACVoltage(VRSTH_VOLTAGE, 3.6);
-		self.writeDACVoltage(VDR1_VOLTAGE, 2.5);
-		self.writeDACVoltage(VDR2_VOLTAGE, 2);
-		self.writeDACVoltage(VDR3_VOLTAGE, 1.5);
+	def _writeDACVoltages(self):
+		self._initDAC();
+		self._writeDACVoltage(VABL_VOLTAGE, 0.3);
+		self._writeDACVoltage(VRSTB_VOLTAGE, 2.7);
+		self._writeDACVoltage(VRST_VOLTAGE, 3.3);
+		self._writeDACVoltage(VRSTL_VOLTAGE, 0.7);
+		self._writeDACVoltage(VRSTH_VOLTAGE, 3.6);
+		self._writeDACVoltage(VDR1_VOLTAGE, 2.5);
+		self._writeDACVoltage(VDR2_VOLTAGE, 2);
+		self._writeDACVoltage(VDR3_VOLTAGE, 1.5);
 
 
 
 
 
 
-	def initlux1310(self):
+	def Lux1310Init(self):
 
-		print ("initlux1310")
+		print ("Lux1310Init")
 
 		self.mem.mm_open()
 		#self.mem.initlux()
 
-		self.initDAC()
-		self.writeDACVoltages()
+		#self.initDAC()
+		self._writeDACVoltages()
 
 
 		# Now do rest of lux init
-- 
2.7.4


From 1007dfad1378fa0397dede9999c2bacba5791eb4 Mon Sep 17 00:00:00 2001
From: Johan Thornton <j@jth.co>
Date: Wed, 7 Nov 2018 15:56:00 -0800
Subject: [PATCH 4/7] Just before moving GPIO to mem

---
 camobj.py    |  78 +++++++++++++---
 ioports.py   |   1 +
 live.py      |  20 ++--
 lux1310.py   | 294 +++++++++++++++++++++++++++++++++++++++++++++++++----------
 lux1310h.py  | 110 ++++++++++++++++++++++
 memobj.py    |   4 +-
 sensorobj.py |   5 +-
 7 files changed, 441 insertions(+), 71 deletions(-)

diff --git a/camobj.py b/camobj.py
index f6c4b07..f7fb8eb 100644
--- a/camobj.py
+++ b/camobj.py
@@ -56,8 +56,9 @@ class CamObject:
 	def __init__(self):
 		print ("CamObject Init")
 		self.CamInit()
-
-
+		thiscam = self
+	
+		
 	#print("CamObject created")
 	# mem = MemObject()
 
@@ -79,6 +80,10 @@ class CamObject:
 	return err;
 	'''
 
+	def image_sensor_bpp(self):
+		return 12
+
+
 	def i2c_eeprom_read16(fd, addr, offset, leng):
 		return i2c_eeprom_do_read(fd, addr, offset, leng, 2);
 		pass
@@ -93,16 +98,23 @@ class CamObject:
 		i2c_eeprom_do_read(CAMERA_SERIAL_I2CADDR, CAMERA_SERIAL_OFFSET, CAMERA_SERIAL_LENGTH)
 
 	def TestLive(self):
-		print("!!!!!")
-		self.sensor.OpsDict["SetPeriod"](self, 1000000)
-		self.sensor.OpsDict["SetExposure"]()
+		print("TESTING LIVE!!!!!")
+		self.sensor.OpsDict["SetPeriod"](self.sensor, 1000000)
+		self.sensor.OpsDict["SetExposure"](self.sensor, 100000)
 		self.sensor.OpsDict["CalSuffix"]()
-		self.sensor.OpsDict["SetGain"](self, 12)
+		self.sensor.OpsDict["SetGain"](self.sensor, 12)
+		self.sensor.OpsDict["SetResolutions"](self.sensor)
+		self.sensor.OpsDict["GetConstraints"](self.sensor)
+		self.sensor.OpsDict["CalGain"]()
+		print("END TESTING LIVE!!!!!")
+
+
 		
 		# self.CamInit()
 
-	def SetLiveTiming(self, geometry, hOutRes, vOutRes, maxFPS):
+	def SetLiveTiming(self, hOutRes, vOutRes, maxFPS):
 
+		print("SETLIVETIMING!!")
 		pxClock = 100000000
 		hSync = 50
 		hPorch = 166
@@ -114,20 +126,28 @@ class CamObject:
 		# Calculate minimum hPeriod to fit within the max vertical
 		# resolution and make sure hPeriod is equal to or larger
 	 
-		minHPeriod = (pxClock / ((sensor.v_max_res + vPorch + vSync + vSync) * maxFps)) + 1; # the +1 is just to round up
+		minHPeriod = (pxClock / ((self.sensor.vMaxRes + vPorch + vSync + vSync) * maxFPS)) + 1; # the +1 is just to round up
 		if hPeriod < minHPeriod: 
 			hPeriod = minHPeriod
 
 		# calculate vPeriod and make sure it's large enough for the frame
-		vPeriod = pxClock / (hPeriod * maxFps)
+		vPeriod = pxClock / (hPeriod * maxFPS)
 		if vPeriod < (vOutRes + vSync + vPorch + vSync):
 			vPeriod = vOutRes + vSync + vPorch + vSync
 	
 		# calculate FPS for debug output
 		fps = pxClock / (vPeriod * hPeriod)
+		print (f"FPS = {fps}")
 		print ("Timing: %d*%d@%d (%d*%d max: %d)\n", \
 			   (hPeriod - hSync - hPorch - hSync), (vPeriod - vSync - vPorch - vSync), \
-			   fps, hOutRes, vOutRes, maxFps)
+			   fps, hOutRes, vOutRes, maxFPS)
+
+		g = self.sensor.ImageGeometry
+		self.mem.fpga_write32(DISPLAY_H_RES, g.hres)
+		self.mem.fpga_write32(DISPLAY_V_RES, g.vres)
+		print (f"ImageGeometry: {g}")
+
+
 
 	 
 	def CamInit(self):
@@ -139,14 +159,47 @@ class CamObject:
 		maxfps = self.sensor.ImageSensor.pixel_rate / \
 			(self.sensor.ImageSensor.h_max_res * self.sensor.ImageSensor.v_max_res);
 		print (f"maxfps is {maxfps}")
+		
+		g = self.sensor.ImageGeometry 
+		g.hres = self.sensor.ImageSensor.h_max_res
+		g.vres = self.sensor.ImageSensor.v_max_res
+		g.hoffset = 0
+		g.voffset = 0
 
+		print (f"h_max_res = {self.sensor.ImageSensor.h_max_res}")
+
+		#TODO: move this to somewhere better
+		self.sensor.hMaxRes = self.sensor.ImageSensor.h_max_res
+		self.sensor.vMaxRes = self.sensor.ImageSensor.v_max_res
+
+		print (self.sensor)
 		# Configure the FIFO threshold and image sequencer
 
 		self.mem.fpga_write32(SEQ_LIVE_ADDR_0, MAX_FRAME_LENGTH)
 		self.mem.fpga_write32(SEQ_LIVE_ADDR_1, MAX_FRAME_LENGTH * 2)
 		self.mem.fpga_write32(SEQ_LIVE_ADDR_2, MAX_FRAME_LENGTH * 3)
-		self.mem.fpga_write32(SEQ_REC_REGION_START, MAX_FRAME_LENGTH * 3)
+		self.mem.fpga_write32(SEQ_REC_REGION_START, REC_START_ADDR)
+
+		frame_words = int(((self.sensor.hMaxRes * self.sensor.vMaxRes * self.image_sensor_bpp()) / 8 + (32 - 1)) / 32)
+		print(f"frame_words = {frame_words}")
+		print(f"hMaxRes = {self.sensor.hMaxRes}")
+		self.mem.fpga_write32(SEQ_FRAME_SIZE, (frame_words + 0x3f) & ~0x3f)
+		
+
+
+		#temporary single definition; move to fpgah.py
+		DISPLAY_CTL_READOUT_INHIBIT = (1 << 3)
+
+		dctrl = self.mem.fpga_read32(DISPLAY_CTL)
+		dctrl &= ~DISPLAY_CTL_READOUT_INHIBIT
+		self.mem.fpga_write32(DISPLAY_CTL, dctrl)
+
+
+
 
+		self.SetLiveTiming(self.sensor.hMaxRes, self.sensor.vMaxRes, 60)
+		print ("--> SENSOR:")
+		print (self.sensor.ImageGeometry)
 
 	def GPIOWrite(self, pin_name, value):
 		gpio = self._GPIO_ports[pin_name]
@@ -182,11 +235,12 @@ class CamObject:
 		gpioaccess = GPIO(value[0], value[1])
 		_GPIO_ports.update({key : gpioaccess})
 
-	print(_GPIO_ports)
+	#print(_GPIO_ports)
 
 	print ("begin")
 	mem = MemObject()
 	#sensor = SensorObject(mem)
+	#sensor = Lux1310Object(mem)
 	sensor = Lux1310Object(mem)
 
 	
diff --git a/ioports.py b/ioports.py
index b4bcee7..f7a73ee 100644
--- a/ioports.py
+++ b/ioports.py
@@ -1,5 +1,6 @@
 #from periphery import GPIO
 
+# the following are not used!
 board_chronos14_ioports = {
     "ddr3-i2c" :       "/dev/i2c-0",
     "eeprom-i2c" :     "/dev/i2c-1",
diff --git a/live.py b/live.py
index c9b5ce8..6d76ab4 100644
--- a/live.py
+++ b/live.py
@@ -1,6 +1,7 @@
 
 import time
 from camobj import CamObject
+#import camobj
 
 print ("Live Video Testing")
 
@@ -35,15 +36,20 @@ print (cam.sensor.numfunc())
 sw = cam.GPIORead("encoder-sw")
 print(f"Encoder switch is {sw}")
 
-for x in range(40):
+for x in range(10):
 	cam.GPIOWrite("record-led.0", x & 1)
 	cam.GPIOWrite("record-led.1", not (x & 1))
-	time.sleep(0.05)
-
-while True:
-	sw = cam.GPIORead("encoder-sw")
-	cam.GPIOWrite("record-led.0", sw)
-	cam.GPIOWrite("record-led.1", not sw)
+	time.sleep(0.08)
+cam.GPIOWrite("record-led.0", 0)
+cam.GPIOWrite("record-led.1", 0)
+
+while 0:
+	a = cam.GPIORead("encoder-a")
+	b = cam.GPIORead("encoder-b")
+	#b = cam.GPIORead("encoder-sw")
+	#a = not cam.GPIORead("shutter-sw")
+	cam.GPIOWrite("record-led.0", a)
+	cam.GPIOWrite("record-led.1", b)
 
 
 
diff --git a/lux1310.py b/lux1310.py
index d281a0b..8844ee5 100644
--- a/lux1310.py
+++ b/lux1310.py
@@ -32,15 +32,50 @@ class FPGA1310Sensor:
 
 '''
 
+# Bit hacking to extract a value from a bitmask and shift it down.
+def getbits(value, mask):
+
+	if mask == 0:
+		print (0)
+		return 0	
+	else:
+		lsb = (~mask + 1) & mask
+		print ( (value & mask) / lsb)
+		return (value & mask) / lsb
+	
+# Bit hacking to shift a value up to the position specified by the mask. 
+def setbits(value, mask):
+	print(f"Setbits ({value}, {mask}):")
+	if mask == 0:
+		print (0)
+		return 0
+	else: 
+		lsb = (~mask + 1) & mask
+		print ( (value * lsb) & mask)
+		return (value * lsb) & mask
 
 
+class Lux1310Object(SensorObject):
 
+	#we'll keep a copy of the wavetable delay
+	keepdelay = 0;
 
+	#get SCI constants
+	SCI = SCIObject()
 
-class Lux1310Object(SensorObject):
+	# SPI_DEV = "/dev/spidev3.0"
+	# SPI_MODE = 1
+	# SPI_SPEED = 1000000
+	# SPI_BITORDER = "msb"
+	# SPI_BITS = 16
 
+	# spi = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+	
 
 
+	def _Lux1310ClocksToNsec(self, _clks, _hz):
+		return ((_clks * 1000000000) + _hz - 1) / _hz
+	
 	# Gain parameters
 	Lux1310GainData = [
 		{   # x1 - 0dB 
@@ -91,64 +126,83 @@ class Lux1310Object(SensorObject):
 	]
 
 
+
 	def FPGAAndBits(self, addr, mask):
-		readdata = self.fpga_read16(addr)
+		readdata = self.mem.fpga_read16(addr)
 		readdata &= mask
-		self.fpga_write16(addr, readdata)
+		self.mem.fpga_write16(addr, readdata)
 
 	def FPGAOrBits(self, addr, mask):
-		readdata = self.fpga_read16(addr)
+		readdata = self.mem.fpga_read16(addr)
 		readdata |= mask
-		self.fpga_write16(addr, readdata)
+		self.mem.fpga_write16(addr, readdata)
 
 	def Lux1310SCIWrite(self, addr, value):
 		'''Perform a simple 16bit register write'''
 		# Clear RW, and setup the transfer and fill the FIFO
-		FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
-		self.fpga_write16(SENSOR_SCI_ADDRESS, addr)
-		self.fpga_write16(SENSOR_SCI_DATALEN, 2)
-		self.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, (value >> 8) & 0xff)
-		self.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, value & 0xff)
+		self.FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
+		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16(SENSOR_SCI_DATALEN, 2)
+		self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, (value >> 8) & 0xff)
+		self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, value & 0xff)
 
 		# Start the transfer and then wait for completion.
-		FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
-		while self.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		while self.mem.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
 			pass
 
 	def Lux1310SCIWriteBuf(self, addr, values):
 		'''Perform a series of 8 bit register writes'''
 		# Clear RW, and setup the transfer and fill the FIFO
-		FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
-		self.fpga_write16(SENSOR_SCI_ADDRESS, addr)
-		self.fpga_write16(SENSOR_SCI_DATALEN, len(values))
+		self.FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
+		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16(SENSOR_SCI_DATALEN, len(values))
 		for b in values:
-			self.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, b)
+			self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, b)
 
 		# Start the transfer and then wait for completion.
-		FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
-		while self.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		while self.mem.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
 			pass
 
-	def Lux1310SCIRead(self, addr, value):
+	def Lux1310SCIRead(self, addr):
 		'''Perform a simple 16bit register read'''
 		# Set RW, address and length.
-		FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RW_MASK)
-		self.fpga_write16(SENSOR_SCI_ADDRESS, addr)
-		self.fpga_write16(SENSOR_SCI_DATALEN, 2)
+		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RW_MASK)
+		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16(SENSOR_SCI_DATALEN, 2)
 		
 		# Start the transfer and then wait for completion.
-		Lux1310OrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
-		while self.fpga+read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		while self.mem.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
 			pass
 
-		return self.fpga_read16(SENSOR_SCI_READ_DATA)
+		return self.mem.fpga_read16(SENSOR_SCI_READ_DATA)
 	
+	def Lux1310Read(self, reg):
+		val = self.Lux1310SCIRead(reg >> self.SCI.LUX1310_SCI_REG_ADDR)
+		return getbits(val, reg & self.SCI.LUX1310_SCI_REG_MASK)
+
+	def Lux1310Write(self, reg, val):
+		'''Perform a simple register write, which contains only one sub-field.'''
+		print(f"Lux1310Write({reg}, {val})")
+		sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
+		scidata = setbits(val, reg & self.SCI.LUX1310_SCI_REG_MASK)
+		self.Lux1310SCIWrite(sciaddr, scidata)
+
 
 	def Lux1310WriteWaveTab(self, wavedict):
+		self.keepdelay = wavedict["read_delay"]
 		waves = wavedict["table"]
-		#Lux1310Write()
+		self.Lux1310Write(self.SCI.LUX1310_SCI_TIMING_EN, 0)
+		delay =wavedict["read_delay"]
+		self.Lux1310Write(self.SCI.LUX1310_SCI_RDOUT_DLY, delay)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_WAVETAB_SIZE, delay)
+		self.Lux1310SCIWriteBuf(0x7F, waves);
+		self.Lux1310Write(self.SCI.LUX1310_SCI_TIMING_EN, 1)
 
-	def lux1310_min_period(self, wavelen):
+
+	def Lux1310MinPeriod(self, wavelen):
 	
 		t_hblank = 2
 		t_tx = 25
@@ -166,8 +220,22 @@ class Lux1310Object(SensorObject):
 		# print (f" minperiod = {minperiod}")
 		return minperiod
 
-	def Lux1310SetExposure():
+	def Lux1310SetExposure(self, nsec):
 		print ("Lux1310SetExposure")
+		g = self.ImageGeometry
+		t_line = max((g.hres / LUX1310_HRES_INCREMENT)+2, (self.keepdelay + 3))
+		t_exposure = (nsec * LUX1310_SENSOR_CLOCK_RATE + 500000000) / 1000000000
+		t_start = LUX1310_MAGIC_ABN_DELAY;
+
+		
+		# Set the exposure time in units of FPGA timing clock periods, while keeping the
+		# exposure as a multiple of the horizontal readout time (to fix the horizontal
+		# line issue.
+		 
+		exp_lines = (t_exposure + t_line/2) / t_line
+		int_time = int((t_start + (t_line * exp_lines)) * LUX1310_TIMING_CLOCK_RATE / LUX1310_SENSOR_CLOCK_RATE)
+		self.mem.fpga_write32(IMAGER_INT_TIME, int_time)
+		
 
 	def Lux1310SetPeriod(self, nsec):
 		print (f"Lux1310SetPeriod: {nsec}")
@@ -178,23 +246,82 @@ class Lux1310Object(SensorObject):
 		for i in Lux1310WaveTables:
 			# if t_frame >= self.lux1310_min_period(i[""])
 			#print (i["read_delay"])
-			min_period = self.sensor.lux1310_min_period(i["read_delay"])
+			min_period = self.Lux1310MinPeriod(i["read_delay"])
 			print (f"{i['read_delay']}: min period is {min_period}")
 			if t_frame >= min_period:
-				self.sensor.Lux1310WriteWaveTab(i)
+				self.Lux1310WriteWaveTab(i)
 				break
 		
-	def Lux1310SetResolutions():
-		pass
+	def Lux1310SetResolutions(self):
+		g = self.ImageGeometry
+		print(g)
+		h_start = int(g.hoffset / LUX1310_HRES_INCREMENT)
+		h_width = int(g.hres / LUX1310_HRES_INCREMENT)
+		print (h_start)
+		print (h_width)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_X_START, LUX1310_BLACK_COLS + h_start * LUX1310_HRES_INCREMENT);
+		self.Lux1310Write(self.SCI.LUX1310_SCI_X_END, LUX1310_BLACK_COLS + (h_start + h_width) * LUX1310_HRES_INCREMENT - 1)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_Y_START, g.voffset)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_Y_END, g.voffset + g.vres - 1)
+		return 0
+		
 
-	def Lux1310GetConstraints():
-		pass
+	def Lux1310GetConstraints(self):
+		g = self.ImageGeometry
+		c = self.ImageConstraints
+		t_line = max((g.hres / LUX1310_HRES_INCREMENT)+2, (LUX1310_MIN_WAVETABLE_SIZE + 3))
+
+		c.t_max_period = 2**32 - 1
+		c.t_min_period = self._Lux1310ClocksToNsec(self.Lux1310MinPeriod( LUX1310_MIN_WAVETABLE_SIZE), LUX1310_TIMING_CLOCK_RATE)
+		c.f_quantization = LUX1310_TIMING_CLOCK_RATE
+
+		c.t_min_exposure = self._Lux1310ClocksToNsec(t_line, LUX1310_TIMING_CLOCK_RATE);
+		c.t_max_shutter = 360
+		c.t_exposure_delay = self._Lux1310ClocksToNsec(LUX1310_MAGIC_ABN_DELAY, LUX1310_TIMING_CLOCK_RATE)
+
+		return 0;
 
 	def Lux1310SetGain(self, gain):
 		print (f"Lux1310SetGain: {gain}")
-		for gdict in self.sensor.Lux1310GainData:
+		for gdict in self.Lux1310GainData:
 			if gdict["analog_gain"] == gain:
-				print (gdict)
+				self.Lux1310SetVoltage(VRSTB_VOLTAGE, gdict["vrstb"], 1, 1)
+				self.Lux1310SetVoltage(VRST_VOLTAGE, gdict["vrst"], LUX1310_VRST_MUL, LUX1310_VRST_DIV)
+				#NOTE: this uses LUX1310_VRST_DIV in camm-daemon:
+				self.Lux1310SetVoltage(VRST_VOLTAGE, gdict["vrsh"], LUX1310_VRST_MUL, LUX1310_VRSTH_DIV)
+
+
+				self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_SAMP, gdict["sampling"])
+				self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_FB, gdict["feedback"])
+				self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_BIT, gdict["gain_bit"])
+
+			# "vrstb": 2700,
+			# "vrst": 3300,
+			# "vrsth": 3600,
+			# "sampling": 0x7f,
+			# "feedback": 0x7f,
+			# "gain_bit": 3,
+			# "analog_gain": 0,
+
+				#TODO: use an actual cal file
+
+				# /* Adjust the ADC offsets if calibration data is provided. */
+				# if (calfile) {
+				#     fread(caldata, sizeof(caldata[0]), LUX1310_ADC_COUNT, calfile);
+				# } else {
+				#     memset(caldata, 0, sizeof(caldata));
+				# }
+
+
+				# for j in range(LUX1310_ADC_COUNT)
+				for j in range(self.adc_count):
+				    Lux1310Write(self.SCI.LUX1310_SCI_ADC_OS[j], 0)
+				# for (j = 0; j < sensor->adc_count; j++) {
+				#     uint16_t x = abs(caldata[j]) & ((1 << LUX1310_ADC_OFFSET_BITS) - 1);
+				#     if (caldata[j]) x |= (1 << LUX1310_ADC_OFFSET_BITS);
+				#     lux1310_write(data, LUX1310_SCI_ADC_OS(j), x);
+
+				
 				break
 		pass
 
@@ -230,31 +357,93 @@ class Lux1310Object(SensorObject):
 	def __init__(self, mem):
 		SensorObject.__init__(self)
 		self.mem = mem
-		self.lux1310num()
+		#self.cam = cam
+		#self.lux1310num()
 		self.Lux1310Init()		
-		self.SensorInit()
+		#self.SensorInit()
 		#self.OpsDict = Lux1310OpsDict
 		print ("Lux1310 initialized!")
 
+		self.Lux1310Write(self.SCI.LUX1310_SCI_LINE_VALID_DLY, 7)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_STATE_IDLE_CTRL0, 0xe08e)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_STATE_IDLE_CTRL1, 0xfc1f)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_STATE_IDLE_CTRL2, 0x0003)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_CLOCK_CTRL, 0x2202)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMI, 6)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMO, 7)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMP, 11)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMN, 4)
+		self.Lux1310Write(self.SCI.LUX1310_SCI_INT_CLK_TIMING, 0x41f);
+
+
+
+		# Grab the sensor revision for further tuning.
+		rev = self.Lux1310Read(self.SCI.LUX1310_SCI_REV_CHIP)
+		print(f"configuring for LUX1310 silicon rev {rev}")
+		if rev == 2:
+			self.Lux1310SCIWrite(0x5B, 0x307f)
+			self.Lux1310SCIWrite(0x7B, 0x3007)
+		else:
+			self.Lux1310SCIWrite(0x5B, 0x301f)
+			self.Lux1310SCIWrite(0x7B, 0x3001)
+
+		# Clear the ADC Offsets table, and then enable the ADC offset calibration. 
+		for i in range(16):
+			self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_OS[i], 0);
+		
+		self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_CAL_EN, 1);
+
+		# Program the default gain and wavetable.*/
+		self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_SAMP, 0x7f);
+		self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_FB, 0x7f);
+		self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_BIT, 3);
+		#lux1310_write_wavetab(data, &lux1310_wt_sram80);
+		# TODO: don't just assume the first wavetable is delay of 80!
+		self.Lux1310WriteWaveTab(Lux1310WaveTables[0])
+
+		#lux1310_set_gain(&data->sensor, 0, NULL);
+		
+		# Enable the sensor timing engine. */
+		self.Lux1310Write(self.SCI.LUX1310_SCI_TIMING_EN, 1);
+	
+
+
+		#usleep(10000);
+		time.sleep(0.01)
+		self.mem.fpga_write32(IMAGER_FRAME_PERIOD, 100 * 4000)
+		self.mem.fpga_write32(IMAGER_INT_TIME, 100 * 3900)
+		#usleep(50000);
+		time.sleep(0.05)
+
 
 	#numfunc = lux1310num
 
 
-	def setDACCS(self, flag):
-		board_chronos14_gpio["lux1310-dac-cs"]
-		pass	
+	# def setDACCS(self, flag):
+	# 	board_chronos14_gpio["lux1310-dac-cs"]
+	# 	pass	
 
-	def WriteGPIO(name, value):
-		pass
-		#GPIOset
+	# def WriteGPIO(name, value):
+	# 	pass
+	# 	#GPIOset
 
-	def _htole16(bigend):
+	def _htole16(self,bigend):
 		return ((bigend & 0xff) << 8) | ((bigend & 0xff00) >> 8)
 
-	def Lux1310SetVoltage(channel, mv, mul, div):
-		vdac = (LUX1310_DAC_FULL_SCALE * mv * mul) / (LUX1310_DAC_VREF * div)
-		reg = _htole16(((channel & 0x7) << 12) | vdac)
+	def Lux1310SetVoltage(self, channel, mv, mul, div):
+		vdac = int((LUX1310_DAC_FULL_SCALE * mv * mul) / (LUX1310_DAC_VREF * div))
+		reg = self._htole16(((channel & 0x7) << 12) | vdac)
+		self.mem.GPIOWrite("daccs", 0)
+		spilist = [reg >> 8, reg & 255]
+		#print (spilist)
+		spi.transfer(spilist)
 
+		self.mem.GPIOWrite("daccs", 1)
+
+			
+    # gpio_write(data->daccs, 0);
+    # err = write(data->spifd, &reg, sizeof(reg));
+    # gpio_write(data->daccs, 1);
 
 	def _writeDACVoltage(self, chan, voltage):
 		if chan == VDR3_VOLTAGE:
@@ -348,4 +537,13 @@ class Lux1310Object(SensorObject):
 		self.ImageSensor.pixel_rate = self.ImageSensor.h_max_res * self.ImageSensor.v_max_res * 1057;
 		self.ImageSensor.adc_count = LUX1310_ADC_COUNT;
 
+		self.Lux1310AutoPhaseCal()
+
+
+
+
+
+
 
+	def Lux1310AutoPhaseCal(self):
+		pass
\ No newline at end of file
diff --git a/lux1310h.py b/lux1310h.py
index ae78610..1115b06 100644
--- a/lux1310h.py
+++ b/lux1310h.py
@@ -92,3 +92,113 @@ LUX1310_MIN_WAVETABLE_SIZE	= 20
 FILTER_COLOR_RED			= 0
 FILTER_COLOR_GREEN			= 1
 FILTER_COLOR_BLUE			= 2
+
+
+
+
+
+class SCIObject():
+
+	LUX1310_SCI_REG_MASK =		0xffff
+	LUX1310_SCI_REG_ADDR =		16
+
+	def LUX1310_SCI_REG(_addr, _mask):
+		LUX1310_SCI_REG_MASK =		0xffff
+		LUX1310_SCI_REG_ADDR =		16
+		return (((_addr) << LUX1310_SCI_REG_ADDR) | ((_mask) & LUX1310_SCI_REG_MASK))
+
+
+	LUX1310_SCI_REV_CHIP =				LUX1310_SCI_REG(0x00, 0x00ff)
+	LUX1310_SCI_CHIP_ID =				LUX1310_SCI_REG(0x00, 0xff00)
+	LUX1310_SCI_TIMING_EN =				LUX1310_SCI_REG(0x01, 0x0001)
+	LUX1310_SCI_SOF_DELAY =				LUX1310_SCI_REG(0x02, 0x00ff)
+	LUX1310_SCI_HBLANK =				LUX1310_SCI_REG(0x03, 0xffff)
+	LUX1310_SCI_ROI_NB =				LUX1310_SCI_REG(0x04, 0x0007)
+	LUX1310_SCI_ROI_EN =				LUX1310_SCI_REG(0x04, 0x0008)
+	LUX1310_SCI_DRK_COL_RD =			LUX1310_SCI_REG(0x04, 0x0100)
+	LUX1310_SCI_VFLIP =					LUX1310_SCI_REG(0x04, 0x1000)
+	LUX1310_SCI_HFLIP =					LUX1310_SCI_REG(0x04, 0x2000)
+	LUX1310_SCI_X_START =				LUX1310_SCI_REG(0x05, 0x07ff)
+	LUX1310_SCI_X_END =					LUX1310_SCI_REG(0x06, 0x07ff)
+	LUX1310_SCI_Y_START =				LUX1310_SCI_REG(0x07, 0x07ff)
+	LUX1310_SCI_Y_END =					LUX1310_SCI_REG(0x08, 0x07ff)
+#define LUX1310_SCI_ROI_X_START(_n_)    LUX1310_SCI_REG(0x09 + 4 * (_n_), 0x07ff)
+#define LUX1310_SCI_ROI_X_END(_n_)      LUX1310_SCI_REG(0x10 + 4 * (_n_), 0x07ff)
+#define LUX1310_SCI_ROI_Y_START(_n_)    LUX1310_SCI_REG(0x11 + 4 * (_n_), 0x07ff)
+#define LUX1310_SCI_ROI_Y_END(_n_)      LUX1310_SCI_REG(0x12 + 4 * (_n_), 0x07ff)
+	LUX1310_SCI_DRK_ROWS_ST_ADDR =		LUX1310_SCI_REG(0x29, 0x07ff)
+	LUX1310_SCI_NB_DRK_ROWS =			LUX1310_SCI_REG(0x29, 0xf000)
+	LUX1310_SCI_NEXT_ROW_ADDR_OVR =		LUX1310_SCI_REG(0x2A, 0x07ff)
+	LUX1310_SCI_NEXT_ROW_OVR_EN =		LUX1310_SCI_REG(0x2A, 0x1000)
+	LUX1310_SCI_INTER_ROI_SP =			LUX1310_SCI_REG(0x2B, 0x0001)
+	LUX1310_SCI_CLK_SEL_SCIP =			LUX1310_SCI_REG(0x2C, 0x0003)
+	LUX1310_SCI_CLK_SEL_FT =			LUX1310_SCI_REG(0x2C, 0x000c)
+	LUX1310_SCI_FT_TRIG_NB_PULSE =		LUX1310_SCI_REG(0x31, 0xffff)
+	LUX1310_SCI_FT_RST_NB_PULSE =		LUX1310_SCI_REG(0x34, 0xffff)
+	LUX1310_SCI_ABN2_EN =				LUX1310_SCI_REG(0x35, 0x0010)
+	LUX1310_SCI_RDOUT_DLY =				LUX1310_SCI_REG(0x37, 0xffff)
+	LUX1310_SCI_ADC_CAL_EN =			LUX1310_SCI_REG(0x39, 0x0001)
+#define LUX1310_SCI_ADC_OS(_x_)         LUX1310_SCI_REG(0x3A + (_x_), 0x07ff)
+	LUX1310_SCI_ADC_OS = []
+	for i in range(16):
+		LUX1310_SCI_ADC_OS.append(		LUX1310_SCI_REG(0x3A + i, 0x07ff))
+
+	LUX1310_SCI_ADC_OS_SEQ_WIDTH =		LUX1310_SCI_REG(0x4A, 0x03ff)
+	LUX1310_SCI_PCLK_LINEVALID =		LUX1310_SCI_REG(0x4B, 0x0fff)
+	LUX1310_SCI_PCLK_VBLANK =			LUX1310_SCI_REG(0x4C, 0x0fff)
+	LUX1310_SCI_PCLK_HBLANK =			LUX1310_SCI_REG(0x4D, 0x0fff)
+	LUX1310_SCI_PCLK_OPTICAL_BLACK =	LUX1310_SCI_REG(0x4E, 0x0fff)
+	LUX1310_SCI_MONO =					LUX1310_SCI_REG(0x4F, 0x0001)
+	LUX1310_SCI_ROW2EN =				LUX1310_SCI_REG(0x4F, 0x0010)
+	LUX1310_SCI_POUTSEL =				LUX1310_SCI_REG(0x50, 0x0003)
+	LUX1310_SCI_INVERT_ANALOG =			LUX1310_SCI_REG(0x50, 0x0010)
+	LUX1310_SCI_GLOBAL_SHUTTER =		LUX1310_SCI_REG(0x50, 0x0100)
+	LUX1310_SCI_GAIN_SEL_SAMP =			LUX1310_SCI_REG(0x51, 0x0fff)
+	LUX1310_SCI_GAIN_SEL_FB =			LUX1310_SCI_REG(0x52, 0x007f)
+	LUX1310_SCI_GAIN_BIT =				LUX1310_SCI_REG(0x53, 0x0007)
+	LUX1310_SCI_COLBIN2 =				LUX1310_SCI_REG(0x55, 0x0001)
+	LUX1310_SCI_TST_PAT =				LUX1310_SCI_REG(0x56, 0x0003)
+	LUX1310_SCI_CUST_PAT =				LUX1310_SCI_REG(0x57, 0x0fff)
+	LUX1310_SCI_MUX_MODE =				LUX1310_SCI_REG(0x58, 0x0003)
+	LUX1310_SCI_PWR_EN_SERIALIZER_B =	LUX1310_SCI_REG(0x59, 0xffff)
+	LUX1310_SCI_DAC_ILV =				LUX1310_SCI_REG(0x5A, 0x0007)
+	LUX1310_SCI_MSB_FIRST_DATA =		LUX1310_SCI_REG(0x5A, 0x0008)
+	LUX1310_SCI_PCLK_INV =				LUX1310_SCI_REG(0x5A, 0x0010)
+	LUX1310_SCI_TERMB_DATA =			LUX1310_SCI_REG(0x5A, 0x0020)
+	LUX1310_SCI_DCLK_INV =				LUX1310_SCI_REG(0x5A, 0x0040)
+	LUX1310_SCI_TERMB_CLK =				LUX1310_SCI_REG(0x5A, 0x0080)
+	LUX1310_SCI_TERMB_RXCLK =			LUX1310_SCI_REG(0x5B, 0x1000)
+	LUX1310_SCI_PWREN_DCLK_B =			LUX1310_SCI_REG(0x60, 0x0001)
+	LUX1310_SCI_PWREN_PCLK_B =			LUX1310_SCI_REG(0x60, 0x0002)
+	LUX1310_SCI_PWREN_BIAS_B =			LUX1310_SCI_REG(0x60, 0x0004)
+	LUX1310_SCI_PWREN_DRV_B =			LUX1310_SCI_REG(0x60, 0x0008)
+	LUX1310_SCI_PWREN_ADC_B =			LUX1310_SCI_REG(0x60, 0x0010)
+	LUX1310_SCI_SEL_VCMI =				LUX1310_SCI_REG(0x62, 0x000f)
+	LUX1310_SCI_SEL_VCMO =				LUX1310_SCI_REG(0x62, 0x00f0)
+	LUX1310_SCI_SEL_VCMP =				LUX1310_SCI_REG(0x62, 0x0f00)
+	LUX1310_SCI_SEL_VCMN =				LUX1310_SCI_REG(0x62, 0xf000)
+	LUX1310_SCI_HIDY_EN =				LUX1310_SCI_REG(0x67, 0x0001)
+	LUX1310_SCI_HIDY_TRIG_NB_PULSE =	LUX1310_SCI_REG(0x68, 0xffff)
+	LUX1310_SCI_SEL_VDR1_WIDTH =		LUX1310_SCI_REG(0x69, 0xffff)
+	LUX1310_SCI_SEL_VDR2_WIDTH =		LUX1310_SCI_REG(0x6A, 0xffff)
+	LUX1310_SCI_SEL_VDR3_WIDTH =		LUX1310_SCI_REG(0x6B, 0xffff)
+	LUX1310_SCI_SER_SYNC =				LUX1310_SCI_REG(0x7c, 0x0001)
+	LUX1310_SCI_CLK_SYNC =				LUX1310_SCI_REG(0x7d, 0x0001)
+	LUX1310_SCI_SRESET_B =				LUX1310_SCI_REG(0x7e, 0x0001)
+
+# Undocumented Registers 
+	LUX1310_SCI_STATE_IDLE_CTRL0 =		LUX1310_SCI_REG(0x2d, 0xffff)
+	LUX1310_SCI_STATE_IDLE_CTRL1 =		LUX1310_SCI_REG(0x2e, 0xffff)
+	LUX1310_SCI_STATE_IDLE_CTRL2 =		LUX1310_SCI_REG(0x2f, 0xffff)
+	LUX1310_SCI_ADC_CLOCK_CTRL =		LUX1310_SCI_REG(0x5c, 0xffff)
+	LUX1310_SCI_LINE_VALID_DLY =		LUX1310_SCI_REG(0x71, 0xffff)
+	LUX1310_SCI_INT_CLK_TIMING =		LUX1310_SCI_REG(0x74, 0xffff)
+	LUX1310_SCI_WAVETAB_SIZE =			LUX1310_SCI_REG(0x7a, 0xffff)
+
+	LUX1310_SCI_REGISTER_COUNT =		0x7f
+
+
+
+
+
+
diff --git a/memobj.py b/memobj.py
index a9d8d03..a1d0ce8 100644
--- a/memobj.py
+++ b/memobj.py
@@ -34,10 +34,10 @@ class MemObject:
 
 
 	def fpga_read32(self, addr):
-		return self.mem.fpga_mmio.read32(2 * addr)
+		return self.fpga_mmio.read32(2 * addr)
 
 	def fpga_read16(self, addr):
-		return self.mem.fpga_mmio.read16(2 * addr)
+		return self.fpga_mmio.read16(2 * addr)
 
 
 
diff --git a/sensorobj.py b/sensorobj.py
index e396555..e3e3af2 100644
--- a/sensorobj.py
+++ b/sensorobj.py
@@ -113,7 +113,7 @@ class SensorObject():
 		print ("SensorObject Init")
 		#self.mem = mem
 		#print (mem)
-		# self.SensorInit()
+		self.SensorInit()
 
 	# print ("class SensorObject")
 	# print (mem)
@@ -125,4 +125,5 @@ class SensorObject():
 	# ImageGeometry.hres = 500000001
 	# ImageSensor = ImageSensorData
 	numfunc = luxnum
-
+	hMaxRes = 0;
+	vMaxRes = 0;
-- 
2.7.4


From 28090f15dce54b501011e2efa7466508252b78a6 Mon Sep 17 00:00:00 2001
From: Johan Thornton <johan@krontech.ca>
Date: Mon, 7 Jan 2019 13:42:41 -0800
Subject: [PATCH 5/7] Commit prior to Foobar's GPMC Python wrappers

---
 Python Documentation                     |   17 +
 Static IP for -etc-network-interfaces    |   14 +
 __pycache__/camobj.cpython-37.pyc        |  Bin 0 -> 3855 bytes
 __pycache__/memobj.cpython-37.pyc        |  Bin 0 -> 2717 bytes
 __pycache__/mmapregisters.cpython-37.pyc |  Bin 0 -> 4160 bytes
 camApp functions to implement            |  119 +++
 camobj.py                                |  435 ++++++--
 d309                                     |  163 +++
 d314                                     |  165 +++
 debug1                                   | 1687 +++++++++++++++++++++++++++++
 debug2                                   | 1688 +++++++++++++++++++++++++++++
 debug3                                   | 1691 ++++++++++++++++++++++++++++++
 debug4                                   | 1372 ++++++++++++++++++++++++
 debug5                                   | 1086 +++++++++++++++++++
 debug6                                   | 1086 +++++++++++++++++++
 debug7                                   |  229 ++++
 fpgatest.py                              |   94 ++
 io.py                                    |   35 +
 list of SCIWrites                        |  134 +++
 list of SCIWrites and FPGAWrites         |  124 +++
 list of SCIWrites and FPGAWrites2        |  119 +++
 live.py                                  |   65 +-
 lowpy.zip                                |  Bin 0 -> 27628 bytes
 lux1310.py                               |  797 ++++++++++++--
 lux1310h.py                              |  107 ++
 lux1310waves.py                          |  128 +++
 memobj.py                                |  284 ++++-
 mmapregisters.py                         |  456 ++++++--
 nonobj/camobj.py                         |    9 +
 nonobj/crctest.py                        |    4 +
 nonobj/live.py                           |   41 +
 nonobj/lux.py                            |   73 ++
 nonobj/luxh.py                           |   94 ++
 nonobj/mem.py                            |   79 ++
 nonobj/mmapregisters.py                  |  280 +++++
 nonobj/spi.py                            |   24 +
 python output dec 17.odt                 |  Bin 0 -> 26869 bytes
 python output dec14                      |  247 +++++
 python output with fake.odt              |  Bin 0 -> 26895 bytes
 red writes camApp.odt                    |  Bin 0 -> 17204 bytes
 root/camobj.py                           |   65 ++
 root/live.py                             |   37 +
 root/lux.py                              |   73 ++
 root/lux1310.py                          |  129 +++
 root/lux1310h.py                         |   94 ++
 root/memobj.py                           |   52 +
 root/mmapregisters.py                    |  280 +++++
 root/sensorobj.py                        |   63 ++
 root/spi.py                              |   24 +
 sensorobj.py                             |    8 +-
 spi.py                                   |    4 +-
 watch-camera-video.sh                    |   49 +
 watch-computer.sh                        |   18 +
 53 files changed, 13543 insertions(+), 299 deletions(-)
 create mode 100644 Python Documentation
 create mode 100644 Static IP for -etc-network-interfaces
 create mode 100644 __pycache__/camobj.cpython-37.pyc
 create mode 100644 __pycache__/memobj.cpython-37.pyc
 create mode 100644 __pycache__/mmapregisters.cpython-37.pyc
 create mode 100644 camApp functions to implement
 create mode 100644 d309
 create mode 100644 d314
 create mode 100644 debug1
 create mode 100644 debug2
 create mode 100644 debug3
 create mode 100644 debug4
 create mode 100644 debug5
 create mode 100644 debug6
 create mode 100644 debug7
 create mode 100644 fpgatest.py
 create mode 100644 io.py
 create mode 100644 list of SCIWrites
 create mode 100644 list of SCIWrites and FPGAWrites
 create mode 100644 list of SCIWrites and FPGAWrites2
 create mode 100644 lowpy.zip
 create mode 100644 lux1310waves.py
 create mode 100644 nonobj/camobj.py
 create mode 100644 nonobj/crctest.py
 create mode 100644 nonobj/live.py
 create mode 100644 nonobj/lux.py
 create mode 100644 nonobj/luxh.py
 create mode 100644 nonobj/mem.py
 create mode 100644 nonobj/mmapregisters.py
 create mode 100644 nonobj/spi.py
 create mode 100644 python output dec 17.odt
 create mode 100644 python output dec14
 create mode 100644 python output with fake.odt
 create mode 100644 red writes camApp.odt
 create mode 100644 root/camobj.py
 create mode 100644 root/live.py
 create mode 100644 root/lux.py
 create mode 100644 root/lux1310.py
 create mode 100644 root/lux1310h.py
 create mode 100644 root/memobj.py
 create mode 100644 root/mmapregisters.py
 create mode 100644 root/sensorobj.py
 create mode 100644 root/spi.py
 create mode 100644 watch-camera-video.sh
 create mode 100644 watch-computer.sh

diff --git a/Python Documentation b/Python Documentation
new file mode 100644
index 0000000..769a703
--- /dev/null
+++ b/Python Documentation	
@@ -0,0 +1,17 @@
+
+PYTHON OBJECTS DOCUMENTATION
+
+Johan Thornton
+
+
+
+CamObj
+
+
+
+SensorObj
+
+
+
+
+
diff --git a/Static IP for -etc-network-interfaces b/Static IP for -etc-network-interfaces
new file mode 100644
index 0000000..d0b00f3
--- /dev/null
+++ b/Static IP for -etc-network-interfaces	
@@ -0,0 +1,14 @@
+## Loopback interface
+auto lo
+iface lo inet loopback
+
+auto eth0
+iface eth0 inet static
+    address 192.168.1.213
+    netmask 255.255.255.0
+    gateway 192.168.1.1
+
+auto usb0
+iface usb0 inet static
+	address 192.168.12.1
+	netmask 255.255.255.0
diff --git a/__pycache__/camobj.cpython-37.pyc b/__pycache__/camobj.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..bee34865271c7effd77044db555d001fb3ee4781
GIT binary patch
literal 3855
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

literal 0
HcmV?d00001

diff --git a/__pycache__/memobj.cpython-37.pyc b/__pycache__/memobj.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..b07dc39c586c6d062c0da4fafcdaccaf8c4750ea
GIT binary patch
literal 2717
zcmbtWOK;mo5Z+x<5=A}ycH$&$+%{;Vpz<R&aw>v2jbj+7mB0;PfNeq0+O<uG6y+t=
z*o1->b$ag)=s`aA+Ml!6q6hthq9~BgtR7Z`q770CJ2NC_cfXx)W~hgyl1<>cU-<p2
zG*8HHcr&;RFdo2&9T1#w8W0CH3uwq3M$tCFHXK9SW?(+UXJ(M;>n!LD&%Po~j_0@q
z+S(#K&+S))+vm*5bNVHz6uPiJsa2>lcXqa)px%0_HN8`(_zo`A85p0#h!;U{%2`6%
z<eYMYlONdvxdK}cELb*EQ*7l_<yLxEm%*g&U$0-kh7F7(aSDnyej%~|&;MLpK8ixI
zd>kEljpe;aK3@)^7tOQfP=wL`@lx|l<r;onz_b#$$G8@u67BzmP~wqf7DWz(|A&Sr
zfeBKf5~<PfdZGxo%Id>dpMbjojxyMF7{d$C^Z-WuD+oax%8A2-fiZ)yn-DP*$jJ1`
z$@a;~^{8<yUf@M|pXViB25s{RJ_)+Or}#AJBA?;2e2&laE1<9P1%8cR=Qn<~osv(S
z^69!LbtW#zBl6AdubDIHOo?eR#ot>XAm3jgfM7<HJF{X^%=q+zQgV{+5iuvq=V0@j
zz}=$C?}+fp{;{YhJ{*DiWCf0h8HpEa6NXNPc`(}Km~<$oZ8}TZ>_X=zEW>I#tQDs6
z2hBsz4MRV2axbKxh}C-)Lz%G%4wUI}E|tl>#2b%xQBUhnxCtBeBc9F=;Vq52ygNcU
z39I+9t=+8{atiL{G>RD%$mmEKi~w7^`ysshS72**>pEk>5A`r~xaVl-F0dSjLDP^_
zRtk>;A~u3(3`{|Xpy&7T2$s3AAoV=n8H%H!0C8^x1^oU4%Idv0YIhiw8#*c-l0ZUX
zDzypNj9;deQS-mQmL>jA8(9KO&4Is~+1}aM+T3*??{4gDx=%NEx1T&x6a9zVwP)_L
z?VU}iX-(@`{BmLFMorOJLcj=v7)6>+T}H3}eh3%yADf2G{~y3epdDiIoUQ|ChUI;3
zK>6KzNr7J0G1^dOFQHu~W*hu?CdstfIXyR^^yc?^v#<%g{j4wcAS4}wTevPKkT&^R
zT7LX=YhzK0LqAT0j3xH$E_SUh9x62!tBXD+pI-#g#V}X0D$|sHBT*UYH4cSNIf)gm
zd#l98)~^LceZ|6Xybvsijb7m%xW<^!gj#Hx7U|W#OsC%nq;?+GDFVZxBiSSVn6&8v
zd1<tb4ow)w30sstBdtNxD7g4_a+{G%VwKUoL7Dqe6jV&juCkhb!)<t>P?>MNpe2-f
z*z}`u;CWnS4_nbD?BAoE+BBWHL_72tmJAY)6|CW6bHM7=Z~<tCULX+wlF3`}PMKJ6
zgI4khJds!u<3KFjW*0oS;pHWck*EzEDy;hfu4_cC1nh@sGrs}mEUpV38oEdK+K7F9
z#MXObii6JrKJVM#jrgn$Z96Rot<%-D)s-su>eYIjmIn9rD2Qa57ma$vg{*p)=6-4q
zp2jayJ3eY9kcd^Vi&E4h$*Y0jODk{Ot)_)U`iGEvRp2enA4p)X>dTW}`eF{(D)Y*6
zHKnerY}XAV-U<ZRMb|xPc>$8`x)Pb`Ww4G1_62zb#Z?qK79XK?2gRo#oH=(t@+5cb
zM>1+e@#?y(Q$@3vfz$|NWjq&W@;1&u@*Nu;yn0>4vC6iZ@X-<yKTIR6>h6MNC-FZ5
zem!EO#$vW@8I}nnV_DV&SXoBLe^%avx`7|lvn#eT6F(GAzA2>NJQDJ(cT5DMN@3_V
qhxP6lanpAUpy{%B^&<a-O<AAyqIe%8tP9s-MOrj13O~bQmiae+5jM5}

literal 0
HcmV?d00001

diff --git a/__pycache__/mmapregisters.cpython-37.pyc b/__pycache__/mmapregisters.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..0ca8c28a5dadb6ce1e4fc16c7fdcf144518372e8
GIT binary patch
literal 4160
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

literal 0
HcmV?d00001

diff --git a/camApp functions to implement b/camApp functions to implement
new file mode 100644
index 0000000..c428c40
--- /dev/null
+++ b/camApp functions to implement	
@@ -0,0 +1,119 @@
+
+
+SCI Writes:
+
+Camera::Init
+  Lux1310::Init
+    Lux1310::InitSensor
+      1 - 39
+  Camera::setImagerSettings
+    Lux1310::setResolution
+      40 - 43
+    Lux1310::setGain
+      44 - 46
+    Lux1310::updateWavetableSetting
+      Lux1310::setWavetable
+      47 - 50  
+
+
+FPGA Writes:
+
+Camera::Init
+  1
+  Camera::setLiveOutputTiming
+    2 - 11
+  12 - 16
+  Camera::setRecRegionStartWords
+    17
+  18
+  Lux1310::Init
+    Lux1310::InitSensor
+      19 - 20
+      Lux1310::setReset
+        21 - 22
+      Lux1310::autoPhaseCal
+        Lux1310::setClkPhase
+          23 - 25
+      26 - 27
+      Lux1310::setFramePeriod
+        Lux1310::setSlavePeriod
+          28 
+      Lux1310::setIntegrationTime
+        Lux1310::setSlaveExposure
+          29
+  IO::init
+    IO::setTriggerEnable
+      30
+    IO::setTriggerInvert
+      31
+    IO::setTriggerDebounceEn
+      32
+    IO::[misc]
+      33 - 39
+  Camera::setImagerSettings
+    40
+    Lux1310::setFramePeriod
+      Lux1310::setSlavePeriod
+        41 
+    Lux1310::updateWavetableSetting
+      Lux1310::setWavetable
+        Lux1310::setABNDelayClocks
+          42
+    43
+    Lux1310::setSlaveExposure
+      44
+  Camera::setFrameSizeWords
+      45
+    Camera::setDisplaySettings
+      Camera::setLiveOutputTiming
+        46 - 55
+  IO::setTriggerDelayFrames
+    56
+  Camera::autoFPNCorrection
+    IO::setShutterGatingEnable
+      57
+    Camera::setIntegrationTime
+      Camera::setSlaveExposure
+        58
+    Camera::setRecSequencerModeSingleBlock
+      Camera::setRecRegionEndWords
+        59
+      Camera::writeSeqPgmMemory
+        60 - 61
+      Camera::setFrameSizeWords
+        62
+    Camera::startRecording
+      Camera::startSequencer
+        63 - 64
+      Camera::setShutterGatingEnable
+       65
+    Camera::setIntegrationTime
+      Lux1310:::setIntegrationTime
+        Lux1310::setSlaveExposure
+          66
+    Camera::computeFPNCorrection2
+      Lux1310::seqOnOff
+        67
+      Lux1310::setIntegrationTime
+        Lux1310:::setIntegrationTime
+          Lux1310::setSlaveExposure
+            68
+       Lux1310::setWhiteBalance
+         69 - 71
+  Camera::setCCMatrix
+    72 - 80
+  Camera::setWhiteBalance
+    81 - 83
+  Camera::setFocusPeakColorLL
+    84 
+  Camera::setFocusPeakThresholdLL
+    85      
+
+
+<on_expSliderValueChanged>
+  Camera::setIntegrationTime
+    Lux1310::setIntegrationTime
+      Lux1310::setSlaveExposure
+        86
+
+
diff --git a/camobj.py b/camobj.py
index f7fb8eb..3086e24 100644
--- a/camobj.py
+++ b/camobj.py
@@ -1,8 +1,10 @@
 
 # Camera class
 #from mem import fpga_mmio
-from periphery import GPIO
+import time
+import pdb
 
+from termcolor import colored
 from mmapregisters import *
 from memobj import MemObject
 from sensorobj import SensorObject
@@ -53,10 +55,32 @@ def i2c_eeprom_do_read(addr,  offset,  leng):
 
 
 class CamObject:
+
+
+
+	ioports = board_chronos14_ioports
+
+		# self.CamInit()
+
+
+	print ("continue")
+	mem = MemObject()
+	mem.CtypesTest()
+
+	# exit()
+
+	FPGAWrite32 = mem.FPGAWrite32
+	FPGAWrite16 = mem.FPGAWrite16
+	FPGAWrite8 = mem.FPGAWrite8
+
+	#pdb.set_trace()
+	sensor = Lux1310Object(mem)
+
+
 	def __init__(self):
 		print ("CamObject Init")
 		self.CamInit()
-		thiscam = self
+		#thiscam = self
 	
 		
 	#print("CamObject created")
@@ -143,21 +167,176 @@ class CamObject:
 			   fps, hOutRes, vOutRes, maxFPS)
 
 		g = self.sensor.ImageGeometry
-		self.mem.fpga_write32(DISPLAY_H_RES, g.hres)
-		self.mem.fpga_write32(DISPLAY_V_RES, g.vres)
+		self.mem.FPGAWrite32("DISPLAY_H_RES", g.hres)
+		self.mem.FPGAWrite32("DISPLAY_V_RES", g.vres)
 		print (f"ImageGeometry: {g}")
 
 
+	def getFPGAVersion(self):
+		ver = self.mem.FPGARead16("FPGA_VERSION")
+		print (f"Version is {ver}")
+		return ver
+
+	def getFPGASubVersion(self):
+		sver = self.mem.FPGARead16("FPGA_SUBVERSION")
+		print (f"Subversion is {sver}")
+		return sver
+
+	def setLiveOutputTiming(self, hRes, vRes, hOutRes, vOutRes, maxFps):
+
+		#consts:
+		hSync = 1
+		hBackPorch = 64
+		hFrontPorch = 4
+		vSync = 1
+		vBackPorch = 4
+		vFrontPorch = 1
+	
+		pxClock = 100000000
+	
+		# minHPeriod;
+		# hPeriod;
+		# vPeriod;
+		# UInt32 fps;
+
+		# FPGA revision 3.14 and higher use a 133MHz video clock. 
+		if ((self.getFPGAVersion() > 3) or (self.getFPGASubVersion() >= 14)):
+			print ("Faster FPGA clock enabled")
+			pxClock = 133333333
+
+		hPeriod = hSync + hBackPorch + hOutRes + hFrontPorch;
+
+		# calculate minimum hPeriod to fit within the 1024 max vertical resolution
+		# and make sure hPeriod is equal or larger
+		minHPeriod = (pxClock // ((1024+vBackPorch+vSync+vFrontPorch) * maxFps)) + 1 # the +1 is just to round up
+		if hPeriod < minHPeriod:
+			hPeriod = minHPeriod
+
+		# calculate vPeriod and make sure it's large enough for the frame
+		vPeriod = pxClock // (hPeriod * maxFps)
+		if (vPeriod < (vOutRes + vBackPorch + vSync + vFrontPorch)):
+			vPeriod = (vOutRes + vBackPorch + vSync + vFrontPorch)
+	
+		# calculate FPS for debug output
+		fps = pxClock // (vPeriod * hPeriod);
+		print ("setLiveOutputTiming: %d*%d@%d (%d*%d max: %d)" % \
+		   ((hPeriod - hBackPorch - hSync - hFrontPorch),
+		   (vPeriod - vBackPorch - vSync - vFrontPorch),
+		   fps, hOutRes, vOutRes, maxFps))
+
+		self.mem.FPGAWrite16("DISPLAY_H_RES", hRes)
+		self.mem.FPGAWrite16("DISPLAY_H_OUT_RES", hOutRes)
+		self.mem.FPGAWrite16("DISPLAY_V_RES", vRes)
+		self.mem.FPGAWrite16("DISPLAY_V_OUT_RES", vOutRes)
+
+		self.mem.FPGAWrite16("DISPLAY_H_PERIOD", hPeriod - 1)
+		self.mem.FPGAWrite16("DISPLAY_H_SYNC_LEN", hSync)
+		self.mem.FPGAWrite16("DISPLAY_H_BACK_PORCH", hBackPorch)
+
+		self.mem.FPGAWrite16("DISPLAY_V_PERIOD", vPeriod - 1)
+		self.mem.FPGAWrite16("DISPLAY_V_SYNC_LEN", vSync)
+		self.mem.FPGAWrite16("DISPLAY_V_BACK_PORCH", vBackPorch)
+
+
+	def FakeIO(self):
+		print ("TODO: don't do fake IO")
+		self.mem.fpga_write16(0xa0, 0x1)
+		self.mem.fpga_write16(0xa4, 0x1)
+		self.mem.fpga_write16(0xa8, 0x0)
+		self.mem.fpga_write32(0x60, 0x0)	
+		self.mem.fpga_write16(0xb4, 0x0)
+		self.mem.fpga_write16(0xb0, 0x0)
+		self.mem.fpga_write16(0xac, 0x2)
+		self.mem.fpga_write16(0xbc, 0x0)
+		self.mem.fpga_write16(0xbc, 0x0)
+		self.mem.fpga_write16(0xbc, 0x0)
+
+
+	def Fake16(self, addr, data):
+			# breakpoint()
+			print (f"--- faking 16 bit (0x{(addr * 2):x}, (0x{data:x})")
+			self.mem.fpga_write16(addr * 2, data)
+	def Fake32(self, addr, data):
+			# breakpoint()
+			print (f"=== faking 32 bit (0x{(addr * 2):x}, (0x{data:x})")
+			self.mem.fpga_write32(addr * 2, data)
+
+	def FakeInit(self):
+		print ("TODO: don't do fake init")
+
+		self.Fake16(0x36, 0x52)
+		self.Fake32(0x10, 0x12e5a)
+		self.Fake16(0x24, 0xf000)
+		self.Fake16(0x214, 0x500)
+		self.Fake16(0x218, 0x500)
+		self.Fake16(0x216, 0x400)
+		self.Fake16(0x220, 0x400)
+		self.Fake16(0x208, 0x652)
+		self.Fake16(0x20c, 0x1)
+		self.Fake16(0x210, 0x40)
+		self.Fake16(0x20a, 0x405)
+		self.Fake16(0x20e, 0x1)
+		self.Fake16(0x212, 0x4)
+		self.Fake32(0x30, 0x0)
+		self.Fake16(0x5e, 0x0)
+		self.Fake32(0x10, 0x78)
+		self.Fake32(0x28, 0x1fffe000)
+		self.Fake32(0x82, 0x0)
+		self.Fake32(0x80, 0x200c)
+		self.Fake16(0x24, 0xf000)
+		self.Fake32(0x20, 0x2)
+		self.Fake32(0x20, 0x0)
+		self.Fake16(0x5e, 0x0)
+		self.Fake32(0x10, 0x12e5a)
+		self.Fake32(0x10, 0x0)
+		self.Fake32(0x10, 0x12e5a)
+		self.Fake16(0x278, 0x10e5)
+		self.Fake16(0x27a, 0x10e5)
+		self.Fake16(0x27c, 0x10e5)
+		self.Fake16(0x260, 0x1ea2)
+		self.Fake16(0x262, 0xf6c6)
+		self.Fake16(0x264, 0xfc41)
+		self.Fake16(0x268, 0xfb1d)
+		self.Fake16(0x26a, 0x163b)
+		self.Fake16(0x26c, 0xfe74)
+		self.Fake16(0x26e, 0x209)
+		self.Fake16(0x270, 0xf0c1)
+		self.Fake16(0x272, 0x1a63)
+		self.Fake16(0x278, 0x16ce)
+		self.Fake16(0x27a, 0x10e5)
+		self.Fake16(0x27c, 0x1ac3)
+		self.Fake32(0x200, 0x280)
+		self.Fake32(0x222, 0x19)
+		self.Fake32(0x10, 0x12c31)
+
+
+
+
 
 	 
 	def CamInit(self):
+
+		print("CamInit()")
 		
-		print (self.sensor)
+	
+		#breakpoint()	
+
+		# Reset the FPGA
+		#self.mem.fpga_write16(SYSTEM_RESET, 1)
+		
+		#TESTING! no reset
+		#self.mem.FPGAWrite16("SYSTEM_RESET", 1)
+		
+
+		# Give it some time
+		time.sleep(0.2)
+
+		self.setLiveOutputTiming(1296, 1024, 1280, 1024, 60)
 
 		print (f"pixel rate is {self.sensor.ImageSensor.pixel_rate}")
 		 
 		maxfps = self.sensor.ImageSensor.pixel_rate / \
-			(self.sensor.ImageSensor.h_max_res * self.sensor.ImageSensor.v_max_res);
+			(self.sensor.ImageSensor.h_max_res * self.sensor.ImageSensor.v_max_res)
 		print (f"maxfps is {maxfps}")
 		
 		g = self.sensor.ImageGeometry 
@@ -172,109 +351,229 @@ class CamObject:
 		self.sensor.hMaxRes = self.sensor.ImageSensor.h_max_res
 		self.sensor.vMaxRes = self.sensor.ImageSensor.v_max_res
 
-		print (self.sensor)
+		# print (self.sensor)
 		# Configure the FIFO threshold and image sequencer
 
-		self.mem.fpga_write32(SEQ_LIVE_ADDR_0, MAX_FRAME_LENGTH)
-		self.mem.fpga_write32(SEQ_LIVE_ADDR_1, MAX_FRAME_LENGTH * 2)
-		self.mem.fpga_write32(SEQ_LIVE_ADDR_2, MAX_FRAME_LENGTH * 3)
-		self.mem.fpga_write32(SEQ_REC_REGION_START, REC_START_ADDR)
 
-		frame_words = int(((self.sensor.hMaxRes * self.sensor.vMaxRes * self.image_sensor_bpp()) / 8 + (32 - 1)) / 32)
-		print(f"frame_words = {frame_words}")
-		print(f"hMaxRes = {self.sensor.hMaxRes}")
-		self.mem.fpga_write32(SEQ_FRAME_SIZE, (frame_words + 0x3f) & ~0x3f)
-		
+		self.mem.FPGAWrite16("SENSOR_FIFO_START_W_THRESH", 0x100)
+		self.mem.FPGAWrite16("SENSOR_FIFO_STOP_W_THRESH", 0x100)
+
+
 
+		self.mem.FPGAWrite32("SEQ_LIVE_ADDR_0", MAX_FRAME_LENGTH)
+		self.mem.FPGAWrite32("SEQ_LIVE_ADDR_1", MAX_FRAME_LENGTH * 2)
+		self.mem.FPGAWrite32("SEQ_LIVE_ADDR_2", MAX_FRAME_LENGTH * 3)
+		self.mem.FPGAWrite32("SEQ_REC_REGION_START", REC_START_ADDR) #in camApp this uses setRecRegionStartWords
 
+		print ("---------")
 		#temporary single definition; move to fpgah.py
 		DISPLAY_CTL_READOUT_INHIBIT = (1 << 3)
 
 		dctrl = self.mem.fpga_read32(DISPLAY_CTL)
+		print (f"dctrl is 0x{dctrl:x}")
 		dctrl &= ~DISPLAY_CTL_READOUT_INHIBIT
-		self.mem.fpga_write32(DISPLAY_CTL, dctrl)
+		print (f"AND mask is 0x{DISPLAY_CTL_READOUT_INHIBIT:x}")
+		#MANUAL KLUDGE!
+		dctrl = 0x2f0
+		# exit()
 
+		self.mem.FPGAWrite32("DISPLAY_CTL", dctrl)  #(18)
 
+		# exit()
 
+		self.mem.FPGAWrite32("IMAGER_FRAME_PERIOD", 100 * 4000)		# 18
+		self.mem.FPGAWrite32("IMAGER_INT_TIME", 100 * 3900)			# 19
 
-		self.SetLiveTiming(self.sensor.hMaxRes, self.sensor.vMaxRes, 60)
-		print ("--> SENSOR:")
-		print (self.sensor.ImageGeometry)
+		# exit()
 
-	def GPIOWrite(self, pin_name, value):
-		gpio = self._GPIO_ports[pin_name]
-		gpio.write(bool(value))
 
-	def GPIORead(self, pin_name):
-		gpio = self._GPIO_ports[pin_name]
-		return gpio.read()
+		#TODO - dereference through SensorObj:
+		breakpoint()
+		self.sensor._writeDACVoltages()
+		# exit()
 
+		# breakpoint()
 
-	_board_chronos14_gpio = {
-	"lux1310-dac-cs" : (33, "out"),
-	"lux1310-color" :  (66, "in"),
-	"encoder-a" :      (20, "in"),
-	"encoder-b" :      (26, "in"),
-	"encoder-sw" :     (27, "in"),
-	"shutter-sw" :     (66, "in"),
-	"record-led.0" :   (41, "out"),
-	"record-led.1" :   (25, "out"),
-	"trigger-pin" :    (127, "in"),
-	"frame-irq" :      (51, "in"),
-	# FPGA Programming Pins 
-	# "ecp5-progn" :     (47, ""),
-	# "ecp5-init" :      (45, ""),
-	# "ecp5-done" :      (52, ""),
-	# "ecp5-cs" :        (58, ""),
-	# "ecp5-holdn" :     (58  ""),
-	}
+		print (self.sensor)
+		time.sleep(0.01)
+		self.sensor.lux1310SetReset(True)
+		self.sensor.lux1310SetReset(False)
+		time.sleep(0.001)
 
-	_GPIO_ports = {}
+		print ("#############\nLux has been reset\n#############")
 
-	for key, value in _board_chronos14_gpio.items():
-		gpioaccess = GPIO(value[0], value[1])
-		_GPIO_ports.update({key : gpioaccess})
+		# self.sensor.Lux1310RegDump()
 
-	#print(_GPIO_ports)
+		# breakpoint()
 
-	print ("begin")
-	mem = MemObject()
-	#sensor = SensorObject(mem)
-	#sensor = Lux1310Object(mem)
-	sensor = Lux1310Object(mem)
+		#TODO: this goes into sensor abstraction
+		self.sensor.Lux1310Write("LUX1310_SCI_SRESET_B", 0)
+
+		# exit()
+
+		self.sensor.SensorInit2()
+
+		# exit()
+
+		#self.sensor.Lux1310AutoPhaseCal()			
+
+		self.sensor.LuxInit2()
+
+		# exit()
+
+		# breakpoint()
+
+		self.FakeIO()
+
+		# breakpoint()
 
+		self.setImagerSettings()
+
+		# exit()
+
+		breakpoint()
+		self.FakeInit()
+
+		# frame_words = int(((self.sensor.hMaxRes * self.sensor.vMaxRes * self.image_sensor_bpp()) / 8 + (32 - 1)) / 32)
+		# print(f"frame_words = {frame_words}")
+		# print(f"hMaxRes = {self.sensor.hMaxRes}")
+		# self.FPGAWrite32("SEQ_FRAME_SIZE", (frame_words + 0x3f) & ~0x3f)
+		
+
+
+
+		# this was from daemon:
+		# self.SetLiveTiming(self.sensor.hMaxRes, self.sensor.vMaxRes, 60)
+		# print ("--> SENSOR:")
+		# print (self.sensor.ImageGeometry)
+
+		#ReadSerial()
+
+		#sensor = SensorObject(mem)
+		#sensor = Lux1310Object(mem)
 	
-	ioports = board_chronos14_ioports
+	
+	def setImagerSettings(self):
+		#TODO: all this
+		# self.mem.FPGAWrite32("IMAGER_INT_TIME", 0)
+		# self.mem.FPGAWrite16("SENSOR_LINE_PERIOD", 0)
+		self.mem.FPGAWrite32("IMAGER_INT_TIME", 0)
+		
 
-	# self.CamInit()
+		self.sensor.Lux1310SetResolutions()
+		#breakpoint()
+		#self.sensor.Lux1310SetFramePeriod(self.sensor.currentPeriod, self.sensor.currentHRes, self.sensor.currentVRes)
 
+		#FAKE:
+		self.sensor.mem.FPGAWrite32("IMAGER_FRAME_PERIOD", 0x1716f)
 
-	ReadSerial()
 
+		self.sensor.Lux1310SetGain(self.sensor.gain)
 
+		self.sensor.Lux1310UpdateWavetableSetting()
 
 
-	# self.SetLiveTiming()
 
+		self.sensor.Lux1310LoadColGainFromFile()
+
+
+		#TODO: finish this section instead of faking it
+
+
+		#Set the timing generator to handle the line period
+		# self.FPGAWrite16("SENSOR_LINE_PERIOD", \
+		# 	max((self.sensor.currentHRes / LUX1310_HRES_INCREMENT) + 2, (sensor.wavetableSize + 3)) - 1)
+		# time.sleep(0.01)
+		# print ("About to setSlaveExposure")
 
+		# self.sensor.setSlaveExposure(settings.exposure)
+		# self.sensor.seqOnOff(true);
 
 
-# minHPeriod;
-# hPeriod;
-# vPeriod;
-# fps;
+
+'''
+	imagerSettings.hRes = settings.hRes;
+	imagerSettings.stride = settings.stride;
+	imagerSettings.vRes = settings.vRes;
+	imagerSettings.hOffset = settings.hOffset;
+	imagerSettings.vOffset = settings.vOffset;
+	imagerSettings.period = settings.period;
+	imagerSettings.exposure = settings.exposure;
+	imagerSettings.gain = settings.gain;
+	imagerSettings.disableRingBuffer = settings.disableRingBuffer;
+	imagerSettings.mode = settings.mode;
+	imagerSettings.prerecordFrames = settings.prerecordFrames;
+	imagerSettings.segmentLengthFrames = settings.segmentLengthFrames;
+	imagerSettings.segments = settings.segments;
+
+    //Zero trigger delay for Gated Burst
+    if(settings.mode == RECORD_MODE_GATED_BURST)
+	io->setTriggerDelayFrames(0, FLAG_TEMPORARY);
+
+	imagerSettings.frameSizeWords = ROUND_UP_MULT((settings.stride * (settings.vRes+0) * 12 / 8 + (BYTES_PER_WORD - 1)) / BYTES_PER_WORD, FRAME_ALIGN_WORDS);	//Enough words to fit the frame, but make it even
+
+    UInt32 maxRecRegionSize = getMaxRecordRegionSizeFrames(imagerSettings.hRes, imagerSettings.vRes);  //(ramSize - REC_REGION_START) / imagerSettings.frameSizeWords;
+
+    if(settings.recRegionSizeFrames > maxRecRegionSize)
+	imagerSettings.recRegionSizeFrames = maxRecRegionSize;
+    else
+	imagerSettings.recRegionSizeFrames = settings.recRegionSizeFrames;
+
+    setFrameSizeWords(imagerSettings.frameSizeWords);
+
+	qDebug() << "About to sensor->loadADCOffsetsFromFile";
+	sensor->loadADCOffsetsFromFile();
+
+	loadColGainFromFile();
+
+	qDebug()	<< "\nSet imager settings:\nhRes" << imagerSettings.hRes
+				<< "vRes" << imagerSettings.vRes
+				<< "stride" << imagerSettings.stride
+				<< "hOffset" << imagerSettings.hOffset
+				<< "vOffset" << imagerSettings.vOffset
+				<< "exposure" << imagerSettings.exposure
+				<< "period" << imagerSettings.period
+				<< "frameSizeWords" << imagerSettings.frameSizeWords
+				<< "recRegionSizeFrames" << imagerSettings.recRegionSizeFrames;
+
+	if (settings.temporary) {
+		qDebug() << "--- settings --- temporary, not saving";
+	}
+	else {
+		qDebug() << "--- settings --- saving";
+	appSettings.setValue("camera/hRes",                 imagerSettings.hRes);
+	appSettings.setValue("camera/vRes",                 imagerSettings.vRes);
+	appSettings.setValue("camera/stride",               imagerSettings.stride);
+	appSettings.setValue("camera/hOffset",              imagerSettings.hOffset);
+	appSettings.setValue("camera/vOffset",              imagerSettings.vOffset);
+	appSettings.setValue("camera/gain",                 imagerSettings.gain);
+	appSettings.setValue("camera/period",               imagerSettings.period);
+	appSettings.setValue("camera/exposure",             imagerSettings.exposure);
+	appSettings.setValue("camera/recRegionSizeFrames",  imagerSettings.recRegionSizeFrames);
+	appSettings.setValue("camera/disableRingBuffer",    imagerSettings.disableRingBuffer);
+	appSettings.setValue("camera/mode",                 imagerSettings.mode);
+	appSettings.setValue("camera/prerecordFrames",      imagerSettings.prerecordFrames);
+	appSettings.setValue("camera/segmentLengthFrames",  imagerSettings.segmentLengthFrames);
+	appSettings.setValue("camera/segments",             imagerSettings.segments);
+	}
+'''
 
 
-# def cam_init(cam):
+		#TODO do this properly
 
-# 	frame_words = 0
-# 	maxfps = 3
 
 
 
 
-#print ("cam begin")
 
-#camobj = CamObject()
 
-#camobj.mem.mm_print()
+
+
+
+
+
+
+
+	# self.SetLiveTiming()
+
+
diff --git a/d309 b/d309
new file mode 100644
index 0000000..484f17e
--- /dev/null
+++ b/d309
@@ -0,0 +1,163 @@
+	ADDR    MASK                            NAME  VALUE
+	0x0068  0xffffffff               magic_delay  0x19
+	0x006c  0xffffffff               line_period  0x51
+	0x00a0  0xffffffff               trig_enable  0x0
+	0x00a4  0xffffffff               trig_invert  0x0
+	0x00a8  0xffffffff             trig_debounce  0x0
+	0x0520  0x00000001                 mmu.csinv  0x0
+	0x0520  0x00000002               mmu.stuffed  0x0
+	0x0604  0xffffffff                   version  0x3
+	0x0608  0xffffffff                subversion  0x9
+
+Sensor Registers:
+	ADDR    MASK                            NAME  VALUE
+	0x0000  0x00000001               control.run  0x0
+	0x0000  0x00000002                control.rw  0x0
+	0x0000  0x00000004              control.full  0x1
+	0x0004  0xffffffff                 clk_phase  0x0
+	0x0008  0xffffffff                sync_token  0xfc0
+	0x000c  0xffffffff              data_correct  0x0
+	0x0010  0xffffffff                fifo_start  0x100
+	0x0014  0xffffffff                 fifo_stop  0x100
+	0x001c  0xffffffff              frame_period  0x186a0
+	0x0020  0xffffffff                  int_time  0x275b
+
+Sequencer Registers:
+	ADDR    MASK                            NAME  VALUE
+	0x0040  0x00000001            control.swtrig  0x0
+	0x0040  0x00000002             control.start  0x0
+	0x0040  0x00000004              control.stop  0x0
+	0x0040  0x00000008             control.delay  0x0
+	0x0044  0x00000001             status.record  0x0
+	0x0044  0x00000002             status.mdfifo  0x1
+	0x0048  0xffffffff                frame_size  0xf000
+	0x004c  0xffffffff              region_start  0x3c000
+	0x0050  0xffffffff               region_stop  0x1ffc980
+	0x0054  0xffffffff              live_addr[0]  0xf000
+	0x0058  0xffffffff              live_addr[1]  0x1e000
+	0x005c  0xffffffff              live_addr[2]  0x2d000
+	0x0060  0xffffffff                trig_delay  0x0
+	0x0064  0xffffffff              md_fifo_read  0x0
+
+Display Registers:
+	ADDR    MASK                            NAME  VALUE
+	0x0400  0x00000001          control.addr_sel  0x0
+	0x0400  0x00000002         control.scaler_nn  0x0
+	0x0400  0x00000004          control.sync_inh  0x0
+	0x0400  0x00000008          control.read_inh  0x0
+	0x0400  0x00000010        control.color_mode  0x0
+	0x0400  0x00000020        control.focus_peak  0x0
+	0x0400  0x000001c0       control.focus_color  0x3
+	0x0400  0x00000200             control.zebra  0x0
+	0x0400  0x00000400         control.black_cal  0x0
+	0x0404  0xffffffff             frame_address  0x0
+	0x0408  0xffffffff               fpn_address  0x0
+	0x040c  0xffffffff                      gain  0x1000
+	0x0410  0xffffffff                  h_period  0x619
+	0x0414  0xffffffff                  v_period  0x42a
+	0x0418  0xffffffff                h_sync_len  0x32
+	0x041c  0xffffffff                v_sync_len  0x3
+	0x0420  0xffffffff              h_back_porch  0xa6
+	0x0424  0xffffffff              v_back_porch  0x26
+	0x0428  0xffffffff                     h_res  0x500
+	0x042c  0xffffffff                     v_res  0x400
+	0x0430  0xffffffff                 h_out_res  0x500
+	0x0440  0xffffffff                 v_out_res  0x400
+	0x0444  0xffffffff            peaking_thresh  0x19
+	0x0448  0x00000001       pipeline.bypass_fpn  0x0
+	0x0448  0x00000002      pipeline.bypass_gain  0x0
+	0x0448  0x00000004  pipeline.bypass_demosaic  0x0
+	0x0448  0x00000008       pipeline.bypass_ccm  0x0
+	0x0448  0x00000010     pipeline.bypass_gamma  0x0
+	0x0448  0x00000020        pipeline.raw_12bpp  0x0
+	0x0448  0x00000040        pipeline.raw_16bpp  0x0
+	0x0448  0x00000080        pipeline.raw_16pad  0x0
+	0x0448  0x00008000         pipeline.test_pat  0x0
+	0x0450  0xffffffff               manual_sync  0x0
+
+LUX1310 Registers:
+	ADDR    MASK                            NAME  VALUE
+0x0000  0x000000ff                  rev_chip  0x2
+0x0000  0x0000ff00               reg_chip_id  0xda
+0x0001  0x00000001             reg_timing_en  0x0
+0x0002  0x000000ff             reg_sof_delay  0xf
+0x0003  0x0000ffff                reg_hblank  0x2
+0x0004  0x00000007                reg_roi_nb  0x4
+0x0004  0x00000008                reg_roi_en  0x0
+0x0004  0x00000100            reg_drk_col_rd  0x0
+0x0004  0x00001000                 reg_vflip  0x0
+0x0004  0x00002000                 reg_hflip  0x0
+0x0005  0x000007ff               reg_x_start  0x1f
+0x0006  0x000007ff                 reg_x_end  0xf2
+0x0007  0x000007ff               reg_y_start  0xff
+0x0008  0x000007ff                 reg_y_end  0xa3
+0x0029  0x000007ff      reg_drk_rows_st_addr  0x404
+0x0029  0x0000f000           reg_nb_drk_rows  0x0
+0x002a  0x000007ff     reg_next_row_addr_ovr  0x1
+0x002a  0x00001000       reg_next_row_ovr_en  0x0
+0x002b  0x00000001          reg_inter_roi_sp  0x0
+0x002c  0x00000003          reg_clk_sel_scip  0x2
+0x002c  0x0000000c            reg_clk_sel_ft  0x0
+0x0031  0x0000ffff      reg_ft_trig_nb_pulse  0x1
+0x0034  0x0000ffff       reg_ft_rst_nb_pulse  0x1
+0x0035  0x00000010               reg_abn2_en  0x0
+0x0037  0x0000ffff             reg_rdout_dly  0xe8
+0x0039  0x00000001            reg_adc_cal_en  0x0
+0x003a  0x000007ff              reg_adc_os_0  0x7
+0x003b  0x000007ff              reg_adc_os_1  0xfc
+0x003c  0x000007ff              reg_adc_os_2  0xbf
+0x003d  0x000007ff              reg_adc_os_3  0xe8
+0x003e  0x000007ff              reg_adc_os_4  0xc7
+0x003f  0x000007ff              reg_adc_os_5  0x81
+0x0040  0x000007ff              reg_adc_os_6  0xff
+0x0041  0x000007ff              reg_adc_os_7  0x2f
+0x0042  0x000007ff              reg_adc_os_8  0xfa
+0x0043  0x000007ff              reg_adc_os_9  0x31
+0x0044  0x000007ff             reg_adc_os_10  0xe0
+0x0045  0x000007ff             reg_adc_os_11  0x7f
+0x0046  0x000007ff             reg_adc_os_12  0xcb
+0x0047  0x000007ff             reg_adc_os_13  0xfe
+0x0048  0x000007ff             reg_adc_os_14  0x8c
+0x0049  0x000007ff             reg_adc_os_15  0x78
+0x004a  0x000003ff      reg_adc_os_seq_width  0x1
+0x004b  0x00000fff        reg_pclk_linevalid  0xfc0
+0x004c  0x00000fff           reg_pclk_vblank  0xf00
+0x004d  0x00000fff           reg_pclk_hblank  0xf80
+0x004e  0x00000fff    reg_pclk_optical_black  0xfe0
+0x004f  0x00000001                  reg_mono  0x1
+0x004f  0x00000010                reg_row2en  0x0
+0x0050  0x00000003               reg_poutsel  0x1
+0x0050  0x00000010         reg_invert_analog  0x1
+0x0050  0x00000100        reg_global_shutter  0x1
+0x0051  0x00000fff         reg_gain_sel_samp  0xff
+0x0052  0x0000007f           reg_gain_sel_fb  0x23
+0x0053  0x00000007              reg_gain_bit  0x6
+0x0055  0x00000001               reg_colbin2  0x0
+0x0056  0x00000003               reg_tst_pat  0x0
+0x0057  0x00000fff              reg_cust_pat  0x0
+0x0058  0x00000003              reg_mux_mode  0x0
+0x0059  0x0000ffff   reg_pwr_en_serializer_b  0x0
+0x005a  0x00000007               reg_dac_ilv  0x1
+0x005a  0x00000008        reg_msb_first_data  0x0
+0x005a  0x00000010              reg_pclk_inv  0x0
+0x005a  0x00000020            reg_termb_data  0x1
+0x005a  0x00000040              reg_dclk_inv  0x0
+0x005a  0x00000080             reg_termb_clk  0x0
+0x005b  0x00001000           reg_termb_rxclk  0x0
+0x0060  0x00000001          reg_pwren_dclk_b  0x0
+0x0060  0x00000002          reg_pwren_pclk_b  0x0
+0x0060  0x00000004          reg_pwren_bias_b  0x0
+0x0060  0x00000008           reg_pwren_drv_b  0x0
+0x0060  0x00000010           reg_pwren_adc_b  0x0
+0x0062  0x0000000f              reg_sel_vcmi  0xc
+0x0062  0x000000f0              reg_sel_vcmo  0xf
+0x0062  0x00000f00              reg_sel_vcmp  0x0
+0x0062  0x0000f000              reg_sel_vcmn  0x0
+0x0067  0x00000001               reg_hidy_en  0x0
+0x0068  0x0000ffff    reg_hidy_trig_nb_pulse  0x1
+0x0069  0x0000ffff            reg_vdr1_width  0x40
+0x006a  0x0000ffff            reg_vdr2_width  0x2710
+0x006b  0x0000ffff            reg_vdr3_width  0x3e8
+0x007c  0x00000001              reg_ser_sync  0x0
+0x007d  0x00000001              reg_clk_sync  0x0
+0x007e  0x00000001              reg_sreset_b  0x1
diff --git a/d314 b/d314
new file mode 100644
index 0000000..1643a3d
--- /dev/null
+++ b/d314
@@ -0,0 +1,165 @@
+	ADDR    MASK                            NAME  VALUE
+	0x0068  0xffffffff               magic_delay  0x19
+	0x006c  0xffffffff               line_period  0x52
+	0x00a0  0xffffffff               trig_enable  0x1
+	0x00a4  0xffffffff               trig_invert  0x0
+	0x00a8  0xffffffff             trig_debounce  0x0
+	0x0520  0x00000001                 mmu.csinv  0x0
+	0x0520  0x00000002               mmu.stuffed  0x0
+	0x0604  0xffffffff                   version  0x3
+	0x0608  0xffffffff                subversion  0xe
+
+Sensor Registers:
+	ADDR    MASK                            NAME  VALUE
+	0x0000  0x00000001               control.run  0x0
+	0x0000  0x00000002                control.rw  0x0
+	0x0000  0x00000004              control.full  0x1
+	0x0004  0xffffffff                 clk_phase  0x0
+	0x0008  0xffffffff                sync_token  0xfc0
+	0x000c  0xffffffff              data_correct  0x1
+	0x0010  0xffffffff                fifo_start  0x100
+	0x0014  0xffffffff                 fifo_stop  0x100
+	0x001c  0xffffffff              frame_period  0x1716f
+	0x0020  0xffffffff                  int_time  0x16d65
+
+Sequencer Registers:
+	ADDR    MASK                            NAME  VALUE
+	0x0040  0x00000001            control.swtrig  0x0
+	0x0040  0x00000002             control.start  0x0
+	0x0040  0x00000004              control.stop  0x0
+	0x0040  0x00000008             control.delay  0x0
+	0x0044  0x00000001             status.record  0x0
+	0x0044  0x00000002             status.mdfifo  0x1
+	0x0048  0xffffffff                frame_size  0xf000
+	0x004c  0xffffffff              region_start  0x3c000
+	0x0050  0xffffffff               region_stop  0x1ffc980
+	0x0054  0xffffffff              live_addr[0]  0xf000
+	0x0058  0xffffffff              live_addr[1]  0x1e000
+	0x005c  0xffffffff              live_addr[2]  0x2d000
+	0x0060  0xffffffff                trig_delay  0x83f
+	0x0064  0xffffffff              md_fifo_read  0x0
+
+Display Registers:
+	ADDR    MASK                            NAME  VALUE
+	0x0400  0x00000001          control.addr_sel  0x0
+	0x0400  0x00000002         control.scaler_nn  0x0
+	0x0400  0x00000004          control.sync_inh  0x0
+	0x0400  0x00000008          control.read_inh  0x0
+	0x0400  0x00000010        control.color_mode  0x1
+	0x0400  0x00000020        control.focus_peak  0x0
+	0x0400  0x000001c0       control.focus_color  0x3
+	0x0400  0x00000200             control.zebra  0x1
+	0x0400  0x00000400         control.black_cal  0x0
+	0x0404  0xffffffff             frame_address  0x0
+	0x0408  0xffffffff               fpn_address  0x0
+	0x040c  0xffffffff                      gain  0x1000
+	0x0410  0xffffffff                  h_period  0x618
+	0x0414  0xffffffff                  v_period  0x42b
+	0x0418  0xffffffff                h_sync_len  0x32
+	0x041c  0xffffffff                v_sync_len  0x3
+	0x0420  0xffffffff              h_back_porch  0xa6
+	0x0424  0xffffffff              v_back_porch  0x26
+	0x0428  0xffffffff                     h_res  0x500
+	0x042c  0xffffffff                     v_res  0x400
+	0x0430  0xffffffff                 h_out_res  0x500
+	0x0440  0xffffffff                 v_out_res  0x400
+	0x0444  0xffffffff            peaking_thresh  0x19
+	0x0448  0x00000001       pipeline.bypass_fpn  0x0
+	0x0448  0x00000002      pipeline.bypass_gain  0x0
+	0x0448  0x00000004  pipeline.bypass_demosaic  0x0
+	0x0448  0x00000008       pipeline.bypass_ccm  0x0
+	0x0448  0x00000010     pipeline.bypass_gamma  0x0
+	0x0448  0x00000020        pipeline.raw_12bpp  0x0
+	0x0448  0x00000040        pipeline.raw_16bpp  0x0
+	0x0448  0x00000080        pipeline.raw_16pad  0x0
+	0x0448  0x00008000         pipeline.test_pat  0x0
+	0x0450  0xffffffff               manual_sync  0x0
+
+LUX1310 Registers:
+	ADDR    MASK                            NAME  VALUE
+0x0000  0x000000ff                  rev_chip  0x2
+0x0000  0x0000ff00               reg_chip_id  0xda
+0x0001  0x00000001             reg_timing_en  0x1
+0x0002  0x000000ff             reg_sof_delay  0xf
+0x0003  0x0000ffff                reg_hblank  0x2
+0x0004  0x00000007                reg_roi_nb  0x4
+0x0004  0x00000008                reg_roi_en  0x0
+0x0004  0x00000100            reg_drk_col_rd  0x0
+0x0004  0x00001000                 reg_vflip  0x0
+0x0004  0x00002000                 reg_hflip  0x0
+0x0005  0x000007ff               reg_x_start  0x20
+0x0006  0x000007ff                 reg_x_end  0x51f
+0x0007  0x000007ff               reg_y_start  0x0
+0x0008  0x000007ff                 reg_y_end  0x3ff
+0x0029  0x000007ff      reg_drk_rows_st_addr  0x404
+0x0029  0x0000f000           reg_nb_drk_rows  0x0
+0x002a  0x000007ff     reg_next_row_addr_ovr  0x1
+0x002a  0x00001000       reg_next_row_ovr_en  0x0
+0x002b  0x00000001          reg_inter_roi_sp  0x0
+0x002c  0x00000003          reg_clk_sel_scip  0x2
+0x002c  0x0000000c            reg_clk_sel_ft  0x0
+0x0031  0x0000ffff      reg_ft_trig_nb_pulse  0x1
+0x0034  0x0000ffff       reg_ft_rst_nb_pulse  0x1
+0x0035  0x00000010               reg_abn2_en  0x0
+0x0037  0x0000ffff             reg_rdout_dly  0x50
+0x0039  0x00000001            reg_adc_cal_en  0x0
+0x003a  0x000007ff              reg_adc_os_0  0x5b3
+0x003b  0x000007ff              reg_adc_os_1  0x550
+0x003c  0x000007ff              reg_adc_os_2  0x55a
+0x003d  0x000007ff              reg_adc_os_3  0x4cb
+0x003e  0x000007ff              reg_adc_os_4  0x3f
+0x003f  0x000007ff              reg_adc_os_5  0x4c3
+0x0040  0x000007ff              reg_adc_os_6  0x4d2
+0x0041  0x000007ff              reg_adc_os_7  0x513
+0x0042  0x000007ff              reg_adc_os_8  0x4f7
+0x0043  0x000007ff              reg_adc_os_9  0x1f
+0x0044  0x000007ff             reg_adc_os_10  0x20
+0x0045  0x000007ff             reg_adc_os_11  0x4bd
+0x0046  0x000007ff             reg_adc_os_12  0x29
+0x0047  0x000007ff             reg_adc_os_13  0x4c9
+0x0048  0x000007ff             reg_adc_os_14  0x24
+0x0049  0x000007ff             reg_adc_os_15  0x4eb
+0x004a  0x000003ff      reg_adc_os_seq_width  0x1
+0x004b  0x00000fff        reg_pclk_linevalid  0xfc0
+0x004c  0x00000fff           reg_pclk_vblank  0xf00
+0x004d  0x00000fff           reg_pclk_hblank  0xf80
+0x004e  0x00000fff    reg_pclk_optical_black  0xfe0
+0x004f  0x00000001                  reg_mono  0x1
+0x004f  0x00000010                reg_row2en  0x0
+0x0050  0x00000003               reg_poutsel  0x1
+0x0050  0x00000010         reg_invert_analog  0x1
+0x0050  0x00000100        reg_global_shutter  0x1
+0x0051  0x00000fff         reg_gain_sel_samp  0x7f
+0x0052  0x0000007f           reg_gain_sel_fb  0x7f
+0x0053  0x00000007              reg_gain_bit  0x3
+0x0055  0x00000001               reg_colbin2  0x0
+0x0056  0x00000003               reg_tst_pat  0x0
+0x0057  0x00000fff              reg_cust_pat  0xfc0
+0x0058  0x00000003              reg_mux_mode  0x0
+0x0059  0x0000ffff   reg_pwr_en_serializer_b  0x0
+0x005a  0x00000007               reg_dac_ilv  0x1
+0x005a  0x00000008        reg_msb_first_data  0x0
+0x005a  0x00000010              reg_pclk_inv  0x0
+0x005a  0x00000020            reg_termb_data  0x1
+0x005a  0x00000040              reg_dclk_inv  0x1
+0x005a  0x00000080             reg_termb_clk  0x0
+0x005b  0x00001000           reg_termb_rxclk  0x1
+0x0060  0x00000001          reg_pwren_dclk_b  0x0
+0x0060  0x00000002          reg_pwren_pclk_b  0x0
+0x0060  0x00000004          reg_pwren_bias_b  0x0
+0x0060  0x00000008           reg_pwren_drv_b  0x0
+0x0060  0x00000010           reg_pwren_adc_b  0x0
+0x0062  0x0000000f              reg_sel_vcmi  0x6
+0x0062  0x000000f0              reg_sel_vcmo  0x7
+0x0062  0x00000f00              reg_sel_vcmp  0xb
+0x0062  0x0000f000              reg_sel_vcmn  0x4
+0x0067  0x00000001               reg_hidy_en  0x0
+0x0068  0x0000ffff    reg_hidy_trig_nb_pulse  0x1
+0x0069  0x0000ffff            reg_vdr1_width  0x40
+0x006a  0x0000ffff            reg_vdr2_width  0x2710
+0x006b  0x0000ffff            reg_vdr3_width  0x3e8
+0x007c  0x00000001              reg_ser_sync  0x0
+0x007d  0x00000001              reg_clk_sync  0x0
+0x007e  0x00000001              reg_sreset_b  0x1
+
+
diff --git a/debug1 b/debug1
new file mode 100644
index 0000000..c22af1a
--- /dev/null
+++ b/debug1
@@ -0,0 +1,1687 @@
+
+stdin: is not a tty
+Could not read calibration: "/etc/pointercal" 
+Folder cal found, no need to create 
+Folder cal/factoryFPN found, no need to create 
+Folder userFPN found, no need to create 
+Testing QDebug
+QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
+------------------------------------------------------------------- 
+Found 16 GB memory stick in slot 0 
+ioctl(): Remote I/O error
+ioctl returned -1
+Found 0 GB memory stick in slot 1 
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+  -----write16 1536 :  1 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+  -----write16 1064 :  1296 
+  -----write16 1072 :  1280 
+  -----write16 1068 :  1024 
+  -----write16 1088 :  1024 
+  -----write16 1040 :  1618 
+  -----write16 1048 :  1 
+  -----write16 1056 :  64 
+  -----write16 1044 :  1029 
+  -----write16 1052 :  1 
+  -----write16 1060 :  4 
+  -----write16 16 :  256 
+  -----write16 20 :  256 
+  -----write32 84 :  61440 
+  -----write32 88 :  122880 
+  -----write32 92 :  184320 
+  -----write32 76 :  245760 
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  -----write32 1024 :  752 
+  -----write32 28 :  400000 
+  -----write32 32 :  410000 
+  -----write16 0 :  5 
+  -----write16 0 :  4 
+$$$$$$ sci write 126 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  126 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  126 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  126 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+$$$$$$ sci write 87 :  4032 
+  -----write16 36 :  2 
+  -----write16 40 :  87 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  87 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  87 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  87 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+SCI Read returned 4032 
+$$$$$$ sci write 86 :  2 
+  -----write16 36 :  2 
+  -----write16 40 :  86 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  86 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  86 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 76 :  4032 
+  -----write16 36 :  2 
+  -----write16 40 :  76 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  76 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  76 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 90 :  225 
+  -----write16 36 :  2 
+  -----write16 40 :  90 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  90 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  90 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+  -----write16 4 :  0 
+  -----write16 4 :  1 
+  -----write16 4 :  0 
+datacorrect 131071 
+$$$$$$ sci write 76 :  3840 
+  -----write16 36 :  2 
+  -----write16 40 :  76 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  76 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  76 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 86 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  86 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  86 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  86 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 55 :  80 
+  -----write16 36 :  2 
+  -----write16 40 :  55 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  55 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  55 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 122 :  80 
+  -----write16 36 :  2 
+  -----write16 40 :  122 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  122 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  122 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 113 :  7 
+  -----write16 36 :  2 
+  -----write16 40 :  113 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  113 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  113 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 45 :  57486 
+  -----write16 36 :  2 
+  -----write16 40 :  45 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  45 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  45 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 46 :  64543 
+  -----write16 36 :  2 
+  -----write16 40 :  46 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  46 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  46 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 47 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  47 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  47 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  47 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 92 :  8706 
+  -----write16 36 :  2 
+  -----write16 40 :  92 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  92 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  92 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 98 :  19318 
+  -----write16 36 :  2 
+  -----write16 40 :  98 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  98 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  98 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 116 :  1055 
+  -----write16 36 :  2 
+  -----write16 40 :  116 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  116 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  116 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  0 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+$$$$$$ sci write 91 :  12415 
+  -----write16 36 :  2 
+  -----write16 40 :  91 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  91 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  91 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 123 :  12295 
+  -----write16 36 :  2 
+  -----write16 40 :  123 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  123 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  123 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 58 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  58 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  58 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  58 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 59 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  59 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  59 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  59 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 60 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  60 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  60 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  60 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 61 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  61 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  61 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  61 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 62 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  62 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  62 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  62 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 63 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  63 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  63 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  63 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 64 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  64 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  64 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  64 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 65 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  65 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  65 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  65 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 66 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  66 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  66 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  66 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 67 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  67 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  67 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  67 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 68 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  68 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  68 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  68 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 69 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  69 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  69 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  69 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 70 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  70 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  70 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  70 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 71 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  71 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  71 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  71 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 72 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  72 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  72 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  72 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 73 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  73 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  73 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  73 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 57 :  1 
+  -----write16 36 :  2 
+  -----write16 40 :  57 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  57 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  57 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+$$$$$$ sci write 81 :  127 
+  -----write16 36 :  2 
+  -----write16 40 :  81 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  81 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  81 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 82 :  127 
+  -----write16 36 :  2 
+  -----write16 40 :  82 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  82 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  82 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 83 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  83 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  83 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  83 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  32768 
+  -----write16 40 :  127 
+  -----write16 44 :  427 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  39 
+  -----write16 48 :  250 
+  -----write16 48 :  33 
+  -----write16 48 :  160 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  165 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  233 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  181 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  237 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  251 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  212 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  181 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  237 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  251 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  212 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  181 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  237 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  165 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  233 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  165 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  31 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 36 :  1 
+$$$$$$ sci write 1 :  1 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write32 28 :  400000 
+  -----write32 32 :  390000 
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32 28 :  94575 
+  -----write32 32 :  94094 
+  -----write16 160 :  1 
+  -----write16 164 :  1 
+  -----write16 168 :  0 
+  -----write32 96 :  0 
+  -----write16 180 :  0 
+  -----write16 176 :  0 
+  -----write16 172 :  2 
+  -----write16 188 :  0 
+  -----write16 188 :  0 
+  -----write16 188 :  0 
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  -----write32 32 :  0 
+Settings.period is 94575 
+$$$$$$ sci write 5 :  32 
+  -----write16 36 :  2 
+  -----write16 40 :  5 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  5 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  5 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 6 :  1311 
+  -----write16 36 :  2 
+  -----write16 40 :  6 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  6 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  6 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 7 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  7 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  7 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  7 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 8 :  1023 
+  -----write16 36 :  2 
+  -----write16 40 :  8 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  8 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  8 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32 28 :  94575 
+$$$$$$ sci write 81 :  127 
+  -----write16 36 :  2 
+  -----write16 40 :  81 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  81 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  81 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 82 :  127 
+  -----write16 36 :  2 
+  -----write16 40 :  82 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  82 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  82 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 83 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  83 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  83 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  83 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+$$$$$$ sci write 1 :  0 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 55 :  80 
+  -----write16 36 :  2 
+  -----write16 40 :  55 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  55 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  55 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+$$$$$$ sci write 122 :  80 
+  -----write16 36 :  2 
+  -----write16 40 :  122 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  122 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  122 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  32768 
+  -----write16 40 :  127 
+  -----write16 44 :  427 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  39 
+  -----write16 48 :  250 
+  -----write16 48 :  33 
+  -----write16 48 :  160 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  140 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  163 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  199 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  49 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  129 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  127 
+  -----write16 48 :  203 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  31 
+  -----write16 48 :  242 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  7 
+  -----write16 48 :  252 
+  -----write16 48 :  191 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  47 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  165 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  233 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  181 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  237 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  251 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  212 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  181 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  237 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  251 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  212 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  181 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  237 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  165 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  233 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  81 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  148 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  165 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  63 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  128 
+  -----write16 48 :  255 
+  -----write16 48 :  15 
+  -----write16 48 :  250 
+  -----write16 48 :  17 
+  -----write16 48 :  224 
+  -----write16 48 :  63 
+  -----write16 48 :  195 
+  -----write16 48 :  254 
+  -----write16 48 :  132 
+  -----write16 48 :  120 
+  -----write16 48 :  15 
+  -----write16 48 :  240 
+  -----write16 48 :  255 
+  -----write16 48 :  161 
+  -----write16 48 :  30 
+  -----write16 48 :  3 
+  -----write16 48 :  252 
+  -----write16 48 :  31 
+  -----write16 48 :  232 
+  -----write16 48 :  71 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 48 :  0 
+  -----write16 36 :  1 
+$$$$$$ sci write 1 :  1 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 36 :  2 
+  -----write16 40 :  1 
+  -----write16 44 :  2 
+  -----write16 36 :  3 
+  -----write16 104 :  25 
+NOW Wavetable size set to 80 
+  -----write16 108 :  82 
+About to sensor->setSlaveExposure 
+  -----write32 32 :  87270 
+  -----write16 72 :  61440 
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 87281 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+  -----write16 1064 :  1280 
+  -----write16 1072 :  1280 
+  -----write16 1068 :  1024 
+  -----write16 1088 :  1024 
+  -----write16 1040 :  1618 
+  -----write16 1048 :  1 
+  -----write16 1056 :  64 
+  -----write16 1044 :  1029 
+  -----write16 1052 :  1 
+  -----write16 1060 :  4 
+  -----write32 96 :  0 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+  -----write16 188 :  0 
+  -----write32 32 :  120 
+Starting record with a length of 2 frames 
+  -----write32 80 :  536862720 
+  -----write32 260 :  0 
+  -----write32 256 :  8204 
+  -----write16 72 :  61440 
+  -----write32 64 :  2 
+  -----write32 64 :  0 
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+UI init done
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
+ NOW Starting rec data thread
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+  -----write16 188 :  0 
+--- Using old settings --- Exposure time: 87281 (default: 94075)
+  -----write32 32 :  87270 
+--- Saving settings --- Exposure time: 87281
+Record done, doing normal FPN correction 
+  -----write32 32 :  0 
+--- Using old settings --- Exposure time: 87281 (default: 94075)
+  -----write32 32 :  87270 
+--- Saving settings --- Exposure time: 87281
+imgGain set to 1.05214 
+Setting WB Matrix: 1.052145 1.052145 1.052145
+  -----write16 1264 :  4309 
+  -----write16 1268 :  4309 
+  -----write16 1272 :  4309 
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+  -----write16 1216 :  7842 
+  -----write16 1220 :  63174 
+  -----write16 1224 :  64577 
+  -----write16 1232 :  64285 
+  -----write16 1236 :  5691 
+  -----write16 1240 :  65140 
+  -----write16 1244 :  521 
+  -----write16 1248 :  61633 
+  -----write16 1252 :  6755 
+Setting WB Matrix: 1.420396 1.052145 1.666597
+  -----write16 1264 :  5817 
+  -----write16 1268 :  4309 
+  -----write16 1272 :  6826 
+  -----write32 1024 :  640 
+  -----write32 1092 :  25 
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  -----write32 32 :  86809 
+--- Saving settings --- Exposure time: 86758
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbebee4c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbebee4c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
diff --git a/debug2 b/debug2
new file mode 100644
index 0000000..a39bc73
--- /dev/null
+++ b/debug2
@@ -0,0 +1,1688 @@
+
+stdin: is not a tty
+Could not read calibration: "/etc/pointercal" 
+Folder cal found, no need to create 
+Folder cal/factoryFPN found, no need to create 
+Folder userFPN found, no need to create 
+Testing QDebug
+QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
+------------------------------------------------------------------- 
+true 
+Found 16 GB memory stick in slot 0 
+ioctl(): Remote I/O error
+ioctl returned -1
+Found 0 GB memory stick in slot 1 
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+  -----write16   0x600: 0x1
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+  -----write16   0x428: 0x510
+  -----write16   0x430: 0x500
+  -----write16   0x42c: 0x400
+  -----write16   0x440: 0x400
+  -----write16   0x410: 0x652
+  -----write16   0x418: 0x1
+  -----write16   0x420: 0x40
+  -----write16   0x414: 0x405
+  -----write16   0x41c: 0x1
+  -----write16   0x424: 0x4
+  -----write16   0x10: 0x100
+  -----write16   0x14: 0x100
+  -----write32   0x54: 0xf000
+  -----write32   0x58: 0x1e000
+  -----write32   0x5c: 0x2d000
+  -----write32   0x4c: 0x3c000
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  -----write32   0x400: 0x2f0
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x64190
+  -----write16   0x0: 0x5
+  -----write16   0x0: 0x4
+  $$$ SCI write   0x7e: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+  $$$ SCI write   0x57: 0xfc0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x57
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x57
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x57
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x57
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+SCI Read returned 4032 
+  $$$ SCI write   0x56: 0x2
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x56
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x56
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x56
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x4c: 0xfc0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x4c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x4c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x4c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x5a: 0xe1
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+  -----write16   0x4: 0x0
+  -----write16   0x4: 0x1
+  -----write16   0x4: 0x0
+datacorrect 131071 
+  $$$ SCI write   0x4c: 0xf00
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x4c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x4c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x4c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x56: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x56
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x56
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x56
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x37: 0x50
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x37
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x37
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x37
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x7a: 0x50
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x71: 0x7
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x71
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x71
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x71
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x2d: 0xe08e
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2d
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2d
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2d
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x2e: 0xfc1f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x2f: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2f
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2f
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x2f
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x5c: 0x2202
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x62: 0x4b76
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x62
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x62
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x62
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x74: 0x41f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x74
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x74
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x74
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x0
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+  $$$ SCI write   0x5b: 0x307f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x7b: 0x3007
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x3a: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x3b: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3b
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x3c: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3c
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x3d: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3d
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3d
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3d
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x3e: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3e
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x3f: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3f
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3f
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x3f
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x40: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x40
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x40
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x40
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x41: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x41
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x41
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x41
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x42: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x42
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x42
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x42
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x43: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x43
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x43
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x43
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x44: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x44
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x44
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x44
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x45: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x45
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x45
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x45
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x46: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x46
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x46
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x46
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x47: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x47
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x47
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x47
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x48: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x48
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x48
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x48
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x49: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x49
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x49
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x49
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x39: 0x1
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x39
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x39
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x39
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+  $$$ SCI write   0x51: 0x7f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x51
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x51
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x51
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x52: 0x7f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x52
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x52
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x52
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x53: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x53
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x53
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x53
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x8000
+  -----write16   0x28: 0x7f
+  -----write16   0x2c: 0x1ab
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x27
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x21
+  -----write16   0x30: 0xa0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe9
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xb5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xed
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfb
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0xd4
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xb5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xed
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfb
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0xd4
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xb5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xed
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe9
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x24: 0x1
+  $$$ SCI write   0x1: 0x1
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x5f370
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+  -----write32   0x20: 0x16f8e
+  -----write16   0xa0: 0x1
+  -----write16   0xa4: 0x1
+  -----write16   0xa8: 0x0
+  -----write32   0x60: 0x0
+  -----write16   0xb4: 0x0
+  -----write16   0xb0: 0x0
+  -----write16   0xac: 0x2
+  -----write16   0xbc: 0x0
+  -----write16   0xbc: 0x0
+  -----write16   0xbc: 0x0
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x20: 0x0
+Settings.period is 94575 
+  $$$ SCI write   0x5: 0x20
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x5
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x6: 0x51f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x6
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x6
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x6
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x7: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x8: 0x3ff
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x8
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x8
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x8
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+  $$$ SCI write   0x51: 0x7f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x51
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x51
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x51
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x52: 0x7f
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x52
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x52
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x52
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x53: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x53
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x53
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x53
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+  $$$ SCI write   0x1: 0x0
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x37: 0x50
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x37
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x37
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x37
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  $$$ SCI write   0x7a: 0x50
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x7a
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x8000
+  -----write16   0x28: 0x7f
+  -----write16   0x2c: 0x1ab
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x27
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x21
+  -----write16   0x30: 0xa0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x8c
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa3
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0xc7
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x31
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x81
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x7f
+  -----write16   0x30: 0xcb
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xf2
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x7
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0xbf
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0x2f
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe9
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xb5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xed
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfb
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0xd4
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xb5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xed
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfb
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0xd4
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xb5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xed
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe9
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x51
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x94
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa5
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x80
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xfa
+  -----write16   0x30: 0x11
+  -----write16   0x30: 0xe0
+  -----write16   0x30: 0x3f
+  -----write16   0x30: 0xc3
+  -----write16   0x30: 0xfe
+  -----write16   0x30: 0x84
+  -----write16   0x30: 0x78
+  -----write16   0x30: 0xf
+  -----write16   0x30: 0xf0
+  -----write16   0x30: 0xff
+  -----write16   0x30: 0xa1
+  -----write16   0x30: 0x1e
+  -----write16   0x30: 0x3
+  -----write16   0x30: 0xfc
+  -----write16   0x30: 0x1f
+  -----write16   0x30: 0xe8
+  -----write16   0x30: 0x47
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x30: 0x0
+  -----write16   0x24: 0x1
+  $$$ SCI write   0x1: 0x1
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x24: 0x2
+  -----write16   0x28: 0x1
+  -----write16   0x2c: 0x2
+  -----write16   0x24: 0x3
+  -----write16   0x68: 0x19
+NOW Wavetable size set to 80 
+  -----write16   0x6c: 0x52
+About to sensor->setSlaveExposure 
+  -----write32   0x20: 0x14286
+  -----write16   0x48: 0xf000
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 82577 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+  -----write16   0x428: 0x500
+  -----write16   0x430: 0x500
+  -----write16   0x42c: 0x400
+  -----write16   0x440: 0x400
+  -----write16   0x410: 0x652
+  -----write16   0x418: 0x1
+  -----write16   0x420: 0x40
+  -----write16   0x414: 0x405
+  -----write16   0x41c: 0x1
+  -----write16   0x424: 0x4
+  -----write32   0x60: 0x0
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+  -----write16   0xbc: 0x0
+  -----write32   0x20: 0x78
+Starting record with a length of 2 frames 
+  -----write32   0x50: 0x1fffe000
+  -----write32   0x104: 0x0
+  -----write32   0x100: 0x200c
+  -----write16   0x48: 0xf000
+  -----write32   0x40: 0x2
+  -----write32   0x40: 0x0
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+UI init done
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
+ NOW Starting rec data thread
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+  -----write16   0xbc: 0x0
+--- Using old settings --- Exposure time: 82577 (default: 94075)
+  -----write32   0x20: 0x14286
+--- Saving settings --- Exposure time: 82577
+Record done, doing normal FPN correction 
+  -----write32   0x20: 0x0
+--- Using old settings --- Exposure time: 82577 (default: 94075)
+  -----write32   0x20: 0x14286
+--- Saving settings --- Exposure time: 82577
+imgGain set to 1.05377 
+Setting WB Matrix: 1.053769 1.053769 1.053769
+  -----write16   0x4f0: 0x10dc
+  -----write16   0x4f4: 0x10dc
+  -----write16   0x4f8: 0x10dc
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+  -----write16   0x4c0: 0x1ea2
+  -----write16   0x4c4: 0xf6c6
+  -----write16   0x4c8: 0xfc41
+  -----write16   0x4d0: 0xfb1d
+  -----write16   0x4d4: 0x163b
+  -----write16   0x4d8: 0xfe74
+  -----write16   0x4dc: 0x209
+  -----write16   0x4e0: 0xf0c1
+  -----write16   0x4e4: 0x1a63
+Setting WB Matrix: 1.422588 1.053769 1.669170
+  -----write16   0x4f0: 0x16c2
+  -----write16   0x4f4: 0x10dc
+  -----write16   0x4f8: 0x1ab4
+  -----write32   0x400: 0x280
+  -----write32   0x444: 0x19
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  -----write32   0x20: 0x140b9
+--- Saving settings --- Exposure time: 82054
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbea104c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbea104c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
diff --git a/debug3 b/debug3
new file mode 100644
index 0000000..5a9f532
--- /dev/null
+++ b/debug3
@@ -0,0 +1,1691 @@
+Debugging has finished
+
+stdin: is not a tty
+Could not read calibration: "/etc/pointercal" 
+Folder cal found, no need to create 
+Folder cal/factoryFPN found, no need to create 
+Folder userFPN found, no need to create 
+Testing QDebug
+QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
+------------------------------------------------------------------- 
+true 
+Found 16 GB memory stick in slot 0 
+ioctl(): Remote I/O error
+ioctl returned -1
+Found 0 GB memory stick in slot 1 
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+   ---- Write16   0x600(0x300): 0x1
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x510
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+   ---- Write16   0x10(0x8): 0x100
+   ---- Write16   0x14(0xa): 0x100
+  -----write32   0x54: 0xf000
+  -----write32   0x58: 0x1e000
+  -----write32   0x5c: 0x2d000
+  -----write32   0x4c: 0x3c000
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  -----write32   0x400: 0x2f0
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x64190
+   ---- Write16   0x0(0x0): 0x5
+   ---- Write16   0x0(0x0): 0x4
+$$$$ SCI Write   0x7e: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+$$$$ SCI Write   0x57: 0xfc0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x57
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x57
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x57
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x57
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+SCI Read returned 4032 
+$$$$ SCI Write   0x56: 0x2
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x56
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x56
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x56
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x4c: 0xfc0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x4c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x4c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x4c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x5a: 0xe1
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+   ---- Write16   0x4(0x2): 0x0
+   ---- Write16   0x4(0x2): 0x1
+   ---- Write16   0x4(0x2): 0x0
+datacorrect 131071 
+$$$$ SCI Write   0x4c: 0xf00
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x4c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x4c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x4c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x56: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x56
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x56
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x56
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x37: 0x50
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x37
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x37
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x37
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x7a: 0x50
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x71: 0x7
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x71
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x71
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x71
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x2d: 0xe08e
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2d
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2d
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2d
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x2e: 0xfc1f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x2f: 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2f
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2f
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x2f
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x5c: 0x2202
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x62: 0x4b76
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x62
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x62
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x62
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x74: 0x41f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x74
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x74
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x74
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x0
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+$$$$ SCI Write   0x5b: 0x307f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x7b: 0x3007
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x3a: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x3b: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3b
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x3c: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3c
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x3d: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3d
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3d
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3d
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x3e: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3e
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x3f: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3f
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3f
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x3f
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x40: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x40
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x40
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x40
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x41: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x41
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x41
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x41
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x42: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x42
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x42
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x42
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x43: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x43
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x43
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x43
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x44: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x44
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x44
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x44
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x45: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x45
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x45
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x45
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x46: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x46
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x46
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x46
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x47: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x47
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x47
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x47
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x48: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x48
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x48
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x48
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x49: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x49
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x49
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x49
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x39: 0x1
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x39
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x39
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x39
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+$$$$ SCI Write   0x51: 0x7f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x51
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x51
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x51
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x52: 0x7f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x52
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x52
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x52
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x53: 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x53
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x53
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x53
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+$$$$ SCI Write   0x1: 0x1
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x5f370
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+  -----write32   0x20: 0x16f8e
+   ---- Write16   0xa0(0x50): 0x1
+   ---- Write16   0xa4(0x52): 0x1
+   ---- Write16   0xa8(0x54): 0x0
+  -----write32   0x60: 0x0
+   ---- Write16   0xb4(0x5a): 0x0
+   ---- Write16   0xb0(0x58): 0x0
+   ---- Write16   0xac(0x56): 0x2
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x20: 0x0
+Settings.period is 94575 
+$$$$ SCI Write   0x5: 0x20
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x5
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x6: 0x51f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x6
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x6
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x6
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x7: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x8: 0x3ff
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x8
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x8
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x8
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+$$$$ SCI Write   0x51: 0x7f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x51
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x51
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x51
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x52: 0x7f
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x52
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x52
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x52
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x53: 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x53
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x53
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x53
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+$$$$ SCI Write   0x1: 0x0
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x37: 0x50
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x37
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x37
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x37
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI Write   0x7a: 0x50
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x7a
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+$$$$ SCI Write   0x1: 0x1
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x24(0x12): 0x2
+   ---- Write16   0x28(0x14): 0x1
+   ---- Write16   0x2c(0x16): 0x2
+   ---- Write16   0x24(0x12): 0x3
+   ---- Write16   0x68(0x34): 0x19
+NOW Wavetable size set to 80 
+   ---- Write16   0x6c(0x36): 0x52
+About to sensor->setSlaveExposure 
+  -----write32   0x20: 0x16745
+   ---- Write16   0x48(0x24): 0xf000
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 91984 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x500
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+  -----write32   0x60: 0x0
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+   ---- Write16   0xbc(0x5e): 0x0
+  -----write32   0x20: 0x78
+Starting record with a length of 2 frames 
+  -----write32   0x50: 0x1fffe000
+  -----write32   0x104: 0x0
+  -----write32   0x100: 0x200c
+   ---- Write16   0x48(0x24): 0xf000
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+UI init done
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
+ NOW Starting rec data thread
+  -----write32   0x40: 0x2
+  -----write32   0x40: 0x0
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+   ---- Write16   0xbc(0x5e): 0x0
+--- Using old settings --- Exposure time: 91984 (default: 94075)
+  -----write32   0x20: 0x16745
+--- Saving settings --- Exposure time: 91984
+Record done, doing normal FPN correction 
+  -----write32   0x20: 0x0
+--- Using old settings --- Exposure time: 91984 (default: 94075)
+  -----write32   0x20: 0x16745
+--- Saving settings --- Exposure time: 91984
+imgGain set to 1.04891 
+Setting WB Matrix: 1.048912 1.048912 1.048912
+   ---- Write16   0x4f0(0x278): 0x10c8
+   ---- Write16   0x4f4(0x27a): 0x10c8
+   ---- Write16   0x4f8(0x27c): 0x10c8
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+   ---- Write16   0x4c0(0x260): 0x1ea2
+   ---- Write16   0x4c4(0x262): 0xf6c6
+   ---- Write16   0x4c8(0x264): 0xfc41
+   ---- Write16   0x4d0(0x268): 0xfb1d
+   ---- Write16   0x4d4(0x26a): 0x163b
+   ---- Write16   0x4d8(0x26c): 0xfe74
+   ---- Write16   0x4dc(0x26e): 0x209
+   ---- Write16   0x4e0(0x270): 0xf0c1
+   ---- Write16   0x4e4(0x272): 0x1a63
+Setting WB Matrix: 1.416031 1.048912 1.661476
+   ---- Write16   0x4f0(0x278): 0x16a8
+   ---- Write16   0x4f4(0x27a): 0x10c8
+   ---- Write16   0x4f8(0x27c): 0x1a95
+  -----write32   0x400: 0x280
+  -----write32   0x444: 0x19
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  -----write32   0x20: 0x16578
+--- Saving settings --- Exposure time: 91462
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeb674c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeb674c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
diff --git a/debug4 b/debug4
new file mode 100644
index 0000000..243c759
--- /dev/null
+++ b/debug4
@@ -0,0 +1,1372 @@
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+   ---- Write16   0x600(0x300): 0x1
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x510
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+   ---- Write16   0x10(0x8): 0x100
+   ---- Write16   0x14(0xa): 0x100
+  -----write32   0x54: 0xf000
+  -----write32   0x58: 0x1e000
+  -----write32   0x5c: 0x2d000
+  -----write32   0x4c: 0x3c000
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  -----write32   0x400: 0x2f0
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x64190
+   ---- Write16   0x0(0x0): 0x5
+   ---- Write16   0x0(0x0): 0x4
+$$$$ SCI Write   0x7e: 0x0
+==== SCI Read   0x7e
+   -> 0x1
+==== SCI Read   0x7e
+   -> 0x1
+==== SCI Read   0x7e
+   -> 0x1
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+$$$$ SCI Write   0x57: 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+SCI Read returned 4032 
+$$$$ SCI Write   0x56: 0x2
+==== SCI Read   0x56
+   -> 0x2
+==== SCI Read   0x56
+   -> 0x2
+==== SCI Read   0x56
+   -> 0x2
+$$$$ SCI Write   0x4c: 0xfc0
+==== SCI Read   0x4c
+   -> 0xfc0
+==== SCI Read   0x4c
+   -> 0xfc0
+==== SCI Read   0x4c
+   -> 0xfc0
+$$$$ SCI Write   0x5a: 0xe1
+==== SCI Read   0x5a
+   -> 0x61
+==== SCI Read   0x5a
+   -> 0x61
+==== SCI Read   0x5a
+   -> 0x61
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+   ---- Write16   0x4(0x2): 0x0
+   ---- Write16   0x4(0x2): 0x1
+   ---- Write16   0x4(0x2): 0x0
+datacorrect 131071 
+$$$$ SCI Write   0x4c: 0xf00
+==== SCI Read   0x4c
+   -> 0xf00
+==== SCI Read   0x4c
+   -> 0xf00
+==== SCI Read   0x4c
+   -> 0xf00
+$$$$ SCI Write   0x56: 0x0
+==== SCI Read   0x56
+   -> 0x0
+==== SCI Read   0x56
+   -> 0x0
+==== SCI Read   0x56
+   -> 0x0
+$$$$ SCI Write   0x37: 0x50
+==== SCI Read   0x37
+   -> 0x50
+==== SCI Read   0x37
+   -> 0x50
+==== SCI Read   0x37
+   -> 0x50
+$$$$ SCI Write   0x7a: 0x50
+==== SCI Read   0x7a
+   -> 0x50
+==== SCI Read   0x7a
+   -> 0x50
+==== SCI Read   0x7a
+   -> 0x50
+$$$$ SCI Write   0x71: 0x7
+==== SCI Read   0x71
+   -> 0x7
+==== SCI Read   0x71
+   -> 0x7
+==== SCI Read   0x71
+   -> 0x7
+$$$$ SCI Write   0x2d: 0xe08e
+==== SCI Read   0x2d
+   -> 0xe08e
+==== SCI Read   0x2d
+   -> 0xe08e
+==== SCI Read   0x2d
+   -> 0xe08e
+$$$$ SCI Write   0x2e: 0xfc1f
+==== SCI Read   0x2e
+   -> 0xfc1f
+==== SCI Read   0x2e
+   -> 0xfc1f
+==== SCI Read   0x2e
+   -> 0xfc1f
+$$$$ SCI Write   0x2f: 0x3
+==== SCI Read   0x2f
+   -> 0x3
+==== SCI Read   0x2f
+   -> 0x3
+==== SCI Read   0x2f
+   -> 0x3
+$$$$ SCI Write   0x5c: 0x2202
+==== SCI Read   0x5c
+   -> 0x2202
+==== SCI Read   0x5c
+   -> 0x2202
+==== SCI Read   0x5c
+   -> 0x2202
+$$$$ SCI Write   0x62: 0x4b76
+==== SCI Read   0x62
+   -> 0x4b76
+==== SCI Read   0x62
+   -> 0x4b76
+==== SCI Read   0x62
+   -> 0x4b76
+$$$$ SCI Write   0x74: 0x41f
+==== SCI Read   0x74
+   -> 0x41f
+==== SCI Read   0x74
+   -> 0x41f
+==== SCI Read   0x74
+   -> 0x41f
+==== SCI Read   0x0
+   -> 0xda02
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+$$$$ SCI Write   0x5b: 0x307f
+==== SCI Read   0x5b
+   -> 0x307f
+==== SCI Read   0x5b
+   -> 0x307f
+==== SCI Read   0x5b
+   -> 0x307f
+$$$$ SCI Write   0x7b: 0x3007
+==== SCI Read   0x7b
+   -> 0x3007
+==== SCI Read   0x7b
+   -> 0x3007
+==== SCI Read   0x7b
+   -> 0x3007
+$$$$ SCI Write   0x3a: 0x0
+==== SCI Read   0x3a
+   -> 0x0
+==== SCI Read   0x3a
+   -> 0x0
+==== SCI Read   0x3a
+   -> 0x0
+$$$$ SCI Write   0x3b: 0x0
+==== SCI Read   0x3b
+   -> 0x0
+==== SCI Read   0x3b
+   -> 0x0
+==== SCI Read   0x3b
+   -> 0x0
+$$$$ SCI Write   0x3c: 0x0
+==== SCI Read   0x3c
+   -> 0x0
+==== SCI Read   0x3c
+   -> 0x0
+==== SCI Read   0x3c
+   -> 0x0
+$$$$ SCI Write   0x3d: 0x0
+==== SCI Read   0x3d
+   -> 0x0
+==== SCI Read   0x3d
+   -> 0x0
+==== SCI Read   0x3d
+   -> 0x0
+$$$$ SCI Write   0x3e: 0x0
+==== SCI Read   0x3e
+   -> 0x0
+==== SCI Read   0x3e
+   -> 0x0
+==== SCI Read   0x3e
+   -> 0x0
+$$$$ SCI Write   0x3f: 0x0
+==== SCI Read   0x3f
+   -> 0x0
+==== SCI Read   0x3f
+   -> 0x0
+==== SCI Read   0x3f
+   -> 0x0
+$$$$ SCI Write   0x40: 0x0
+==== SCI Read   0x40
+   -> 0x0
+==== SCI Read   0x40
+   -> 0x0
+==== SCI Read   0x40
+   -> 0x0
+$$$$ SCI Write   0x41: 0x0
+==== SCI Read   0x41
+   -> 0x0
+==== SCI Read   0x41
+   -> 0x0
+==== SCI Read   0x41
+   -> 0x0
+$$$$ SCI Write   0x42: 0x0
+==== SCI Read   0x42
+   -> 0x0
+==== SCI Read   0x42
+   -> 0x0
+==== SCI Read   0x42
+   -> 0x0
+$$$$ SCI Write   0x43: 0x0
+==== SCI Read   0x43
+   -> 0x0
+==== SCI Read   0x43
+   -> 0x0
+==== SCI Read   0x43
+   -> 0x0
+$$$$ SCI Write   0x44: 0x0
+==== SCI Read   0x44
+   -> 0x0
+==== SCI Read   0x44
+   -> 0x0
+==== SCI Read   0x44
+   -> 0x0
+$$$$ SCI Write   0x45: 0x0
+==== SCI Read   0x45
+   -> 0x0
+==== SCI Read   0x45
+   -> 0x0
+==== SCI Read   0x45
+   -> 0x0
+$$$$ SCI Write   0x46: 0x0
+==== SCI Read   0x46
+   -> 0x0
+==== SCI Read   0x46
+   -> 0x0
+==== SCI Read   0x46
+   -> 0x0
+$$$$ SCI Write   0x47: 0x0
+==== SCI Read   0x47
+   -> 0x0
+==== SCI Read   0x47
+   -> 0x0
+==== SCI Read   0x47
+   -> 0x0
+$$$$ SCI Write   0x48: 0x0
+==== SCI Read   0x48
+   -> 0x0
+==== SCI Read   0x48
+   -> 0x0
+==== SCI Read   0x48
+   -> 0x0
+$$$$ SCI Write   0x49: 0x0
+==== SCI Read   0x49
+   -> 0x0
+==== SCI Read   0x49
+   -> 0x0
+==== SCI Read   0x49
+   -> 0x0
+$$$$ SCI Write   0x39: 0x1
+==== SCI Read   0x39
+   -> 0x0
+==== SCI Read   0x39
+   -> 0x0
+==== SCI Read   0x39
+   -> 0x0
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+$$$$ SCI Write   0x51: 0x7f
+==== SCI Read   0x51
+   -> 0x7f
+==== SCI Read   0x51
+   -> 0x7f
+==== SCI Read   0x51
+   -> 0x7f
+$$$$ SCI Write   0x52: 0x7f
+==== SCI Read   0x52
+   -> 0x7f
+==== SCI Read   0x52
+   -> 0x7f
+==== SCI Read   0x52
+   -> 0x7f
+$$$$ SCI Write   0x53: 0x3
+==== SCI Read   0x53
+   -> 0x3
+==== SCI Read   0x53
+   -> 0x3
+==== SCI Read   0x53
+   -> 0x3
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+$$$$ SCI Write   0x1: 0x1
+==== SCI Read   0x1
+   -> 0x1
+==== SCI Read   0x1
+   -> 0x1
+==== SCI Read   0x1
+   -> 0x1
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x5f370
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+  -----write32   0x20: 0x16f8e
+   ---- Write16   0xa0(0x50): 0x1
+   ---- Write16   0xa4(0x52): 0x1
+   ---- Write16   0xa8(0x54): 0x0
+  -----write32   0x60: 0x0
+   ---- Write16   0xb4(0x5a): 0x0
+   ---- Write16   0xb0(0x58): 0x0
+   ---- Write16   0xac(0x56): 0x2
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x20: 0x0
+Settings.period is 94575 
+$$$$ SCI Write   0x5: 0x20
+==== SCI Read   0x5
+   -> 0x20
+==== SCI Read   0x5
+   -> 0x20
+==== SCI Read   0x5
+   -> 0x20
+$$$$ SCI Write   0x6: 0x51f
+==== SCI Read   0x6
+   -> 0x51f
+==== SCI Read   0x6
+   -> 0x51f
+==== SCI Read   0x6
+   -> 0x51f
+$$$$ SCI Write   0x7: 0x0
+==== SCI Read   0x7
+   -> 0x0
+==== SCI Read   0x7
+   -> 0x0
+==== SCI Read   0x7
+   -> 0x0
+$$$$ SCI Write   0x8: 0x3ff
+==== SCI Read   0x8
+   -> 0x3ff
+==== SCI Read   0x8
+   -> 0x3ff
+==== SCI Read   0x8
+   -> 0x3ff
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+$$$$ SCI Write   0x51: 0x7f
+==== SCI Read   0x51
+   -> 0x7f
+==== SCI Read   0x51
+   -> 0x7f
+==== SCI Read   0x51
+   -> 0x7f
+$$$$ SCI Write   0x52: 0x7f
+==== SCI Read   0x52
+   -> 0x7f
+==== SCI Read   0x52
+   -> 0x7f
+==== SCI Read   0x52
+   -> 0x7f
+$$$$ SCI Write   0x53: 0x3
+==== SCI Read   0x53
+   -> 0x3
+==== SCI Read   0x53
+   -> 0x3
+==== SCI Read   0x53
+   -> 0x3
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+$$$$ SCI Write   0x1: 0x0
+==== SCI Read   0x1
+   -> 0x0
+==== SCI Read   0x1
+   -> 0x0
+==== SCI Read   0x1
+   -> 0x0
+$$$$ SCI Write   0x37: 0x50
+==== SCI Read   0x37
+   -> 0x50
+==== SCI Read   0x37
+   -> 0x50
+==== SCI Read   0x37
+   -> 0x50
+$$$$ SCI Write   0x7a: 0x50
+==== SCI Read   0x7a
+   -> 0x50
+==== SCI Read   0x7a
+   -> 0x50
+==== SCI Read   0x7a
+   -> 0x50
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+$$$$ SCI Write   0x1: 0x1
+==== SCI Read   0x1
+   -> 0x1
+==== SCI Read   0x1
+   -> 0x1
+==== SCI Read   0x1
+   -> 0x1
+   ---- Write16   0x68(0x34): 0x19
+NOW Wavetable size set to 80 
+   ---- Write16   0x6c(0x36): 0x52
+About to sensor->setSlaveExposure 
+  -----write32   0x20: 0x154e6
+   ---- Write16   0x48(0x24): 0xf000
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 87281 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x500
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+  -----write32   0x60: 0x0
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+   ---- Write16   0xbc(0x5e): 0x0
+  -----write32   0x20: 0x78
+Starting record with a length of 2 frames 
+  -----write32   0x50: 0x1fffe000
+  -----write32   0x104: 0x0
+  -----write32   0x100: 0x200c
+   ---- Write16   0x48(0x24): 0xf000
+  -----write32   0x40: 0x2
+  -----write32   0x40: 0x0
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+UI init done
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
+ NOW Starting rec data thread
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+   ---- Write16   0xbc(0x5e): 0x0
+--- Using old settings --- Exposure time: 87281 (default: 94075)
+  -----write32   0x20: 0x154e6
+--- Saving settings --- Exposure time: 87281
+Record done, doing normal FPN correction 
+  -----write32   0x20: 0x0
+--- Using old settings --- Exposure time: 87281 (default: 94075)
+  -----write32   0x20: 0x154e6
+--- Saving settings --- Exposure time: 87281
+imgGain set to 1.05431 
+Setting WB Matrix: 1.054311 1.054311 1.054311
+   ---- Write16   0x4f0(0x278): 0x10de
+   ---- Write16   0x4f4(0x27a): 0x10de
+   ---- Write16   0x4f8(0x27c): 0x10de
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+   ---- Write16   0x4c0(0x260): 0x1ea2
+   ---- Write16   0x4c4(0x262): 0xf6c6
+   ---- Write16   0x4c8(0x264): 0xfc41
+   ---- Write16   0x4d0(0x268): 0xfb1d
+   ---- Write16   0x4d4(0x26a): 0x163b
+   ---- Write16   0x4d8(0x26c): 0xfe74
+   ---- Write16   0x4dc(0x26e): 0x209
+   ---- Write16   0x4e0(0x270): 0xf0c1
+   ---- Write16   0x4e4(0x272): 0x1a63
+Setting WB Matrix: 1.423320 1.054311 1.670029
+   ---- Write16   0x4f0(0x278): 0x16c5
+   ---- Write16   0x4f4(0x27a): 0x10de
+   ---- Write16   0x4f8(0x27c): 0x1ab8
+  -----write32   0x400: 0x280
+  -----write32   0x444: 0x19
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  -----write32   0x20: 0x15319
+--- Saving settings --- Exposure time: 86758
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbed3b4c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbed3b4c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
diff --git a/debug5 b/debug5
new file mode 100644
index 0000000..0bc6fae
--- /dev/null
+++ b/debug5
@@ -0,0 +1,1086 @@
+
+stdin: is not a tty
+Could not read calibration: "/etc/pointercal" 
+Folder cal found, no need to create 
+Folder cal/factoryFPN found, no need to create 
+Folder userFPN found, no need to create 
+Testing QDebug
+QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
+------------------------------------------------------------------- 
+true 
+Found 16 GB memory stick in slot 0 
+ioctl(): Remote I/O error
+ioctl returned -1
+Found 0 GB memory stick in slot 1 
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+   ---- Write16   0x600(0x300): 0x1
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x510
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+   ---- Write16   0x10(0x8): 0x100
+   ---- Write16   0x14(0xa): 0x100
+  -----write32   0x54: 0xf000
+  -----write32   0x58: 0x1e000
+  -----write32   0x5c: 0x2d000
+  -----write32   0x4c: 0x3c000
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  -----write32   0x400: 0x2f0
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x64190
+   ---- Write16   0x0(0x0): 0x5
+   ---- Write16   0x0(0x0): 0x4
+$$$$ SCI Write   0x7e: 0x0
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+$$$$ SCI Write   0x57: 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+SCI Read returned 4032 
+$$$$ SCI Write   0x56: 0x2
+$$$$ SCI Write   0x4c: 0xfc0
+$$$$ SCI Write   0x5a: 0xe1
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+   ---- Write16   0x4(0x2): 0x0
+   ---- Write16   0x4(0x2): 0x1
+   ---- Write16   0x4(0x2): 0x0
+datacorrect 131071 
+$$$$ SCI Write   0x4c: 0xf00
+$$$$ SCI Write   0x56: 0x0
+$$$$ SCI Write   0x37: 0x50
+$$$$ SCI Write   0x7a: 0x50
+$$$$ SCI Write   0x71: 0x7
+$$$$ SCI Write   0x2d: 0xe08e
+$$$$ SCI Write   0x2e: 0xfc1f
+$$$$ SCI Write   0x2f: 0x3
+$$$$ SCI Write   0x5c: 0x2202
+$$$$ SCI Write   0x62: 0x4b76
+$$$$ SCI Write   0x74: 0x41f
+==== SCI Read   0x0
+   -> 0xda02
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+$$$$ SCI Write   0x5b: 0x307f
+$$$$ SCI Write   0x7b: 0x3007
+$$$$ SCI Write   0x3a: 0x0
+$$$$ SCI Write   0x3b: 0x0
+$$$$ SCI Write   0x3c: 0x0
+$$$$ SCI Write   0x3d: 0x0
+$$$$ SCI Write   0x3e: 0x0
+$$$$ SCI Write   0x3f: 0x0
+$$$$ SCI Write   0x40: 0x0
+$$$$ SCI Write   0x41: 0x0
+$$$$ SCI Write   0x42: 0x0
+$$$$ SCI Write   0x43: 0x0
+$$$$ SCI Write   0x44: 0x0
+$$$$ SCI Write   0x45: 0x0
+$$$$ SCI Write   0x46: 0x0
+$$$$ SCI Write   0x47: 0x0
+$$$$ SCI Write   0x48: 0x0
+$$$$ SCI Write   0x49: 0x0
+$$$$ SCI Write   0x39: 0x1
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+$$$$ SCI Write   0x51: 0x7f
+$$$$ SCI Write   0x52: 0x7f
+$$$$ SCI Write   0x53: 0x3
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+$$$$ SCI Write   0x1: 0x1
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x5f370
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+  -----write32   0x20: 0x16f8e
+   ---- Write16   0xa0(0x50): 0x1
+   ---- Write16   0xa4(0x52): 0x1
+   ---- Write16   0xa8(0x54): 0x0
+  -----write32   0x60: 0x0
+   ---- Write16   0xb4(0x5a): 0x0
+   ---- Write16   0xb0(0x58): 0x0
+   ---- Write16   0xac(0x56): 0x2
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x20: 0x0
+Settings.period is 94575 
+$$$$ SCI Write   0x5: 0x20
+$$$$ SCI Write   0x6: 0x51f
+$$$$ SCI Write   0x7: 0x0
+$$$$ SCI Write   0x8: 0x3ff
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+$$$$ SCI Write   0x51: 0x7f
+$$$$ SCI Write   0x52: 0x7f
+$$$$ SCI Write   0x53: 0x3
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+$$$$ SCI Write   0x1: 0x0
+$$$$ SCI Write   0x37: 0x50
+$$$$ SCI Write   0x7a: 0x50
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+$$$$ SCI Write   0x1: 0x1
+   ---- Write16   0x68(0x34): 0x19
+NOW Wavetable size set to 80 
+   ---- Write16   0x6c(0x36): 0x52
+About to sensor->setSlaveExposure 
+  -----write32   0x20: 0x148a6
+   ---- Write16   0x48(0x24): 0xf000
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 84145 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x500
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+  -----write32   0x60: 0x0
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+   ---- Write16   0xbc(0x5e): 0x0
+  -----write32   0x20: 0x78
+Starting record with a length of 2 frames 
+  -----write32   0x50: 0x1fffe000
+  -----write32   0x104: 0x0
+  -----write32   0x100: 0x200c
+   ---- Write16   0x48(0x24): 0xf000
+  -----write32   0x40: 0x2
+  -----write32   0x40: 0x0
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+UI init done
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
+ NOW Starting rec data thread
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+   ---- Write16   0xbc(0x5e): 0x0
+--- Using old settings --- Exposure time: 84145 (default: 94075)
+  -----write32   0x20: 0x148a6
+--- Saving settings --- Exposure time: 84145
+Record done, doing normal FPN correction 
+  -----write32   0x20: 0x0
+--- Using old settings --- Exposure time: 84145 (default: 94075)
+  -----write32   0x20: 0x148a6
+--- Saving settings --- Exposure time: 84145
+imgGain set to 1.05621 
+Setting WB Matrix: 1.056215 1.056215 1.056215
+   ---- Write16   0x4f0(0x278): 0x10e6
+   ---- Write16   0x4f4(0x27a): 0x10e6
+   ---- Write16   0x4f8(0x27c): 0x10e6
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+   ---- Write16   0x4c0(0x260): 0x1ea2
+   ---- Write16   0x4c4(0x262): 0xf6c6
+   ---- Write16   0x4c8(0x264): 0xfc41
+   ---- Write16   0x4d0(0x268): 0xfb1d
+   ---- Write16   0x4d4(0x26a): 0x163b
+   ---- Write16   0x4d8(0x26c): 0xfe74
+   ---- Write16   0x4dc(0x26e): 0x209
+   ---- Write16   0x4e0(0x270): 0xf0c1
+   ---- Write16   0x4e4(0x272): 0x1a63
+Setting WB Matrix: 1.425890 1.056215 1.673044
+   ---- Write16   0x4f0(0x278): 0x16d0
+   ---- Write16   0x4f4(0x27a): 0x10e6
+   ---- Write16   0x4f8(0x27c): 0x1ac4
+  -----write32   0x400: 0x280
+  -----write32   0x444: 0x19
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  -----write32   0x20: 0x146d9
+--- Saving settings --- Exposure time: 83622
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeadf4c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeadf4c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
diff --git a/debug6 b/debug6
new file mode 100644
index 0000000..2c1f5cc
--- /dev/null
+++ b/debug6
@@ -0,0 +1,1086 @@
+
+stdin: is not a tty
+Could not read calibration: "/etc/pointercal" 
+Folder cal found, no need to create 
+Folder cal/factoryFPN found, no need to create 
+Folder userFPN found, no need to create 
+Testing QDebug
+QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
+------------------------------------------------------------------- 
+true 
+Found 16 GB memory stick in slot 0 
+ioctl(): Remote I/O error
+ioctl returned -1
+Found 0 GB memory stick in slot 1 
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+   ---- Write16   0x600(0x300): 0x1
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x510
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+   ---- Write16   0x10(0x8): 0x100
+   ---- Write16   0x14(0xa): 0x100
+  -----write32   0x54: 0xf000
+  -----write32   0x58: 0x1e000
+  -----write32   0x5c: 0x2d000
+  -----write32   0x4c: 0x3c000
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  -----write32   0x400: 0x2f0
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x64190
+   ---- Write16   0x0(0x0): 0x5
+   ---- Write16   0x0(0x0): 0x4
+(1)$$$$ SCI Write   0x7e: 0x0
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+(2)$$$$ SCI Write   0x57: 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+SCI Read returned 4032 
+(3)$$$$ SCI Write   0x56: 0x2
+(4)$$$$ SCI Write   0x4c: 0xfc0
+(5)$$$$ SCI Write   0x5a: 0xe1
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+   ---- Write16   0x4(0x2): 0x0
+   ---- Write16   0x4(0x2): 0x1
+   ---- Write16   0x4(0x2): 0x0
+datacorrect 131071 
+(6)$$$$ SCI Write   0x4c: 0xf00
+(7)$$$$ SCI Write   0x56: 0x0
+(8)$$$$ SCI Write   0x37: 0x50
+(9)$$$$ SCI Write   0x7a: 0x50
+(10)$$$$ SCI Write   0x71: 0x7
+(11)$$$$ SCI Write   0x2d: 0xe08e
+(12)$$$$ SCI Write   0x2e: 0xfc1f
+(13)$$$$ SCI Write   0x2f: 0x3
+(14)$$$$ SCI Write   0x5c: 0x2202
+(15)$$$$ SCI Write   0x62: 0x4b76
+(16)$$$$ SCI Write   0x74: 0x41f
+==== SCI Read   0x0
+   -> 0xda02
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+(17)$$$$ SCI Write   0x5b: 0x307f
+(18)$$$$ SCI Write   0x7b: 0x3007
+(19)$$$$ SCI Write   0x3a: 0x0
+(20)$$$$ SCI Write   0x3b: 0x0
+(21)$$$$ SCI Write   0x3c: 0x0
+(22)$$$$ SCI Write   0x3d: 0x0
+(23)$$$$ SCI Write   0x3e: 0x0
+(24)$$$$ SCI Write   0x3f: 0x0
+(25)$$$$ SCI Write   0x40: 0x0
+(26)$$$$ SCI Write   0x41: 0x0
+(27)$$$$ SCI Write   0x42: 0x0
+(28)$$$$ SCI Write   0x43: 0x0
+(29)$$$$ SCI Write   0x44: 0x0
+(30)$$$$ SCI Write   0x45: 0x0
+(31)$$$$ SCI Write   0x46: 0x0
+(32)$$$$ SCI Write   0x47: 0x0
+(33)$$$$ SCI Write   0x48: 0x0
+(34)$$$$ SCI Write   0x49: 0x0
+(35)$$$$ SCI Write   0x39: 0x1
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+(36)$$$$ SCI Write   0x51: 0x7f
+(37)$$$$ SCI Write   0x52: 0x7f
+(38)$$$$ SCI Write   0x53: 0x3
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+(39)$$$$ SCI Write   0x1: 0x1
+  -----write32   0x1c: 0x61a80
+  -----write32   0x20: 0x5f370
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+  -----write32   0x20: 0x16f8e
+   ---- Write16   0xa0(0x50): 0x1
+   ---- Write16   0xa4(0x52): 0x1
+   ---- Write16   0xa8(0x54): 0x0
+  -----write32   0x60: 0x0
+   ---- Write16   0xb4(0x5a): 0x0
+   ---- Write16   0xb0(0x58): 0x0
+   ---- Write16   0xac(0x56): 0x2
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+   ---- Write16   0xbc(0x5e): 0x0
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x20: 0x0
+Settings.period is 94575 
+(40)$$$$ SCI Write   0x5: 0x20
+(41)$$$$ SCI Write   0x6: 0x51f
+(42)$$$$ SCI Write   0x7: 0x0
+(43)$$$$ SCI Write   0x8: 0x3ff
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  -----write32   0x1c: 0x1716f
+(44)$$$$ SCI Write   0x51: 0x7f
+(45)$$$$ SCI Write   0x52: 0x7f
+(46)$$$$ SCI Write   0x53: 0x3
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+(47)$$$$ SCI Write   0x1: 0x0
+(48)$$$$ SCI Write   0x37: 0x50
+(49)$$$$ SCI Write   0x7a: 0x50
+$$$$ SCI WriteBuf   0x7f: length 427
+   ---- Write16   0x24(0x12): 0x8000
+   ---- Write16   0x28(0x14): 0x7f
+   ---- Write16   0x2c(0x16): 0x1ab
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x27
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x21
+   ---- Write16   0x30(0x18): 0xa0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x8c
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa3
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0xc7
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x31
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x81
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x7f
+   ---- Write16   0x30(0x18): 0xcb
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xf2
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x7
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0xbf
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0x2f
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfb
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0xd4
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xb5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xed
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe9
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x51
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x94
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa5
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x80
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xfa
+   ---- Write16   0x30(0x18): 0x11
+   ---- Write16   0x30(0x18): 0xe0
+   ---- Write16   0x30(0x18): 0x3f
+   ---- Write16   0x30(0x18): 0xc3
+   ---- Write16   0x30(0x18): 0xfe
+   ---- Write16   0x30(0x18): 0x84
+   ---- Write16   0x30(0x18): 0x78
+   ---- Write16   0x30(0x18): 0xf
+   ---- Write16   0x30(0x18): 0xf0
+   ---- Write16   0x30(0x18): 0xff
+   ---- Write16   0x30(0x18): 0xa1
+   ---- Write16   0x30(0x18): 0x1e
+   ---- Write16   0x30(0x18): 0x3
+   ---- Write16   0x30(0x18): 0xfc
+   ---- Write16   0x30(0x18): 0x1f
+   ---- Write16   0x30(0x18): 0xe8
+   ---- Write16   0x30(0x18): 0x47
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x30(0x18): 0x0
+   ---- Write16   0x24(0x12): 0x1
+(50)$$$$ SCI Write   0x1: 0x1
+   ---- Write16   0x68(0x34): 0x19
+NOW Wavetable size set to 80 
+   ---- Write16   0x6c(0x36): 0x52
+About to sensor->setSlaveExposure 
+  -----write32   0x20: 0x13e90
+   ---- Write16   0x48(0x24): 0xf000
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 81532 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   ---- Write16   0x428(0x214): 0x500
+   ---- Write16   0x430(0x218): 0x500
+   ---- Write16   0x42c(0x216): 0x400
+   ---- Write16   0x440(0x220): 0x400
+   ---- Write16   0x410(0x208): 0x652
+   ---- Write16   0x418(0x20c): 0x1
+   ---- Write16   0x420(0x210): 0x40
+   ---- Write16   0x414(0x20a): 0x405
+   ---- Write16   0x41c(0x20e): 0x1
+   ---- Write16   0x424(0x212): 0x4
+  -----write32   0x60: 0x0
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+   ---- Write16   0xbc(0x5e): 0x0
+  -----write32   0x20: 0x78
+Starting record with a length of 2 frames 
+  -----write32   0x50: 0x1fffe000
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+UI init done
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
+ NOW Starting rec data thread
+  -----write32   0x104: 0x0
+  -----write32   0x100: 0x200c
+   ---- Write16   0x48(0x24): 0xf000
+  -----write32   0x40: 0x2
+  -----write32   0x40: 0x0
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+   ---- Write16   0xbc(0x5e): 0x0
+--- Using old settings --- Exposure time: 81532 (default: 94075)
+  -----write32   0x20: 0x13e90
+--- Saving settings --- Exposure time: 81532
+Record done, doing normal FPN correction 
+  -----write32   0x20: 0x0
+--- Using old settings --- Exposure time: 81532 (default: 94075)
+  -----write32   0x20: 0x13e90
+--- Saving settings --- Exposure time: 81532
+imgGain set to 1.05296 
+Setting WB Matrix: 1.052956 1.052956 1.052956
+   ---- Write16   0x4f0(0x278): 0x10d8
+   ---- Write16   0x4f4(0x27a): 0x10d8
+   ---- Write16   0x4f8(0x27c): 0x10d8
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+   ---- Write16   0x4c0(0x260): 0x1ea2
+   ---- Write16   0x4c4(0x262): 0xf6c6
+   ---- Write16   0x4c8(0x264): 0xfc41
+   ---- Write16   0x4d0(0x268): 0xfb1d
+   ---- Write16   0x4d4(0x26a): 0x163b
+   ---- Write16   0x4d8(0x26c): 0xfe74
+   ---- Write16   0x4dc(0x26e): 0x209
+   ---- Write16   0x4e0(0x270): 0xf0c1
+   ---- Write16   0x4e4(0x272): 0x1a63
+Setting WB Matrix: 1.421491 1.052956 1.667883
+   ---- Write16   0x4f0(0x278): 0x16be
+   ---- Write16   0x4f4(0x27a): 0x10d8
+   ---- Write16   0x4f8(0x27c): 0x1aaf
+  -----write32   0x400: 0x280
+  -----write32   0x444: 0x19
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  -----write32   0x20: 0x13c67
+--- Saving settings --- Exposure time: 81009
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbe9054c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbe9054c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
diff --git a/debug7 b/debug7
new file mode 100644
index 0000000..6be13d6
--- /dev/null
+++ b/debug7
@@ -0,0 +1,229 @@
+
+Debugging starts
+stdin: is not a tty
+Listening on port 10001
+Remote debugging from host 192.168.1.187
+Process /usr/bin/camApp created; pid = 18103
+Could not read calibration: "/etc/pointercal" 
+Folder cal found, no need to create 
+Folder cal/factoryFPN found, no need to create 
+Folder userFPN found, no need to create 
+Testing QDebug
+QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
+------------------------------------------------------------------- 
+true 
+Found 16 GB memory stick in slot 0 
+ioctl(): Remote I/O error
+ioctl returned -1
+Found 0 GB memory stick in slot 1 
+Status readback: 0 16 7 128 
+Read in serial number 10263 
+   (1)---- Write16   0x600(0x300): 0x1
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   (2)---- Write16   0x428(0x214): 0x510
+   (3)---- Write16   0x430(0x218): 0x500
+   (4)---- Write16   0x42c(0x216): 0x400
+   (5)---- Write16   0x440(0x220): 0x400
+   (6)---- Write16   0x410(0x208): 0x652
+   (7)---- Write16   0x418(0x20c): 0x1
+   (8)---- Write16   0x420(0x210): 0x40
+   (9)---- Write16   0x414(0x20a): 0x405
+   (10)---- Write16   0x41c(0x20e): 0x1
+   (11)---- Write16   0x424(0x212): 0x4
+   (12)---- Write16   0x10(0x8): 0x100
+   (13)---- Write16   0x14(0xa): 0x100
+  (14)-----write32   0x54: 0xf000
+  (15)-----write32   0x58: 0x1e000
+  (16)-----write32   0x5c: 0x2d000
+  (17)-----write32   0x4c: 0x3c000
+--- memory --- no remap
+--- memory --- remap register: 0x0000
+  (18)-----write32   0x400: 0x2f0
+  (19)-----write32   0x1c: 0x61a80
+  (20)-----write32   0x20: 0x64190
+   (21)---- Write16   0x0(0x0): 0x5
+   (22)---- Write16   0x0(0x0): 0x4
+(1)$$$$ SCI Write   0x7e: 0x0
+SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
+(2)$$$$ SCI Write   0x57: 0xfc0
+==== SCI Read   0x57
+   -> 0xfc0
+SCI Read returned 4032 
+(3)$$$$ SCI Write   0x56: 0x2
+(4)$$$$ SCI Write   0x4c: 0xfc0
+(5)$$$$ SCI Write   0x5a: 0xe1
+SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
+   (23)---- Write16   0x4(0x2): 0x0
+   (24)---- Write16   0x4(0x2): 0x1
+   (25)---- Write16   0x4(0x2): 0x0
+datacorrect 131071 
+(6)$$$$ SCI Write   0x4c: 0xf00
+(7)$$$$ SCI Write   0x56: 0x0
+(8)$$$$ SCI Write   0x37: 0x50
+(9)$$$$ SCI Write   0x7a: 0x50
+(10)$$$$ SCI Write   0x71: 0x7
+(11)$$$$ SCI Write   0x2d: 0xe08e
+(12)$$$$ SCI Write   0x2e: 0xfc1f
+(13)$$$$ SCI Write   0x2f: 0x3
+(14)$$$$ SCI Write   0x5c: 0x2202
+(15)$$$$ SCI Write   0x62: 0x4b76
+(16)$$$$ SCI Write   0x74: 0x41f
+==== SCI Read   0x0
+   -> 0xda02
+Read rev of  55810 
+Found LUX1310 sensor, silicon revision 2 
+(17)$$$$ SCI Write   0x5b: 0x307f
+(18)$$$$ SCI Write   0x7b: 0x3007
+(19)$$$$ SCI Write   0x3a: 0x0
+(20)$$$$ SCI Write   0x3b: 0x0
+(21)$$$$ SCI Write   0x3c: 0x0
+(22)$$$$ SCI Write   0x3d: 0x0
+(23)$$$$ SCI Write   0x3e: 0x0
+(24)$$$$ SCI Write   0x3f: 0x0
+(25)$$$$ SCI Write   0x40: 0x0
+(26)$$$$ SCI Write   0x41: 0x0
+(27)$$$$ SCI Write   0x42: 0x0
+(28)$$$$ SCI Write   0x43: 0x0
+(29)$$$$ SCI Write   0x44: 0x0
+(30)$$$$ SCI Write   0x45: 0x0
+(31)$$$$ SCI Write   0x46: 0x0
+(32)$$$$ SCI Write   0x47: 0x0
+(33)$$$$ SCI Write   0x48: 0x0
+(34)$$$$ SCI Write   0x49: 0x0
+(35)$$$$ SCI Write   0x39: 0x1
+SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
+(36)$$$$ SCI Write   0x51: 0x7f
+(37)$$$$ SCI Write   0x52: 0x7f
+(38)$$$$ SCI Write   0x53: 0x3
+$$$$ SCI WriteBuf   0x7f: length 427
+(39)$$$$ SCI Write   0x1: 0x1
+  (26)-----write32   0x1c: 0x61a80
+  (27)-----write32   0x20: 0x5f370
+getMinFramePeriod: 0.000945744 
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  (28)-----write32   0x1c: 0x1716f
+  (29)-----write32   0x20: 0x16f8e
+   (30)---- Write16   0xa0(0x50): 0x1
+   (31)---- Write16   0xa4(0x52): 0x1
+   (32)---- Write16   0xa8(0x54): 0x0
+  (33)-----write32   0x60: 0x0
+   (34)---- Write16   0xb4(0x5a): 0x0
+   (35)---- Write16   0xb0(0x58): 0x0
+   (36)---- Write16   0xac(0x56): 0x2
+   (37)---- Write16   0xbc(0x5e): 0x0
+   (38)---- Write16   0xbc(0x5e): 0x0
+   (39)---- Write16   0xbc(0x5e): 0x0
+getMinFramePeriod: 0.000945744 
+getMinFramePeriod: 0.000945744 
+  (40)-----write32   0x20: 0x0
+Settings.period is 94575 
+(40)$$$$ SCI Write   0x5: 0x20
+(41)$$$$ SCI Write   0x6: 0x51f
+(42)$$$$ SCI Write   0x7: 0x0
+(43)$$$$ SCI Write   0x8: 0x3ff
+Requested period 0.00094575 
+getMinFramePeriod: 0.000945744 
+  (41)-----write32   0x1c: 0x1716f
+(44)$$$$ SCI Write   0x51: 0x7f
+(45)$$$$ SCI Write   0x52: 0x7f
+(46)$$$$ SCI Write   0x53: 0x3
+getMinFramePeriod: 0.000945744 
+currentPeriod 94575 Min period 94575 
+getMinFramePeriod: 0.000945744 
+(47)$$$$ SCI Write   0x1: 0x0
+(48)$$$$ SCI Write   0x37: 0x50
+(49)$$$$ SCI Write   0x7a: 0x50
+$$$$ SCI WriteBuf   0x7f: length 427
+(50)$$$$ SCI Write   0x1: 0x1
+   (42)---- Write16   0x68(0x34): 0x19
+NOW Wavetable size set to 80 
+   (43)---- Write16   0x6c(0x36): 0x52
+About to sensor->setSlaveExposure 
+  (44)-----write32   0x20: 0x12e5a
+   (45)---- Write16   0x48(0x24): 0xf000
+About to sensor->loadADCOffsetsFromFile 
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+
+Set imager settings:
+hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 77351 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
+--- settings --- saving 
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   (46)---- Write16   0x428(0x214): 0x500
+   (47)---- Write16   0x430(0x218): 0x500
+   (48)---- Write16   0x42c(0x216): 0x400
+   (49)---- Write16   0x440(0x220): 0x400
+   (50)---- Write16   0x410(0x208): 0x652
+   (51)---- Write16   0x418(0x20c): 0x1
+   (52)---- Write16   0x420(0x210): 0x40
+   (53)---- Write16   0x414(0x20a): 0x405
+   (54)---- Write16   0x41c(0x20e): 0x1
+   (55)---- Write16   0x424(0x212): 0x4
+  (56)-----write32   0x60: 0x0
+Error: colGain file /opt/camera/cal:dcgL.bin not found
+Error while loading cal gain - resetting to 1.0
+loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
+   (57)---- Write16   0xbc(0x5e): 0x0
+testing print 2
+Opening frame GPIO
+Starting encoder threads
+Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98UI init done
+
+ NOW Starting rec data thread
+  (58)-----write32   0x20: 0x78
+Starting record with a length of 2 frames 
+  (59)-----write32   0x50: 0x1fffe000
+  (60)-----write32   0x104: 0x0
+  (61)-----write32   0x100: 0x200c
+   (62)---- Write16   0x48(0x24): 0xf000
+  (63)-----write32   0x40: 0x2
+  (64)-----write32   0x40: 0x0
+EndOfRec
+--- Sequencer --- Total record region size: 8734 
+   (65)---- Write16   0xbc(0x5e): 0x0
+--- Using old settings --- Exposure time: 77351 (default: 94075)
+  (66)-----write32   0x20: 0x12e5a
+--- Saving settings --- Exposure time: 77351
+Record done, doing normal FPN correction 
+  (67)-----write32   0x20: 0x0
+--- Using old settings --- Exposure time: 77351 (default: 94075)
+  (68)-----write32   0x20: 0x12e5a
+--- Saving settings --- Exposure time: 77351
+imgGain set to 1.05594 
+Setting WB Matrix: 1.055942 1.055942 1.055942
+   (69)---- Write16   0x4f0(0x278): 0x10e5
+   (70)---- Write16   0x4f4(0x27a): 0x10e5
+   (71)---- Write16   0x4f8(0x27c): 0x10e5
+About to write file... 
+FPN correction done 
+Setting Color Matrix:
+	1.914551 -0.576660 -0.234131
+	-0.305420 1.389404 -0.096680
+	0.127197 -0.952881 1.649170
+
+   (72)---- Write16   0x4c0(0x260): 0x1ea2
+   (73)---- Write16   0x4c4(0x262): 0xf6c6
+   (74)---- Write16   0x4c8(0x264): 0xfc41
+   (75)---- Write16   0x4d0(0x268): 0xfb1d
+   (76)---- Write16   0x4d4(0x26a): 0x163b
+   (77)---- Write16   0x4d8(0x26c): 0xfe74
+   (78)---- Write16   0x4dc(0x26e): 0x209
+   (79)---- Write16   0x4e0(0x270): 0xf0c1
+   (80)---- Write16   0x4e4(0x272): 0x1a63
+Setting WB Matrix: 1.425522 1.055942 1.672613
+   (81)---- Write16   0x4f0(0x278): 0x16ce
+   (82)---- Write16   0x4f4(0x27a): 0x10e5
+   (83)---- Write16   0x4f8(0x27c): 0x1ac3
+  (84)-----write32   0x400: 0x280
+  (85)-----write32   0x444: 0x19
+QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
+  (86)-----write32   0x20: 0x12c31
+--- Saving settings --- Exposure time: 76828
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbecd44c8, name = "CamMainWindow") 
+keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbecd44c8, name = "CamMainWindow") 
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+QLock::lock(): Invalid argument
+QLock::unlock(): Unlock without corresponding lock
+
diff --git a/fpgatest.py b/fpgatest.py
new file mode 100644
index 0000000..7ce88ad
--- /dev/null
+++ b/fpgatest.py
@@ -0,0 +1,94 @@
+
+import time
+import pdb
+from termcolor import cprint
+import gc
+
+from periphery import MMIO
+from periphery import GPIO
+
+#import spidev
+#from periphery import SPI
+from mmapregisters import *
+from spi import *
+from lux import *
+from ctypes import *
+
+
+
+def nicehex(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+
+
+
+
+breakFPGA = False
+# breakFPGA = True
+
+fpga_mmio = MMIO(0x01000000, 0x3000)
+RAM_mmio = MMIO(0x02000000, 0x1000000)
+
+ptr = fpga_mmio.pointer
+print(f"ptr is {ptr}")
+print(f"base is {fpga_mmio.base}")
+
+FPGAlptr = cast(ptr, POINTER(c_ulong))
+FPGAwptr = cast(ptr, POINTER(c_ushort))
+FPGAbptr = cast(ptr, POINTER(c_ubyte))
+
+# breakpoint()
+
+FPGActypes = True
+# FPGActypes = False
+
+"""
+print ("Testing RAM R/W")
+x = RAM_mmio.read8(0)
+print (f" - reading {x}")
+print (" - writing...")
+RAM_mmio.write8(0, 123)
+x = RAM_mmio.read8(0)
+print (f" - reading {x}")
+"""
+
+
+
+
+i = 0
+size = 2
+ctype = 0
+FPGAreg = 0
+data = 0
+
+if size == 4:
+	print("32 bit:")
+	# print(f"  0x{4*i:x}: 0x{FPGAlptr[i]:x}")
+	if ctype:
+		FPGAlptr[i] = 0
+	else:
+		fpga_mmio.write32(FPGAreg, data)
+
+
+if size == 2:
+	print("16 bit:")
+	# print(f"  0x{2*i:x}: 0x{FPGAwptr[i]:x}")
+	if ctype:
+		FPGAwptr[i] = 0
+	else:
+		fpga_mmio.write16(FPGAreg, data)
+
+if size == 1:
+	print("8 bit")
+	# print(f"  0x{i:x}: 0x{FPGAbptr[i]:x}")
+	if ctype:
+		FPGAbptr[i] = 0
+	else:
+		fpga_mmio.write8(FPGAreg, data)
+
+gc.collect()
+
+
+
diff --git a/io.py b/io.py
new file mode 100644
index 0000000..6f8a354
--- /dev/null
+++ b/io.py
@@ -0,0 +1,35 @@
+import time
+import pdb
+
+
+
+
+
+class IOObject:
+	'''all the IO!
+	STILL TO BE IMPLEMENTED'''
+
+	def __init__(self):
+		cprint ("IOObject Init", "yellow")
+
+
+	def setTriggerEnable(self):
+
+
+
+	def setTriggerInvert(self):
+
+
+
+	def setTriggerDebounceEn(self):
+
+
+
+
+	def setTriggerDelayFrames(self):
+
+
+
+
+	def setShutterGatingEnable(self):
+
diff --git a/list of SCIWrites b/list of SCIWrites
new file mode 100644
index 0000000..1fdce07
--- /dev/null
+++ b/list of SCIWrites	
@@ -0,0 +1,134 @@
+
+
+SCI Writes:
+
+Camera::Init
+  Lux1310::Init
+    ::InitSensor
+      1 - 39
+  ::setImagerSettings
+    Lux1310::setResolution
+      40 - 43
+    ::setGain
+      44 - 46
+    ::updateWavetableSetting
+      ::setWavetable
+      47 - 50  
+
+
+FPGA Writes:
+
+Camera::Init
+  1
+  ::setLiveOutputTiming
+    2 - 11
+  12 - 16
+  ::setRecRegionStartWords
+    17
+  18
+  Lux1310::Init
+    ::InitSensor
+      19 - 20
+      ::setReset
+        21 - 22
+      ::autoPhaseCal
+        ::setClkPhase
+          23 - 25
+      26 - 27
+      ::setFramePeriod
+        ::setSlavePeriod
+          28 
+      ::setIntegrationTime
+        ::setSlaveExposure
+          29
+  IO::init
+    ::setTriggerEnable
+      30
+    ::setTriggerInvert
+      31
+    ::setTriggerDebounceEn
+      32
+    ::[misc]
+      33 - 39
+  ::setImagerSettings
+    40
+    Lux1310::setFramePeriod
+      ::setSlavePeriod
+        41 
+    ::updateWavetableSetting
+      ::setWavetable
+        ::setABNDelayClocks
+          42
+    43
+    Lux1310::setSlaveExposure
+      44
+  ::setFrameSizeWords
+      45
+    ::setDisplaySettings
+      ::setLiveOutputTiming
+        46 - 55
+  IO::setTriggerDelayFrames
+    56
+  ::autoFPNCorrection
+    IO::setShutterGatingEnable
+      57
+    ::setIntegrationTime
+      ::setSlaveExposure
+        58
+    ::setRecSequencerModeSingleBlock
+      ::setRecRegionEndWords
+        59
+      ::writeSeqPgmMemory
+        60 - 61
+      ::setFrameSizeWords
+        62
+    ::startRecording
+      ::startSequencer
+        63 - 64
+      ::setShutterGatingEnable
+       65
+    ::setIntegrationTime
+      Lux1310:::setIntegrationTime
+        ::setSlaveExposure
+          66
+    ::computeFPNCorrection2
+      Lux1310::seqOnOff
+        67
+	    ::setIntegrationTime
+	      Lux1310:::setIntegrationTime
+	        ::setSlaveExposure
+	          68
+	     ::setWhiteBalance
+	       69 - 71
+	::setCCMatrix
+	  72 - 80
+	::setWhiteBalance
+	  81 - 83
+	::setFocusPeakColorLL
+	  84 
+	::setFocusPeakThresholdLL
+    85	    
+
+
+<on_expSliderValueChanged>
+	Camera::setIntegrationTime
+    Lux1310:::setIntegrationTime
+      ::setSlaveExposure
+        86
+
+
+
+
+
+
+
+
+
+    Lux1310::setResolution
+      40 - 43
+    ::setGain
+      44 - 46
+    ::updateWavetableSetting
+      ::setWavetable
+      47 - 50  
+
diff --git a/list of SCIWrites and FPGAWrites b/list of SCIWrites and FPGAWrites
new file mode 100644
index 0000000..d155767
--- /dev/null
+++ b/list of SCIWrites and FPGAWrites	
@@ -0,0 +1,124 @@
+
+
+SCI Writes:
+
+Camera::Init
+  Lux1310::Init
+    ::InitSensor
+      1 - 39
+  ::setImagerSettings
+    Lux1310::setResolution
+      40 - 43
+    ::setGain
+      44 - 46
+    ::updateWavetableSetting
+      ::setWavetable
+      47 - 50  
+
+
+FPGA Writes:
+
+Camera::Init
+  1
+  ::setLiveOutputTiming
+    2 - 11
+  12 - 16
+  ::setRecRegionStartWords
+    17
+  18
+  Lux1310::Init
+    ::InitSensor
+      19 - 20
+      ::setReset
+        21 - 22
+      ::autoPhaseCal
+        ::setClkPhase
+          23 - 25
+      26 - 27
+      ::setFramePeriod
+        ::setSlavePeriod
+          28 
+      ::setIntegrationTime
+        ::setSlaveExposure
+          29
+  IO::init
+    ::setTriggerEnable
+      30
+    ::setTriggerInvert
+      31
+    ::setTriggerDebounceEn
+      32
+    ::[misc]
+      33 - 39
+  ::setImagerSettings
+    40
+    Lux1310::setFramePeriod
+      ::setSlavePeriod
+        41 
+    ::updateWavetableSetting
+      ::setWavetable
+        ::setABNDelayClocks
+          42
+    43
+    Lux1310::setSlaveExposure
+      44
+  ::setFrameSizeWords
+      45
+    ::setDisplaySettings
+      ::setLiveOutputTiming
+        46 - 55
+  IO::setTriggerDelayFrames
+    56
+  ::autoFPNCorrection
+    IO::setShutterGatingEnable
+      57
+    ::setIntegrationTime
+      ::setSlaveExposure
+        58
+    ::setRecSequencerModeSingleBlock
+      ::setRecRegionEndWords
+        59
+      ::writeSeqPgmMemory
+        60 - 61
+      ::setFrameSizeWords
+        62
+    ::startRecording
+      ::startSequencer
+        63 - 64
+      ::setShutterGatingEnable
+       65
+    ::setIntegrationTime
+      Lux1310:::setIntegrationTime
+        ::setSlaveExposure
+          66
+    ::computeFPNCorrection2
+      Lux1310::seqOnOff
+        67
+	    ::setIntegrationTime
+	      Lux1310:::setIntegrationTime
+	        ::setSlaveExposure
+	          68
+	     ::setWhiteBalance
+	       69 - 71
+	::setCCMatrix
+	  72 - 80
+	::setWhiteBalance
+	  81 - 83
+	::setFocusPeakColorLL
+	  84 
+	::setFocusPeakThresholdLL
+    85	    
+
+
+<on_expSliderValueChanged>
+	Camera::setIntegrationTime
+    Lux1310:::setIntegrationTime
+      ::setSlaveExposure
+        86
+
+
+
+
+
+
+
diff --git a/list of SCIWrites and FPGAWrites2 b/list of SCIWrites and FPGAWrites2
new file mode 100644
index 0000000..f6e4c5f
--- /dev/null
+++ b/list of SCIWrites and FPGAWrites2	
@@ -0,0 +1,119 @@
+
+
+SCI Writes:
+
+Camera::Init
+  Lux1310::Init
+    Lux1310::InitSensor
+      1 - 39
+  Camera::setImagerSettings
+    Lux1310::setResolution
+      40 - 43
+    Lux1310::setGain
+      44 - 46
+    Lux1310::updateWavetableSetting
+      Lux1310::setWavetable
+      47 - 50  
+
+
+FPGA Writes:
+
+Camera::Init
+  1
+  Camera::setLiveOutputTiming
+    2 - 11
+  12 - 16
+  Camera::setRecRegionStartWords
+    17
+  18
+  Lux1310::Init
+    Lux1310::InitSensor
+      19 - 20
+      Lux1310::setReset
+        21 - 22
+      Lux1310::autoPhaseCal
+        Lux1310::setClkPhase
+          23 - 25
+      26 - 27
+      Lux1310::setFramePeriod
+        Lux1310::setSlavePeriod
+          28 
+      Lux1310::setIntegrationTime
+        Lux1310::setSlaveExposure
+          29
+  IO::init
+    IO::setTriggerEnable
+      30
+    IO::setTriggerInvert
+      31
+    IO::setTriggerDebounceEn
+      32
+    IO::[misc]
+      33 - 39
+  Camera::setImagerSettings
+    40
+    Lux1310::setFramePeriod
+      Lux1310::setSlavePeriod
+        41 
+    Lux1310::updateWavetableSetting
+      Lux1310::setWavetable
+        Lux1310::setABNDelayClocks
+          42
+    43
+    Lux1310::setSlaveExposure
+      44
+  Camera::setFrameSizeWords
+      45
+    Camera::setDisplaySettings
+      Camera::setLiveOutputTiming
+        46 - 55
+  IO::setTriggerDelayFrames
+    56
+  Camera::autoFPNCorrection
+    IO::setShutterGatingEnable
+      57
+    Camera::setIntegrationTime
+      Camera::setSlaveExposure
+        58
+    Camera::setRecSequencerModeSingleBlock
+      Camera::setRecRegionEndWords
+        59
+      Camera::writeSeqPgmMemory
+        60 - 61
+      Camera::setFrameSizeWords
+        62
+    Camera::startRecording
+      Camera::startSequencer
+        63 - 64
+      Camera::setShutterGatingEnable
+       65
+    Camera::setIntegrationTime
+      Lux1310:::setIntegrationTime
+        Lux1310::setSlaveExposure
+          66
+    Camera::computeFPNCorrection2
+      Lux1310::seqOnOff
+        67
+	    Lux1310::setIntegrationTime
+	      Lux1310:::setIntegrationTime
+	        Lux1310::setSlaveExposure
+	          68
+	     Lux1310::setWhiteBalance
+	       69 - 71
+	Camera::setCCMatrix
+	  72 - 80
+	Camera::setWhiteBalance
+	  81 - 83
+	Camera::setFocusPeakColorLL
+	  84 
+	Camera::setFocusPeakThresholdLL
+    85	    
+
+
+<on_expSliderValueChanged>
+	Camera::setIntegrationTime
+    Lux1310::setIntegrationTime
+      Lux1310::setSlaveExposure
+        86
+
+
diff --git a/live.py b/live.py
index 6d76ab4..11e4fd7 100644
--- a/live.py
+++ b/live.py
@@ -1,61 +1,76 @@
 
-import time
-from camobj import CamObject
-#import camobj
-
-print ("Live Video Testing")
+# import pdb; pdb.set_trace()
 
+print("Live Video Testing")
 
+# breakpoint()
 
+import time
+from camobj import CamObject
+from termcolor import colored
+# import camobj
 
+# breakpoint()
 
+# exit()
 # main part
 
 cam = CamObject()
 
+# exit()
 
 def nicehex(n):
 	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+
+
 def nicehex4(n):
 	return "0x" + ("0000000" + hex(n)[2:])[-8:]
 
-print ("LIVE FPGA registers")
 
-#print (cam)
+print("LIVE FPGA registers")
+
+# print (cam)
 
 for i in range(0, 10, 4):
 	mm = cam.mem.fpga_mmio.read32(i)
-	print (nicehex(i), " - ", nicehex4(mm))
+	print(nicehex(i), " - ", nicehex4(mm))
 
-print ("LIVE!")
+print("LIVE!")
 
-print (cam.sensor.ImageGeometry.hres)
-print (cam.sensor.numfunc())
+# print (cam.sensor.ImageGeometry.hres)
+# print (cam.sensor.numfunc())
 
 
-sw = cam.GPIORead("encoder-sw")
+sw = cam.mem.GPIORead("encoder-sw")
 print(f"Encoder switch is {sw}")
 
+print ("----")
 for x in range(10):
-	cam.GPIOWrite("record-led.0", x & 1)
-	cam.GPIOWrite("record-led.1", not (x & 1))
+	cam.mem.GPIOWrite("record-led.0", x & 1)
+	print("-")
+	cam.mem.GPIOWrite("record-led.1", not (x & 1))
 	time.sleep(0.08)
-cam.GPIOWrite("record-led.0", 0)
-cam.GPIOWrite("record-led.1", 0)
+	print(x)
+cam.mem.GPIOWrite("record-led.0", 0)
+cam.mem.GPIOWrite("record-led.1", 0)
 
-while 0:
-	a = cam.GPIORead("encoder-a")
-	b = cam.GPIORead("encoder-b")
-	#b = cam.GPIORead("encoder-sw")
-	#a = not cam.GPIORead("shutter-sw")
-	cam.GPIOWrite("record-led.0", a)
-	cam.GPIOWrite("record-led.1", b)
+exit()
 
+while 0:
+	a = cam.mem.GPIORead("encoder-a")
+	b = cam.mem.GPIORead("encoder-b")
+	# b = cam.GPIORead("encoder-sw")
+	# a = not cam.GPIORead("shutter-sw")
+	cam.mem.GPIOWrite("record-led.0", a)
+	cam.mem.GPIOWrite("record-led.1", b)
 
+# cam.sensor.Lux1310RegDump()
+print("........")
 
+cam.sensor.Lux1310ShowTestPattern()
 
-cam.TestLive()
+# cam.TestLive()
 
 # print (cam.sensor.ImageConstraints)
 # print (cam.sensor.ImageGeometry)
-print (cam.sensor.ImageSensor)
+# print (cam.sensor.ImageSensor)
diff --git a/lowpy.zip b/lowpy.zip
new file mode 100644
index 0000000000000000000000000000000000000000..05f34849f3a493ae72633623b0927f1ffc86453b
GIT binary patch
literal 27628
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
Gzx^Krlc%fz

literal 0
HcmV?d00001

diff --git a/lux1310.py b/lux1310.py
index 8844ee5..da14446 100644
--- a/lux1310.py
+++ b/lux1310.py
@@ -1,3 +1,7 @@
+from pprint import pprint
+from termcolor import colored, cprint
+import pdb
+import math
 
 from periphery import GPIO
 from sensorobj import SensorObject
@@ -10,6 +14,10 @@ import struct
 from lux1310waves import *
 from lux1310sensor import *
 
+NODAC = False
+# NODAC = True
+
+
 '''
 #convert this to Struct.struct
 @dataclass
@@ -32,35 +40,70 @@ class FPGA1310Sensor:
 
 '''
 
+	# SPI * spi;
+	# GPMC * gpmc;
+	# UInt8 clkPhase;
+	# Int16 offsetsA[16];
+
+
+def within(x, mn, mx):
+	if x > mx:
+		return mx
+	if x < mn:
+		return mn
+	return x
+
+
 # Bit hacking to extract a value from a bitmask and shift it down.
 def getbits(value, mask):
-
+	# print (f"  ### getbits(0x{value:x}, 0x{mask:x})")
 	if mask == 0:
-		print (0)
-		return 0	
+		# print ("   ->0x0")
+		return 0
 	else:
 		lsb = (~mask + 1) & mask
-		print ( (value & mask) / lsb)
-		return (value & mask) / lsb
-	
-# Bit hacking to shift a value up to the position specified by the mask. 
+		# print (f"   ->0x{((value & mask) // lsb):x}")
+		return (value & mask) // lsb
+
+
+# Bit hacking to shift a value up to the position specified by the mask.
 def setbits(value, mask):
-	print(f"Setbits ({value}, {mask}):")
+	# print(f"Setbits ({value}, {mask}):")
+	# print (f"  ### setbits(0x{value:x}, 0x{mask:x})")
 	if mask == 0:
-		print (0)
+		# print ("   ->0x0")
 		return 0
-	else: 
+	else:
 		lsb = (~mask + 1) & mask
-		print ( (value * lsb) & mask)
+		# print (f"   ->0x{((value * lsb) & mask):x}")
 		return (value * lsb) & mask
 
 
 class Lux1310Object(SensorObject):
 
-	#we'll keep a copy of the wavetable delay
-	keepdelay = 0;
-
-	#get SCI constants
+	breakSCI = False
+	# breakSCI = True
+
+	# we'll keep a copy of the wavetable delay
+	keepdelay = 0
+	SCIc = 0  # how many SCI writes
+
+	currentHRes = 1280
+	currentVRes = 1024
+	currentPeriod = 0
+	currentExposure = 0
+
+	#TODO: are all these used?
+	masterMode = False
+	masterModeTotalLines = 0
+	dacCSFD = 0
+	wavetableSize = 80
+	gain = 0
+	wavetableSelect = 0
+	startDelaySensorClocks = LUX1310_MAGIC_ABN_DELAY
+	sensorVersion = 0
+
+	# get SCI constants
 	SCI = SCIObject()
 
 	# SPI_DEV = "/dev/spidev3.0"
@@ -70,15 +113,16 @@ class Lux1310Object(SensorObject):
 	# SPI_BITS = 16
 
 	# spi = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
-	
+
+	# special LUX1310 variables
 
 
 	def _Lux1310ClocksToNsec(self, _clks, _hz):
 		return ((_clks * 1000000000) + _hz - 1) / _hz
-	
+
 	# Gain parameters
 	Lux1310GainData = [
-		{   # x1 - 0dB 
+		{   # x1 - 0dB
 			"vrstb": 2700,
 			"vrst": 3300,
 			"vrsth": 3600,
@@ -87,7 +131,7 @@ class Lux1310Object(SensorObject):
 			"gain_bit": 3,
 			"analog_gain": 0,
 		},
-		{ # x2 - 6dB 
+		{   # x2 - 6dB
 			"vrstb": 2700,
 			"vrst": 3300,
 			"vrsth": 3600,
@@ -96,7 +140,7 @@ class Lux1310Object(SensorObject):
 			"gain_bit": 3,
 			"analog_gain": 6,
 		},
-		{ # x4 - 12dB 
+		{    # x4 - 12dB
 			"vrstb": 2700,
 			"vrst": 3300,
 			"vrsth": 3600,
@@ -105,7 +149,7 @@ class Lux1310Object(SensorObject):
 			"gain_bit": 0,
 			"analog_gain": 12,
 		},
-		{ # x8 - 18dB 
+		{    # x8 - 18dB
 			"vrstb": 1700,
 			"vrst": 2300,
 			"vrsth": 2600,
@@ -114,7 +158,7 @@ class Lux1310Object(SensorObject):
 			"gain_bit": 0,
 			"analog_gain": 18,
 		},
-		{ # x16 - 24dB 
+		{   # x16 - 24dB
 			"vrstb": 1700,
 			"vrst": 2300,
 			"vrsth": 2600,
@@ -128,37 +172,93 @@ class Lux1310Object(SensorObject):
 
 
 	def FPGAAndBits(self, addr, mask):
+		#print (f"  $$$ FPGAAndBits(0x{addr:x}, 0x{mask:x})")
+		#print (f"\n\n SELF = {self}")
+		#pprint(vars(self))
+		#help(self)
+		#print (repr(self))
 		readdata = self.mem.fpga_read16(addr)
 		readdata &= mask
-		self.mem.fpga_write16(addr, readdata)
+		self.mem.fpga_write16s(addr, readdata)
 
 	def FPGAOrBits(self, addr, mask):
+		#print (f"  $$$ FPGAOrBits(0x{addr:x}, 0x{mask:x})")
 		readdata = self.mem.fpga_read16(addr)
 		readdata |= mask
-		self.mem.fpga_write16(addr, readdata)
+		self.mem.fpga_write16s(addr, readdata)
 
-	def Lux1310SCIWrite(self, addr, value):
-		'''Perform a simple 16bit register write'''
+	#raise Exception("\n\nSCI writing doesn't work!")
+
+	def Lux1310SCIWriteWithMask(self, addr, value):
+		'''ORIGINAL
+		Perform a simple 16bit register write'''
+		# print (f" $$$ Lux1310SCIWrite(0x{addr:x}, 0x{value:x})")
 		# Clear RW, and setup the transfer and fill the FIFO
-		self.FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
-		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
-		self.mem.fpga_write16(SENSOR_SCI_DATALEN, 2)
-		self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, (value >> 8) & 0xff)
-		self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, value & 0xff)
+		# print (f"\n\n SELF = {self}")
+		# pprint(vars(self))
+
+		# NOTE: this uses the write + "s" methods, that do not print debug info
+		self.mem.fpga_write16s(SENSOR_SCI_CONTROL, 0x8000)
+
+		self.FPGAAndBits(SENSOR_SCI_CONTROL, 0xffff - SENSOR_SCI_CONTROL_RW_MASK)
+		self.mem.fpga_write16s(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16s(SENSOR_SCI_DATALEN, 2)
+		self.mem.fpga_write8s(SENSOR_SCI_FIFO_WR_ADDR, (value >> 8) & 0xff)
+		self.mem.fpga_write8s(SENSOR_SCI_FIFO_WR_ADDR, value & 0xff)
+
+		# x = input("Press ENTER to continue...")
 
 		# Start the transfer and then wait for completion.
 		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
 		while self.mem.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
 			pass
 
+	def Lux1310SCIWritePure(self, addr, value):
+		'''with pure writes instead of masked read-modify-write
+		Perform a simple 16bit register write'''
+		# print (f" ### Lux1310SCIWrite(0x{addr:x}, 0x{value:x})")
+		# Clear RW, and setup the transfer and fill the FIFO
+		# print (f"\n\n SELF = {self}")
+		# pprint(vars(self))
+
+		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 0x8000)
+		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 0)
+		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16(SENSOR_SCI_DATALEN, 4)
+		# self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, (value >> 8) & 0xff)
+		# self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, value & 0xff)
+		self.mem.fpga_write8(SENSOR_SCI_FIFO_WR_ADDR, 0x11)
+		self.mem.fpga_write8(SENSOR_SCI_FIFO_WR_ADDR, 0x22)
+		self.mem.fpga_write8(SENSOR_SCI_FIFO_WR_ADDR, 0x33)
+		self.mem.fpga_write8(SENSOR_SCI_FIFO_WR_ADDR, 0x44)
+
+		# x = input("Press ENTER to continue...")
+
+		# Start the transfer and then wait for completion.
+		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 1)
+		while self.mem.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+			pass
+
+	def Lux1310SCIWrite(self, addr, value):
+		# self.Lux1310SCIWritePure(addr, value)
+		# print (f" ({self.SCIc})$$$ Lux1310SCIWrite(0x{addr:x}, 0x{value:x})")
+
+		if self.breakSCI: breakpoint()
+		self.Lux1310SCIWriteWithMask(addr, value)
+
+
 	def Lux1310SCIWriteBuf(self, addr, values):
 		'''Perform a series of 8 bit register writes'''
 		# Clear RW, and setup the transfer and fill the FIFO
-		self.FPGAAndBits(SENSOR_SCI_CONTROL, ~SENSOR_SCI_CONTROL_RW_MASK)
-		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
-		self.mem.fpga_write16(SENSOR_SCI_DATALEN, len(values))
+		print (f"$$$ Lux1310SCIWriteBuf to 0x{addr:x}: {len(values)} entries")
+		self.mem.fpga_write16s(SENSOR_SCI_CONTROL, 0x8000)
+		
+		self.FPGAAndBits(SENSOR_SCI_CONTROL, 0xffff - SENSOR_SCI_CONTROL_RW_MASK)
+		self.mem.fpga_write16s(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16s(SENSOR_SCI_DATALEN, len(values))
 		for b in values:
-			self.mem.fpga_write16(SENSOR_SCI_FIFO_WR_ADDR, b)
+			self.mem.fpga_write16s(SENSOR_SCI_FIFO_WR_ADDR, b)
+			# print (f"  - 0x{b:x}")
 
 		# Start the transfer and then wait for completion.
 		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
@@ -167,10 +267,11 @@ class Lux1310Object(SensorObject):
 
 	def Lux1310SCIRead(self, addr):
 		'''Perform a simple 16bit register read'''
+		# print(f" ### Lux1310SCIRead(0x{addr:x})")
 		# Set RW, address and length.
 		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RW_MASK)
-		self.mem.fpga_write16(SENSOR_SCI_ADDRESS, addr)
-		self.mem.fpga_write16(SENSOR_SCI_DATALEN, 2)
+		self.mem.fpga_write16s(SENSOR_SCI_ADDRESS, addr)
+		self.mem.fpga_write16s(SENSOR_SCI_DATALEN, 2)
 		
 		# Start the transfer and then wait for completion.
 		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
@@ -180,26 +281,69 @@ class Lux1310Object(SensorObject):
 		return self.mem.fpga_read16(SENSOR_SCI_READ_DATA)
 	
 	def Lux1310Read(self, reg):
+		# print(f"### Lux1310Read(0x{reg:x})")
+		sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
 		val = self.Lux1310SCIRead(reg >> self.SCI.LUX1310_SCI_REG_ADDR)
+		# print (f" ->0x{val:x}")
 		return getbits(val, reg & self.SCI.LUX1310_SCI_REG_MASK)
 
 	def Lux1310Write(self, reg, val):
-		'''Perform a simple register write, which contains only one sub-field.'''
-		print(f"Lux1310Write({reg}, {val})")
-		sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
-		scidata = setbits(val, reg & self.SCI.LUX1310_SCI_REG_MASK)
-		self.Lux1310SCIWrite(sciaddr, scidata)
+		'''Perform a simple register write, which contains only one sub-field.
+		NEW: pass a string instead
+		'''
+
+		#debug testing: sleep some
+		time.sleep(0.01)
+		# breakpoint()
+
+		self.SCIc = self.SCIc + 1
+		if type(reg) is str:
+			lreg = Lux1310_dict[reg]
+			sciaddr = lreg >> self.SCI.LUX1310_SCI_REG_ADDR
+			scidata = setbits(val, lreg & self.SCI.LUX1310_SCI_REG_MASK)
+			cprint(f'  <{self.SCIc}>$$$ Lux1310Write("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
+			self.Lux1310SCIWrite(sciaddr, scidata)
+		else:
+			cprint(f"  <{self.SCIc}>$$$ Lux1310Write(0x{reg:x}, 0x{val:x})", "red")
+		
+			sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
+			scidata = setbits(val, reg & self.SCI.LUX1310_SCI_REG_MASK)
+			self.Lux1310SCIWrite(sciaddr, scidata)
+
+
+	def Lux1310WriteWord(self, reg, val):
+		'''Perform a full register write, without considering bit-field definitions
+		NEW: pass a string instead
+		'''
+		self.SCIc = self.SCIc + 1
+		if type(reg) is str:
+			lreg = Lux1310_dict[reg]
+			sciaddr = lreg >> self.SCI.LUX1310_SCI_REG_ADDR
+			scidata = val
+			cprint(f'  <{self.SCIc}>$$$ Lux1310Write("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
+			self.Lux1310SCIWrite(sciaddr, scidata)
+		else:
+			cprint(f"  <{self.SCIc}>$$$ Lux1310Write(0x{reg:x}, 0x{val:x})", "red")
+			sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
+			scidata = val
+			self.Lux1310SCIWrite(sciaddr, scidata)
+
 
 
+
+	def Lux1310ChangeCount(self, delta):
+		self.SCIc = self.SCIc + delta
+
 	def Lux1310WriteWaveTab(self, wavedict):
+		print ("$$$ Lux1310WriteWaveTab")
 		self.keepdelay = wavedict["read_delay"]
 		waves = wavedict["table"]
-		self.Lux1310Write(self.SCI.LUX1310_SCI_TIMING_EN, 0)
+		self.Lux1310Write("LUX1310_SCI_TIMING_EN", 0)
 		delay =wavedict["read_delay"]
-		self.Lux1310Write(self.SCI.LUX1310_SCI_RDOUT_DLY, delay)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_WAVETAB_SIZE, delay)
+		self.Lux1310Write("LUX1310_SCI_RDOUT_DLY", delay)
+		self.Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", delay)
 		self.Lux1310SCIWriteBuf(0x7F, waves);
-		self.Lux1310Write(self.SCI.LUX1310_SCI_TIMING_EN, 1)
+		self.Lux1310Write("LUX1310_SCI_TIMING_EN", 1)
 
 
 	def Lux1310MinPeriod(self, wavelen):
@@ -252,20 +396,94 @@ class Lux1310Object(SensorObject):
 				self.Lux1310WriteWaveTab(i)
 				break
 		
+	def Lux1310GetMinFramePeriod(self, hRes, vRes, wtSize = LUX1310_MIN_WAVETABLE_SIZE):
+		if not self.Lux1310IsValidResolution(hRes, vRes, 0, 0):
+			return 0
+		if(hRes == 1280):
+			wtSize = 80
+		tRead = (hRes / LUX1310_HRES_INCREMENT) * LUX1310_CLOCK_PERIOD
+		tHBlank = 2 * LUX1310_CLOCK_PERIOD
+		tWavetable = wtSize * LUX1310_CLOCK_PERIOD
+		tRow = max(tRead+tHBlank, tWavetable+3*LUX1310_CLOCK_PERIOD)
+		tTx = 25 * LUX1310_CLOCK_PERIOD
+		tFovf = 50 * LUX1310_CLOCK_PERIOD
+		#TODO: why are these the same
+		tFovb = (50) * LUX1310_CLOCK_PERIOD #Duration between PRSTN falling and TXN falling (I think)
+		tFrame = tRow * vRes + tTx + tFovf + tFovb
+		print (f"getMinFramePeriod: {tFrame}")
+		return math.ceil(tFrame * 100000000.0)
+	
+
+
+
+	def Lux1310GetIntegrationTime(self):
+		return self.currentExposure / 100000000.0
+
+
+
+
+
 	def Lux1310SetResolutions(self):
+		print ("### Lux1310SetResolutions")
 		g = self.ImageGeometry
 		print(g)
+		# breakpoint()
 		h_start = int(g.hoffset / LUX1310_HRES_INCREMENT)
 		h_width = int(g.hres / LUX1310_HRES_INCREMENT)
 		print (h_start)
 		print (h_width)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_X_START, LUX1310_BLACK_COLS + h_start * LUX1310_HRES_INCREMENT);
-		self.Lux1310Write(self.SCI.LUX1310_SCI_X_END, LUX1310_BLACK_COLS + (h_start + h_width) * LUX1310_HRES_INCREMENT - 1)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_Y_START, g.voffset)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_Y_END, g.voffset + g.vres - 1)
+		self.Lux1310Write("LUX1310_SCI_X_START", LUX1310_BLACK_COLS + h_start * LUX1310_HRES_INCREMENT);
+		self.Lux1310Write("LUX1310_SCI_X_END", LUX1310_BLACK_COLS + (h_start + h_width) * LUX1310_HRES_INCREMENT - 1)
+		self.Lux1310Write("LUX1310_SCI_Y_START", g.voffset)
+		self.Lux1310Write("LUX1310_SCI_Y_END", g.voffset + g.vres - 1)
 		return 0
 		
 
+
+	def Lux1310GetMinMasterFramePeriod(self, hRes, vRes):
+		if not self.Lux1310IsValidResolution(hRes, vRes, 0, 0):
+			return 0.0
+
+		return self.Lux1310GetMinFramePeriod(hRes, vRes) / 100000000.0
+		
+		''' this was in camApp after the "return"
+		int wtSize;
+
+		if(hRes == 1280)
+			wtSize = 80;
+		else
+			wtSize = LUX1310_MIN_WAVETABLE_SIZE;
+
+		double tRead = (double)(hRes / LUX1310_HRES_INCREMENT) * LUX1310_CLOCK_PERIOD;
+		double tHBlank = 2.0 * LUX1310_CLOCK_PERIOD;
+		double tWavetable = wtSize * LUX1310_CLOCK_PERIOD;
+		double tRow = max(tRead+tHBlank, tWavetable+3*LUX1310_CLOCK_PERIOD);
+		double tTx = 25 * LUX1310_CLOCK_PERIOD;
+		double tFovf = 50 * LUX1310_CLOCK_PERIOD;
+		double tFovb = (50) * LUX1310_CLOCK_PERIOD;//Duration between PRSTN falling and TXN falling (I think)
+		double tFrame = tRow * vRes + tTx + tFovf + tFovb;
+		qDebug() << "getMinMasterFramePeriod:" << tFrame;
+		return tFrame;
+		'''
+	
+	def Lux1310SetSlavePeriod(self, period):
+		self.mem.FPGAWrite32("IMAGER_FRAME_PERIOD", period)
+
+	def Lux1310SetSlaveExposure(self, exposure):
+		#hack to fix line issue. Not perfect, need to properly register this on the sensor clock.
+		linePeriod = max((self.currentHRes / LUX1310_HRES_INCREMENT) + 2, (self.wavetableSize + 3)) * 1.0/LUX1310_SENSOR_CLOCK	#Line period in seconds
+		startDelay = int(self.startDelaySensorClocks * TIMING_CLOCK_FREQ / LUX1310_SENSOR_CLOCK)
+		targetExp = exposure / 100000000.0
+		expLines = round(targetExp / linePeriod)
+
+		newexposure = int(startDelay + (linePeriod * expLines * 100000000.0))
+		#qDebug() << "linePeriod" << linePeriod << "startDelaySensorClocks" << startDelaySensorClocks << "startDelay" << startDelay
+		#		 << "targetExp" << targetExp << "expLines" << expLines << "exposure" << exposure;
+		self.mem.FPGAWrite32("IMAGER_INT_TIME", newexposure)
+		self.currentExposure = newexposure
+
+
+
 	def Lux1310GetConstraints(self):
 		g = self.ImageGeometry
 		c = self.ImageConstraints
@@ -282,18 +500,21 @@ class Lux1310Object(SensorObject):
 		return 0;
 
 	def Lux1310SetGain(self, gain):
+		breakpoint()
+		if NODAC:
+			return
 		print (f"Lux1310SetGain: {gain}")
 		for gdict in self.Lux1310GainData:
 			if gdict["analog_gain"] == gain:
 				self.Lux1310SetVoltage(VRSTB_VOLTAGE, gdict["vrstb"], 1, 1)
 				self.Lux1310SetVoltage(VRST_VOLTAGE, gdict["vrst"], LUX1310_VRST_MUL, LUX1310_VRST_DIV)
 				#NOTE: this uses LUX1310_VRST_DIV in camm-daemon:
-				self.Lux1310SetVoltage(VRST_VOLTAGE, gdict["vrsh"], LUX1310_VRST_MUL, LUX1310_VRSTH_DIV)
+				self.Lux1310SetVoltage(VRSTH_VOLTAGE, gdict["vrsth"], LUX1310_VRST_MUL, LUX1310_VRSTH_DIV)
 
 
-				self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_SAMP, gdict["sampling"])
-				self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_FB, gdict["feedback"])
-				self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_BIT, gdict["gain_bit"])
+				self.Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", gdict["sampling"])
+				self.Lux1310Write("LUX1310_SCI_GAIN_SEL_FB", gdict["feedback"])
+				self.Lux1310Write("LUX1310_SCI_GAIN_BIT", gdict["gain_bit"])
 
 			# "vrstb": 2700,
 			# "vrst": 3300,
@@ -313,9 +534,9 @@ class Lux1310Object(SensorObject):
 				# }
 
 
-				# for j in range(LUX1310_ADC_COUNT)
-				for j in range(self.adc_count):
-				    Lux1310Write(self.SCI.LUX1310_SCI_ADC_OS[j], 0)
+				# for j in range(LUX1310_ADC_COUNT):
+				#for j in range(self.adc_count):
+					# self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_OS[j], 0)
 				# for (j = 0; j < sensor->adc_count; j++) {
 				#     uint16_t x = abs(caldata[j]) & ((1 << LUX1310_ADC_OFFSET_BITS) - 1);
 				#     if (caldata[j]) x |= (1 << LUX1310_ADC_OFFSET_BITS);
@@ -325,13 +546,97 @@ class Lux1310Object(SensorObject):
 				break
 		pass
 
-	def Lux1310CalGain():
+	def Lux1310GetMaxExposure(self, period):
+		return period - 500
+
+
+	def Lux1310GetActualFramePeriod(self, targetPeriod, hRes, vRes):
+		#Round to nearest 10ns period
+		targetPeriod = round(targetPeriod * (100000000.0)) / 100000000.0
+
+		minPeriod = self.Lux1310GetMinMasterFramePeriod(hRes, vRes)
+		maxPeriod = LUX1310_MAX_SLAVE_PERIOD
+
+		return within(targetPeriod, minPeriod, maxPeriod);
+
+
+
+	def Lux1310SetIntegrationTime(self, intTime, hRes, vRes):
+		#Round to nearest 10ns period
+		intTime = round(intTime * (100000000.0)) / 100000000.0
+
+		#Set integration time to within limits
+		maxIntTime = self.Lux1310GetMaxExposure(self.currentPeriod) / 100000000.0
+		minIntTime = LUX1310_MIN_INT_TIME
+		intTime = within(intTime, minIntTime, maxIntTime)
+		self.currentExposure = intTime * 100000000.0
+		self.Lux1310SetSlaveExposure(self.currentExposure)
+		return intTime;
+
+
+
+	def Lux1310SetFramePeriod(self, period, hRes, vRes):
+		#Round to nearest 10ns period
+		# breakpoint()
+		period = round(period * (100000000.0)) / 100000000.0
+		print (f"Requested period {period}")
+		minPeriod = self.Lux1310GetMinMasterFramePeriod(hRes, vRes)
+		maxPeriod = LUX1310_MAX_SLAVE_PERIOD / 100000000.0
+
+		period = within(period, minPeriod, maxPeriod)
+		self.currentPeriod = int(period * 100000000.0)
+		self.Lux1310SetSlavePeriod(self.currentPeriod)
+		return period;
+
+	def Lux1310UpdateWavetableSetting(self):
+
+		if self.wavetableSelect == LUX1310_WAVETABLE_AUTO:
+			print (f"currentPeriod is {currentPeriod}, min period is {getMinFramePeriod(currentHRes, currentVRes, 80)}")
+			if self.currentPeriod < self.Lux1310GetMinFramePeriod(currentHRes, currentVRes, 80):
+				if self.currentPeriod < self.Lux1310GetMinFramePeriod(currentHRes, currentVRes, 39):
+					if self.currentPeriod < self.Lux1310GetMinFramePeriod(currentHRes, currentVRes, 30):
+						if self.currentPeriod < self.Lux1310GetMinFramePeriod(currentHRes, currentVRes, 25):
+							self.Lux1310SetWavetable(LUX1310_WAVETABLE_20)
+						else:
+							self.Lux1310SetWavetable(LUX1310_WAVETABLE_25)
+					else:
+						self.Lux1310SetWavetable(LUX1310_WAVETABLE_30)
+				else:
+					self.Lux1310SetWavetable(LUX1310_WAVETABLE_39)			
+			else:
+				self.Lux1310SetWavetable(LUX1310_WAVETABLE_80)
+		else:
+			self.Lux1310SetWavetable(self.wavetableSelect)
+
+
+
+
+	def Lux1310CalGain(self):
 		pass
 
-	def Lux1310CalSuffix():
+	def Lux1310CalSuffix(self):
 		pass
 
 
+	def Lux1310IsValidResolution(self, hRes, vRes, hOffset, vOffset):
+		# Enforce resolution limits. 
+		if (hRes < LUX1310_MIN_HRES) or (hRes + hOffset > LUX1310_MAX_H_RES):
+			return False
+		
+		if (vRes < LUX1310_MIN_VRES) or (vRes + vOffset > LUX1310_MAX_V_RES):
+			return False
+
+		# Enforce minimum pixel increments. 
+		if (hRes % LUX1310_HRES_INCREMENT) or (hOffset % LUX1310_HRES_INCREMENT):
+			return False
+
+		if (vRes % LUX1310_VRES_INCREMENT) or (vOffset % LUX1310_VRES_INCREMENT):
+			return False
+		
+		# Otherwise, the resultion and offset are valid. 
+		return True
+	
+
 
 
 	Lux1310OpsDict = {
@@ -355,65 +660,79 @@ class Lux1310Object(SensorObject):
 
 
 	def __init__(self, mem):
-		SensorObject.__init__(self)
-		self.mem = mem
-		#self.cam = cam
-		#self.lux1310num()
-		self.Lux1310Init()		
-		#self.SensorInit()
-		#self.OpsDict = Lux1310OpsDict
-		print ("Lux1310 initialized!")
-
-		self.Lux1310Write(self.SCI.LUX1310_SCI_LINE_VALID_DLY, 7)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_STATE_IDLE_CTRL0, 0xe08e)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_STATE_IDLE_CTRL1, 0xfc1f)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_STATE_IDLE_CTRL2, 0x0003)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_CLOCK_CTRL, 0x2202)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMI, 6)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMO, 7)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMP, 11)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VCMN, 4)
-		self.Lux1310Write(self.SCI.LUX1310_SCI_INT_CLK_TIMING, 0x41f);
+		print (colored("### lux1310 __init__", "red"))
+		cprint ("### lux1310 __init__", "red", "on_white")
+		SensorObject.__init__(self, mem)
+
+		
 
+	def Lux1310RegDump(self):
+		for reg, val in Lux1310_dict.items():
+			cont = self.Lux1310SCIRead(val >> 16)
+			print (f"--> {reg:<35} (0x{val >> 16:x}) : 0x{(cont):x}")
 
 
+	def LuxInit2(self):
+		'''these things are moved to later'''
+
+		# self.Lux1310RegDump()
+
+		print ("LuxInit2")
 		# Grab the sensor revision for further tuning.
-		rev = self.Lux1310Read(self.SCI.LUX1310_SCI_REV_CHIP)
+		rev = self.Lux1310Read(self.SCI.LUX1310_SCI_REV_CHIP) 
+		#rev = self.Lux1310Read("LUX1310_SCI_REV_CHIP") & 0xff
 		print(f"configuring for LUX1310 silicon rev {rev}")
 		if rev == 2:
-			self.Lux1310SCIWrite(0x5B, 0x307f)
-			self.Lux1310SCIWrite(0x7B, 0x3007)
+			#self.Lux1310SCIWrite(0x5B, 0x307f)
+			self.Lux1310WriteWord("LUX1310_SCI_TERMB_RXCLK", 0x307f)
+			self.Lux1310SCIWrite(0x7B, 0x3007) #TODO this is an undocumented register!
+			print ("< undocumented 0x7b Lux write >")
 		else:
-			self.Lux1310SCIWrite(0x5B, 0x301f)
-			self.Lux1310SCIWrite(0x7B, 0x3001)
+			# self.Lux1310SCIWrite(0x5B, 0x301f)
+			# self.Lux1310SCIWrite(0x7B, 0x3001)
+			self.Lux1310WriteWord("LUX1310_SCI_TERMB_RXCLK", 0x301f)
+			self.Lux1310SCIWrite(0x7B, 0x3001) #TODO this is an undocumented register!
+			print ("< undocumented 0x7b Lux write >")
+
+		#TODOfix later:
+		self.Lux1310ChangeCount(1) #because of 
 
 		# Clear the ADC Offsets table, and then enable the ADC offset calibration. 
 		for i in range(16):
 			self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_OS[i], 0);
-		
-		self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_CAL_EN, 1);
+			#TEST:
+			# self.Lux1310Write(self.SCI.LUX1310_SCI_ADC_OS[i], i);
+			# print (f"SCI WRITE {i}")
+
+
+		self.Lux1310Write("LUX1310_SCI_ADC_CAL_EN", 1);
 
+		#also TODO: loadADCOffsetsFromFile()
+		
 		# Program the default gain and wavetable.*/
-		self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_SAMP, 0x7f);
-		self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_SEL_FB, 0x7f);
-		self.Lux1310Write(self.SCI.LUX1310_SCI_GAIN_BIT, 3);
+		self.Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", 0x7f);
+		self.Lux1310Write("LUX1310_SCI_GAIN_SEL_FB", 0x7f);
+		self.Lux1310Write("LUX1310_SCI_GAIN_BIT", 3);			#(38)
 		#lux1310_write_wavetab(data, &lux1310_wt_sram80);
 		# TODO: don't just assume the first wavetable is delay of 80!
-		self.Lux1310WriteWaveTab(Lux1310WaveTables[0])
-
-		#lux1310_set_gain(&data->sensor, 0, NULL);
+	
+		self.Lux1310SCIWriteBuf(0x7F, Lux1310Wave80Data);
 		
-		# Enable the sensor timing engine. */
-		self.Lux1310Write(self.SCI.LUX1310_SCI_TIMING_EN, 1);
+		self.Lux1310Write("LUX1310_SCI_TIMING_EN", 1);
+		
+		time.sleep(0.01)
+		self.mem.FPGAWrite32("IMAGER_FRAME_PERIOD", 100 * 4000)
+		self.mem.FPGAWrite32("IMAGER_INT_TIME", 100 * 3900)
+		time.sleep(0.05)
 	
 
+		self.currentHRes = 1280
+		self.currentVRes = 1024
+		self.Lux1310SetFramePeriod(self.Lux1310GetMinFramePeriod(self.currentHRes, self.currentVRes)/100000000.0, self.currentHRes, self.currentVRes)
+		#mem problem before this
+		self.Lux1310SetIntegrationTime(self.Lux1310GetMaxExposure(self.currentPeriod) / 100000000.0, self.currentHRes, self.currentVRes)
 
-		#usleep(10000);
-		time.sleep(0.01)
-		self.mem.fpga_write32(IMAGER_FRAME_PERIOD, 100 * 4000)
-		self.mem.fpga_write32(IMAGER_INT_TIME, 100 * 3900)
-		#usleep(50000);
-		time.sleep(0.05)
+		print ("done LuxInit2")
 
 
 	#numfunc = lux1310num
@@ -433,19 +752,20 @@ class Lux1310Object(SensorObject):
 	def Lux1310SetVoltage(self, channel, mv, mul, div):
 		vdac = int((LUX1310_DAC_FULL_SCALE * mv * mul) / (LUX1310_DAC_VREF * div))
 		reg = self._htole16(((channel & 0x7) << 12) | vdac)
-		self.mem.GPIOWrite("daccs", 0)
-		spilist = [reg >> 8, reg & 255]
+		self.mem.GPIOWrite("lux1310-dac-cs", 0)
+		#spilist = [reg >> 8, reg & 255]
 		#print (spilist)
-		spi.transfer(spilist)
+		spi.spi_transfer(reg)
 
-		self.mem.GPIOWrite("daccs", 1)
+		self.mem.GPIOWrite("lux1310-dac-cs", 1)
 
 			
-    # gpio_write(data->daccs, 0);
-    # err = write(data->spifd, &reg, sizeof(reg));
-    # gpio_write(data->daccs, 1);
+	# gpio_write(data->daccs, 0);
+	# err = write(data->spifd, &reg, sizeof(reg));
+	# gpio_write(data->daccs, 1);
 
 	def _writeDACVoltage(self, chan, voltage):
+		cprint(f"_writeDACVoltage: {chan}, {voltage}V", "blue", "on_white")
 		if chan == VDR3_VOLTAGE:
 			self.writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
 		elif chan == VABL_VOLTAGE:
@@ -466,19 +786,31 @@ class Lux1310Object(SensorObject):
 			pass
 
 
-	def writeDAC(self, data, channel):
+	def writeDAC(self, fdata, channel):
+		data = int(fdata)
+		cprint(f"   writeDAC {channel}: 0x{data:x}", "blue", "on_white")
 		self.writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
 
 
 	def writeDACSPI(self, data):
+		cprint(f"      writeDACSPI 0x{data:x}", "blue", "on_white")
+		self.mem.GPIOWrite("lux1310-dac-cs", 0)
 		spi.spi_transfer(data)
+		self.mem.GPIOWrite("lux1310-dac-cs", 1)
+		
 
 
 	def _initDAC(self):
 		spi.spi_open()
+		# exit()
+		self.mem.GPIOWrite("lux1310-dac-cs", 0)
 		spi.spi_transfer(0x9000)
+		self.mem.GPIOWrite("lux1310-dac-cs", 0)
+		
 
 	def _writeDACVoltages(self):
+		breakpoint()
+		print("_writeDACVoltages")
 		self._initDAC();
 		self._writeDACVoltage(VABL_VOLTAGE, 0.3);
 		self._writeDACVoltage(VRSTB_VOLTAGE, 2.7);
@@ -490,22 +822,44 @@ class Lux1310Object(SensorObject):
 		self._writeDACVoltage(VDR3_VOLTAGE, 1.5);
 
 
+	def Lux1310SetWavetable(self, mode):
+		self.Lux1310Write("LUX1310_SCI_TIMING_EN", 0x8000) # Disable internal timing engine
+		self.Lux1310Write("LUX1310_SCI_RDOUT_DLY", Lux1310Wavetables[mode]["read_delay"]) # non-overlapping readout delay
+		self.Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", Lux1310Wavetables[mode]["read_delay"]) # wavetable size
+		self.Lux1310SCIWriteBuf(0x7f, Lux1310Wavetables[mode]["table"]) # Enable internal timing engine
+		self.Lux1310Write("LUX1310_SCI_TIMING_EN", 0x0001)
+		self.wavetableSize = Lux1310Wavetables[mode]["read_delay"]
+		self.Lux1310SetABNDelayClocks(Lux1310Wavetables[mode]["read_delay"])
+		
+		print (f"Wavetable size set to {self.wavetableSize}")
+
+
+	def Lux1310SetABNDelayClocks(self, ABNOffset):
+		self.mem.FPGAWrite16("SENSOR_MAGIC_START_DELAY", ABNOffset)
+
+	def Lux1310Init2(self):
+		# Now do rest of lux init
 
+		#test SCI writing
+		#self.Lux1310WriteSCITest()
+		#raise Exception("end!")
 
+		self.Lux1310AutoPhaseCal()
 
+		self.Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", 0x7f);
 
 	def Lux1310Init(self):
 
 		print ("Lux1310Init")
 
-		self.mem.mm_open()
+		#self.mem.mm_open()
 		#self.mem.initlux()
 
 		#self.initDAC()
-		self._writeDACVoltages()
+		#self._writeDACVoltages()
 
+		#time.sleep(0.001)
 
-		# Now do rest of lux init
 		time.sleep(0.01)
 
 
@@ -522,10 +876,15 @@ class Lux1310Object(SensorObject):
 		if value:
 			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue | IMAGE_SENSOR_RESET_MASK)
 		else:
-			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue & ~IMAGE_SENSOR_RESET_MASK)
+			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue & 0xffff - IMAGE_SENSOR_RESET_MASK)
 
 	def SensorInit(self):
 		#self.ImageSensor = ImageSensorData()
+		#self.mem.fpga_write16(SENSOR_FIFO_START_W_THRESH, 0x100)
+		#self.mem.fpga_write16(SENSOR_FIFO_STOP_W_THRESH, 0x100)
+
+		print ("SensorInit")
+
 		self.ImageSensor.name = "lux1310"
 		self.ImageSensor.mfr = "Luxima";
 		self.ImageSensor.h_max_res = 1280;
@@ -537,13 +896,225 @@ class Lux1310Object(SensorObject):
 		self.ImageSensor.pixel_rate = self.ImageSensor.h_max_res * self.ImageSensor.v_max_res * 1057;
 		self.ImageSensor.adc_count = LUX1310_ADC_COUNT;
 
-		self.Lux1310AutoPhaseCal()
 
+		#do this after DAC init instead
+		#self.Lux1310AutoPhaseCal()
+
+
+
+
+	def Lux1310WriteSCITest(self):
+		#print ("### Lux1310WriteSCITest")
 
+		# cprint (" read test", "blue")
+		# crev = self.Lux1310Read(self.SCI.LUX1310_SCI_REV_CHIP)
+		# cid = self.Lux1310Read(self.SCI.LUX1310_SCI_CHIP_ID)
+		# cprint (f"  rev: 0x{crev:x}", "blue")
+		# cprint (f"  id: 0x{cid:x}", "blue")
 
+		cprint (" write test", "blue")
+		xend = self.Lux1310Read(self.SCI.LUX1310_SCI_SEL_VDR2_WIDTH)
+		cprint (f"  vdr2 width: 0x{xend:x}", "blue")
+		self.Lux1310Write(self.SCI.LUX1310_SCI_SEL_VDR2_WIDTH, 0xabcd)
+		xend = self.Lux1310Read(self.SCI.LUX1310_SCI_SEL_VDR2_WIDTH)
+		cprint (f"  vdr2 width now: 0x{xend:x}\n", "blue")
 
 
 
 
 	def Lux1310AutoPhaseCal(self):
-		pass
\ No newline at end of file
+		# breakpoint()
+
+		pass
+
+	def Lux1310GetDataCorrect(self):
+		return self.mem.FPGARead32("SENSOR_DATA_CORRECT")
+
+
+	def SensorInit2(self):
+		#print ("-------------------------\n### Lux1310AutoPhaseCal")
+
+		# breakpoint()
+
+		self.Lux1310WriteWord("LUX1310_SCI_CUST_PAT", 0xfc0)
+		# check = self.Lux1310Read(self.SCI.LUX1310_SCI_CUST_PAT)
+		# print (f"  check is {check:x}")
+		self.Lux1310Write("LUX1310_SCI_TST_PAT", 2)
+		self.Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xfc0)
+		
+		#pdb.set_trace()
+		self.Lux1310WriteWord("LUX1310_SCI_DAC_ILV", 0xe1)
+
+		#clock phase moved to here
+		self.Lux1310AutoPhaseCal()
+		
+		# Toggle the clock phase and wait for the FPGA to lock. 
+		self.mem.fpga_write16(SENSOR_CLK_PHASE, 0)
+		self.mem.fpga_write16(SENSOR_CLK_PHASE, 1)
+		self.mem.fpga_write16(SENSOR_CLK_PHASE, 0)
+		#/ TODO: Shouldn't there be a while loop here? */
+		data_correct = self.Lux1310GetDataCorrect()
+		print(f"\nlux1310_data_correct: {data_correct}")
+
+		self.Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xf00)
+		self.Lux1310Write("LUX1310_SCI_TST_PAT", 0x2202)  # ADC clock control
+
+
+#to here
+
+		self.Lux1310Write("LUX1310_SCI_RDOUT_DLY", 80)
+		self.Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", 80)
+		self.Lux1310Write("LUX1310_SCI_LINE_VALID_DLY", 7)
+		self.Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL0", 0xe08e)
+		self.Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL1", 0xfc1f)
+		self.Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL2", 0x0003)
+		
+		self.Lux1310Write("LUX1310_SCI_ADC_CLOCK_CTRL", 0x2202)
+		#self.Lux1310Write("LUX1310_SCI_SEL_VCMI", 6)
+		#self.Lux1310Write("LUX1310_SCI_SEL_VCMO", 7)
+		#self.Lux1310Write("LUX1310_SCI_SEL_VCMP", 11)
+		#self.Lux1310Write("LUX1310_SCI_SEL_VCMN", 4)
+		#this replaces the above four writes:
+		self.Lux1310Write("LUX1310_SCI_SEL_VCM", 0x4b76)
+		self.Lux1310Write("LUX1310_SCI_INT_CLK_TIMING", 0x41f);
+
+		#rev = self.Lux1310Read("LUX1310_SCI_REV_CHIP")
+		#print (f"Found revision {rev}")
+
+#to here
+
+
+
+		
+		# not here! self.LuxInit2()
+#to here	
+		#pdb.set_trace()	
+
+		return
+
+
+		self.Lux1310Write("LUX1310_SCI_INT_CLK_TIMING", 0x41f);
+
+
+		self.Lux1310Write("LUX1310_SCI_MSB_FIRST_DATA", 0)
+		self.Lux1310Write("LUX1310_SCI_TERMB_CLK", 1)
+		self.Lux1310Write("LUX1310_SCI_TERMB_DATA", 1)
+		self.Lux1310Write("LUX1310_SCI_DCLK_INV", 1)
+		self.Lux1310Write("LUX1310_SCI_PCLK_INV", 0)
+		
+
+		# Return to normal mode. 
+		self.Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xf00)
+		self.Lux1310Write("LUX1310_SCI_TST_PAT", 0)
+
+
+		pass
+
+
+		
+	def InitSensor():
+		# UGH.... now doing this in the proper place
+
+		self.wavetableSize = 80
+		self.gain = LUX1310_GAIN_1
+
+
+	def Lux1310WriteDGCMem(self, gain, column):
+		self.mem.FPGAWrite16(DCG_MEM_START_ADDR + 2 * column, gain * 4096.0)
+
+
+	def Lux1310LoadColGainFromFile(self):
+
+		#TODO: actual file reading
+		# right now this sets gain of 1.0
+		if(True):
+			print("Resetting cal gain to 1.0")
+			for i in range(16):
+				#self.gainCorrection[i] = 1.0
+				pass
+		
+		
+		# Write the values into the display column gain memory
+		DCGstart = 0x1000
+		for i in range(LUX1310_MAX_H_RES):
+			gain = 1.0
+			self.mem.fpga_write16s(DCGstart + 2 * (i % 16), int(gain * 4096.0))
+			#self.Lux1310WriteDGCMem(gainCorrection[i % 16], i);
+
+
+
+
+	def Lux1310ShowTestPattern(self):
+		print ("Showing test pattern")
+
+		# breakpoint()
+
+		FRAME_SIZE = 1280 * 1024 * 12 // 8
+
+		print ("Setting display addresses")
+		cr = self.mem.FPGARead16("DISPLAY_CTL") | 1	
+		self.mem.FPGAWrite16("DISPLAY_CTL", cr) #Set to display from display frame address register
+		self.mem.FPGAWrite32("DISPLAY_FRAME_ADDRESS", 0x40000)	# Set display address
+
+
+		print ("Testing RAM R/W")
+		x = self.mem.RAMRead8(0)
+		print (f" - reading {x}")
+		print (" - writing...")
+		self.mem.RAMWrite8(0, 123)
+		x = self.mem.RAMRead8(0)
+		print (f" - reading {x}")
+		
+
+
+
+		print ( "Zero FPN area")
+		# breakpoint()
+		self.mem.FPGAWrite32("GPMC_PAGE_OFFSET", 0)	# Set GPMC offset
+		for i in range(0, FRAME_SIZE, 202):
+			self.mem.RAMWrite16(i, 0)
+			if not (i & 0x3fff): print (f"0x{i:x}")
+
+		
+		print ("Zero image area")
+		#Zero image area
+		self.mem.FPGAWrite32("GPMC_PAGE_OFFSET", 0x40000) #Set GPMC offset
+		for i in range(0, FRAME_SIZE, 2):
+			self.mem.RAMWrite16(i, (i >> 8) & 0xff80)
+
+		print ("Draw a rectangular box with diagonal")
+		# Draw a rectangular box around the outside of the screen and a diagonal lines starting from the top left
+		#for(int i = 0; i < 1; i++)
+		#{
+		
+		# breakpoint()
+
+		for y in range(80): 
+			for x in range(128):	
+			
+				#self.writePixel12(x+y*1280, 0x2000000, 2048) #;//(x == 0 || y == 0 || x == 1279 || y == 1023 || x == y) ? 0xFFF : 0);
+				#print(".")
+				#qDebug() << "line" << y;
+				pass
+
+		print ("Set GPMC offset")
+		self.mem.FPGAWrite32("GPMC_PAGE_OFFSET", 0) # Set GPMC offset
+		print ("done")
+
+
+	def writePixel12(self, pixel, offset, value):
+		address = pixel * 12 // 8 + offset
+		shift = (pixel & 0x1) * 4
+		dataL = self.mem.RAMRead8(address)
+		dataH = self.mem.RAMRead8(address+1)
+
+		maskL = 0xff - (0xFF << shift)
+		maskH = 0xff - (0xFFF >> (8 - shift))
+		dataL &= maskL
+		dataH &= maskH
+
+		dataL |= (value << shift)
+		dataH |= (value >> (8 - shift))
+		self.mem.RAMWrite8(address, dataL)
+		self.mem.RAMWrite8(address+1, dataH)
+
diff --git a/lux1310h.py b/lux1310h.py
index 1115b06..546707e 100644
--- a/lux1310h.py
+++ b/lux1310h.py
@@ -95,6 +95,113 @@ FILTER_COLOR_BLUE			= 2
 
 
 
+# now new dictionary:
+
+LUX1310_SCI_REG_MASK =		0xffff
+LUX1310_SCI_REG_ADDR =		16
+
+def LUX1310_SCI_REG(_addr, _mask):
+	LUX1310_SCI_REG_MASK =		0xffff
+	LUX1310_SCI_REG_ADDR =		16
+	return (((_addr) << LUX1310_SCI_REG_ADDR) | ((_mask) & LUX1310_SCI_REG_MASK))
+
+
+Lux1310_dict = {
+	"LUX1310_SCI_REV_CHIP" :			LUX1310_SCI_REG(0x00, 0x00ff),
+	"LUX1310_SCI_CHIP_ID" :				LUX1310_SCI_REG(0x00, 0xff00),
+	"LUX1310_SCI_TIMING_EN" :			LUX1310_SCI_REG(0x01, 0x0001),
+	"LUX1310_SCI_SOF_DELAY" :			LUX1310_SCI_REG(0x02, 0x00ff),
+	"LUX1310_SCI_HBLANK" :				LUX1310_SCI_REG(0x03, 0xffff),
+	"LUX1310_SCI_ROI_NB" :				LUX1310_SCI_REG(0x04, 0x0007),
+	"LUX1310_SCI_ROI_EN" :				LUX1310_SCI_REG(0x04, 0x0008),
+	"LUX1310_SCI_DRK_COL_RD" :			LUX1310_SCI_REG(0x04, 0x0100),
+	"LUX1310_SCI_VFLIP" :				LUX1310_SCI_REG(0x04, 0x1000),
+	"LUX1310_SCI_HFLIP" :				LUX1310_SCI_REG(0x04, 0x2000),
+	"LUX1310_SCI_X_START" :				LUX1310_SCI_REG(0x05, 0x07ff),
+	"LUX1310_SCI_X_END" :				LUX1310_SCI_REG(0x06, 0x07ff),
+	"LUX1310_SCI_Y_START" :				LUX1310_SCI_REG(0x07, 0x07ff),
+	"LUX1310_SCI_Y_END" :				LUX1310_SCI_REG(0x08, 0x07ff),
+#define LUX1310_SCI_ROI_X_START(_n_)    LUX1310_SCI_REG(0x09 + 4 * (_n_), 0x07ff)
+#define LUX1310_SCI_ROI_X_END(_n_)      LUX1310_SCI_REG(0x10 + 4 * (_n_), 0x07ff)
+#define LUX1310_SCI_ROI_Y_START(_n_)    LUX1310_SCI_REG(0x11 + 4 * (_n_), 0x07ff)
+#define LUX1310_SCI_ROI_Y_END(_n_)      LUX1310_SCI_REG(0x12 + 4 * (_n_), 0x07ff)
+	"LUX1310_SCI_DRK_ROWS_ST_ADDR" :	LUX1310_SCI_REG(0x29, 0x07ff),
+	"LUX1310_SCI_NB_DRK_ROWS" :			LUX1310_SCI_REG(0x29, 0xf000),
+	"LUX1310_SCI_NEXT_ROW_ADDR_OVR" :	LUX1310_SCI_REG(0x2A, 0x07ff),
+	"LUX1310_SCI_NEXT_ROW_OVR_EN" :		LUX1310_SCI_REG(0x2A, 0x1000),
+	"LUX1310_SCI_INTER_ROI_SP" :		LUX1310_SCI_REG(0x2B, 0x0001),
+	"LUX1310_SCI_CLK_SEL_SCIP" :		LUX1310_SCI_REG(0x2C, 0x0003),
+	"LUX1310_SCI_CLK_SEL_FT" :			LUX1310_SCI_REG(0x2C, 0x000c),
+	"LUX1310_SCI_FT_TRIG_NB_PULSE" :	LUX1310_SCI_REG(0x31, 0xffff),
+	"LUX1310_SCI_FT_RST_NB_PULSE" :		LUX1310_SCI_REG(0x34, 0xffff),
+	"LUX1310_SCI_ABN2_EN" :				LUX1310_SCI_REG(0x35, 0x0010),
+	"LUX1310_SCI_RDOUT_DLY" :			LUX1310_SCI_REG(0x37, 0xffff),
+	"LUX1310_SCI_ADC_CAL_EN" :			LUX1310_SCI_REG(0x39, 0x0001),
+#define LUX1310_SCI_ADC_OS(_x_)         LUX1310_SCI_REG(0x3A + (_x_), 0x07ff)
+	# LUX1310_SCI_ADC_OS = []
+	# for i in range(16):
+	# 	LUX1310_SCI_ADC_OS.append(		LUX1310_SCI_REG(0x3A + i, 0x07ff))
+
+	"LUX1310_SCI_ADC_OS_SEQ_WIDTH" :	LUX1310_SCI_REG(0x4A, 0x03ff),
+	"LUX1310_SCI_PCLK_LINEVALID" :		LUX1310_SCI_REG(0x4B, 0x0fff),
+	"LUX1310_SCI_PCLK_VBLANK" :			LUX1310_SCI_REG(0x4C, 0x0fff),
+	"LUX1310_SCI_PCLK_HBLANK" :			LUX1310_SCI_REG(0x4D, 0x0fff),
+	"LUX1310_SCI_PCLK_OPTICAL_BLACK" :	LUX1310_SCI_REG(0x4E, 0x0fff),
+	"LUX1310_SCI_MONO" :				LUX1310_SCI_REG(0x4F, 0x0001),
+	"LUX1310_SCI_ROW2EN" :				LUX1310_SCI_REG(0x4F, 0x0010),
+	"LUX1310_SCI_POUTSEL" :				LUX1310_SCI_REG(0x50, 0x0003),
+	"LUX1310_SCI_INVERT_ANALOG" :		LUX1310_SCI_REG(0x50, 0x0010),
+	"LUX1310_SCI_GLOBAL_SHUTTER" :		LUX1310_SCI_REG(0x50, 0x0100),
+	"LUX1310_SCI_GAIN_SEL_SAMP" :		LUX1310_SCI_REG(0x51, 0x0fff),
+	"LUX1310_SCI_GAIN_SEL_FB" :			LUX1310_SCI_REG(0x52, 0x007f),
+	"LUX1310_SCI_GAIN_BIT" :			LUX1310_SCI_REG(0x53, 0x0007),
+	"LUX1310_SCI_COLBIN2" :				LUX1310_SCI_REG(0x55, 0x0001),
+	"LUX1310_SCI_TST_PAT" :				LUX1310_SCI_REG(0x56, 0x0003),
+	"LUX1310_SCI_CUST_PAT" :			LUX1310_SCI_REG(0x57, 0x0fff),
+	"LUX1310_SCI_MUX_MODE" :			LUX1310_SCI_REG(0x58, 0x0003),
+	"LUX1310_SCI_PWR_EN_SERIALIZER_B" :	LUX1310_SCI_REG(0x59, 0xffff),
+	"LUX1310_SCI_DAC_ILV" :				LUX1310_SCI_REG(0x5A, 0x0007),
+	"LUX1310_SCI_MSB_FIRST_DATA" :		LUX1310_SCI_REG(0x5A, 0x0008),
+	"LUX1310_SCI_PCLK_INV" :			LUX1310_SCI_REG(0x5A, 0x0010),
+	"LUX1310_SCI_TERMB_DATA" :			LUX1310_SCI_REG(0x5A, 0x0020),
+	"LUX1310_SCI_DCLK_INV" :			LUX1310_SCI_REG(0x5A, 0x0040),
+	"LUX1310_SCI_TERMB_CLK" :			LUX1310_SCI_REG(0x5A, 0x0080),
+	"LUX1310_SCI_TERMB_RXCLK" :			LUX1310_SCI_REG(0x5B, 0x1000),
+	"LUX1310_SCI_PWREN_DCLK_B" :		LUX1310_SCI_REG(0x60, 0x0001),
+	"LUX1310_SCI_PWREN_PCLK_B" :		LUX1310_SCI_REG(0x60, 0x0002),
+	"LUX1310_SCI_PWREN_BIAS_B" :		LUX1310_SCI_REG(0x60, 0x0004),
+	"LUX1310_SCI_PWREN_DRV_B" :			LUX1310_SCI_REG(0x60, 0x0008),
+	"LUX1310_SCI_PWREN_ADC_B" :			LUX1310_SCI_REG(0x60, 0x0010),
+	"LUX1310_SCI_SEL_VCM" :				LUX1310_SCI_REG(0x62, 0xffff), # added for immediate writes to all
+	"LUX1310_SCI_SEL_VCMI" :			LUX1310_SCI_REG(0x62, 0x000f),
+	"LUX1310_SCI_SEL_VCMO" :			LUX1310_SCI_REG(0x62, 0x00f0),
+	"LUX1310_SCI_SEL_VCMP" :			LUX1310_SCI_REG(0x62, 0x0f00),
+	"LUX1310_SCI_SEL_VCMN" :			LUX1310_SCI_REG(0x62, 0xf000),
+	"LUX1310_SCI_HIDY_EN" :				LUX1310_SCI_REG(0x67, 0x0001),
+	"LUX1310_SCI_HIDY_TRIG_NB_PULSE" :	LUX1310_SCI_REG(0x68, 0xffff),
+	"LUX1310_SCI_SEL_VDR1_WIDTH" :		LUX1310_SCI_REG(0x69, 0xffff),
+	"LUX1310_SCI_SEL_VDR2_WIDTH" :		LUX1310_SCI_REG(0x6A, 0xffff),
+	"LUX1310_SCI_SEL_VDR3_WIDTH" :		LUX1310_SCI_REG(0x6B, 0xffff),
+	"LUX1310_SCI_SER_SYNC" :			LUX1310_SCI_REG(0x7c, 0x0001),
+	"LUX1310_SCI_CLK_SYNC" :			LUX1310_SCI_REG(0x7d, 0x0001),
+	"LUX1310_SCI_SRESET_B" :			LUX1310_SCI_REG(0x7e, 0x0001),
+
+# Undocumented Registers 
+	"LUX1310_SCI_STATE_IDLE_CTRL0" :	LUX1310_SCI_REG(0x2d, 0xffff),
+	"LUX1310_SCI_STATE_IDLE_CTRL1" :	LUX1310_SCI_REG(0x2e, 0xffff),
+	"LUX1310_SCI_STATE_IDLE_CTRL2" :	LUX1310_SCI_REG(0x2f, 0xffff),
+	"LUX1310_SCI_ADC_CLOCK_CTRL" :		LUX1310_SCI_REG(0x5c, 0xffff),
+	"LUX1310_SCI_LINE_VALID_DLY" :		LUX1310_SCI_REG(0x71, 0xffff),
+	"LUX1310_SCI_INT_CLK_TIMING" :		LUX1310_SCI_REG(0x74, 0xffff),
+	"LUX1310_SCI_WAVETAB_SIZE" :		LUX1310_SCI_REG(0x7a, 0xffff),
+
+	"LUX1310_SCI_WAVETAB_WRITE" :		0x7f,
+	"LUX1310_SCI_REGISTER_COUNT" :		0x7f,
+
+
+
+}
+
 
 
 class SCIObject():
diff --git a/lux1310waves.py b/lux1310waves.py
new file mode 100644
index 0000000..780ac2a
--- /dev/null
+++ b/lux1310waves.py
@@ -0,0 +1,128 @@
+
+Lux1310Wave80Data = [
+	0x81, 0xFF, 0x27, 0xFA, 0x21, 0xA0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3,
+	0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE,
+	0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F,
+	0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3, 0x1E, 0x07, 0xFC,
+	0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F,
+	0xF2, 0xFF, 0xA3, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0,
+	0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7,
+	0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3,
+	0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE,
+	0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F,
+	0xFA, 0x11, 0xE0, 0x7F, 0xCB, 0xFE, 0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC,
+	0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F, 0xFA, 0x11, 0xE0, 0x7F, 0xCB, 0xFE, 0x84, 0x78, 0x1F,
+	0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F, 0xFA, 0x11, 0xE0,
+	0x7F, 0xCB, 0xFE, 0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47,
+	0x80, 0xFF, 0x2F, 0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE, 0x94, 0x78, 0x0F, 0xF0, 0xFF, 0xA5,
+	0x1E, 0x03, 0xFC, 0x3F, 0xE9, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x51, 0xE0, 0x3F, 0xC3, 0xFE,
+	0x94, 0x78, 0x0F, 0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F,
+	0xFB, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F, 0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC,
+	0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F,
+	0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x51, 0xE0,
+	0x3F, 0xC3, 0xFE, 0x94, 0x78, 0x0F, 0xF0, 0xFF, 0xA5, 0x1E, 0x03, 0xFC, 0x3F, 0xE9, 0x47,
+	0x80, 0xFF, 0x0F, 0xFA, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0x94, 0x78, 0x0F, 0xF0, 0xFF, 0xA5,
+	0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE,
+	0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F,
+	0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC,
+	0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F,
+	0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0,
+	0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC, 0x1F, 0xE8, 0x47,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+]
+
+Lux1310Wave39Data = [
+	0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3,
+	0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE,
+	0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F,
+	0xFA, 0x11, 0xE0, 0x7F, 0xCB, 0xFE, 0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC,
+	0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F, 0xFA, 0x11, 0xE0, 0x3F, 0xCB, 0xFE, 0x84, 0x78, 0x0F,
+	0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0,
+	0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F, 0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47,
+	0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F, 0xF0, 0xFF, 0xB5,
+	0x1E, 0x03, 0xFC, 0x3F, 0xE9, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x51, 0xE0, 0x3F, 0xC3, 0xFE,
+	0x94, 0x78, 0x0F, 0xF0, 0xFF, 0xA5, 0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F,
+	0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC,
+	0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F,
+	0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0,
+	0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0x7F, 0xA1, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
+	0x00
+]
+
+Lux1310Wave30Data = [
+	0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3,
+	0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE,
+	0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F,
+	0xFA, 0x11, 0xE0, 0x7F, 0xCB, 0xFE, 0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC,
+	0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F, 0xFA, 0x11, 0xE0, 0x3F, 0xCB, 0xFE, 0x84, 0x78, 0x0F,
+	0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0,
+	0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F, 0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47,
+	0x80, 0xFF, 0x0F, 0xFA, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0x94, 0x78, 0x0F, 0xF0, 0xFF, 0xA1,
+	0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE,
+	0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x0F,
+	0xFA, 0x11, 0xE0, 0x3F, 0xC1, 0xFE, 0x84, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+]
+
+Lux1310Wave25Data = [
+	0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3,
+	0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE,
+	0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F,
+	0xFA, 0x11, 0xE0, 0x7F, 0xCB, 0xFE, 0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x03, 0xFC,
+	0xBF, 0xE8, 0x47, 0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F,
+	0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0,
+	0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F, 0xF0, 0xFF, 0xA5, 0x1E, 0x03, 0xFC, 0x3F, 0xE9, 0x47,
+	0x80, 0xFF, 0x0F, 0xFA, 0x11, 0xE0, 0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1,
+	0x1E, 0x03, 0xFC, 0x3F, 0xE8, 0x47, 0x80, 0xFF, 0x07, 0xFA, 0x11, 0xC0, 0x00, 0x00, 0x00,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
+]
+
+Lux1310Wave20Data = [
+	0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE, 0x8C, 0x78, 0x1F, 0xF2, 0xFF, 0xA3,
+	0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0xC7, 0x81, 0xFF, 0x2F, 0xFA, 0x31, 0xE0, 0x7F, 0xCB, 0xFE,
+	0x84, 0x78, 0x1F, 0xF2, 0xFF, 0xA1, 0x1E, 0x07, 0xFC, 0xBF, 0xE8, 0x47, 0x81, 0xFF, 0x2F,
+	0xFA, 0x11, 0xE0, 0x3F, 0xCB, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC,
+	0x3F, 0xED, 0x47, 0x80, 0xFF, 0x0F, 0xFB, 0x51, 0xE0, 0x3F, 0xC3, 0xFE, 0xD4, 0x78, 0x0F,
+	0xF0, 0xFF, 0xB5, 0x1E, 0x03, 0xFC, 0x3F, 0xE9, 0x47, 0x80, 0xFF, 0x0F, 0xFA, 0x51, 0xE0,
+	0x3F, 0xC3, 0xFE, 0x84, 0x78, 0x0F, 0xF0, 0xFF, 0xA1, 0x1E, 0x03, 0xFC, 0x1F, 0xE8, 0x47,
+	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+	0x00, 0x00
+]
+
+
+Lux1310Wavetables = [
+	{
+		"table": Lux1310Wave80Data,
+		"read_delay": 80,
+		"start_delay": 25,
+		"len": len(Lux1310Wave80Data)
+	},
+	{
+		"table": Lux1310Wave39Data,
+		"read_delay": 39,
+		"start_delay": 30,
+		"len": len(Lux1310Wave39Data)
+	},
+	{
+		"table": Lux1310Wave30Data,
+		"read_delay": 30,
+		"start_delay": 29,
+		"len": len(Lux1310Wave30Data)
+	},
+	{
+		"table": Lux1310Wave25Data,
+		"read_delay": 25,
+		"start_delay": 27,
+		"len": len(Lux1310Wave25Data)
+	},
+	{
+		"table": Lux1310Wave20Data,
+		"read_delay": 20,
+		"start_delay": 25,
+		"len": len(Lux1310Wave20Data)
+	}
+]
+
+
+
+
diff --git a/memobj.py b/memobj.py
index a1d0ce8..a9d3ca0 100644
--- a/memobj.py
+++ b/memobj.py
@@ -1,11 +1,18 @@
+
 import time
+import pdb
+from termcolor import cprint
 
 from periphery import MMIO
+from periphery import GPIO
+
 #import spidev
 #from periphery import SPI
 from mmapregisters import *
 from spi import *
 from lux import *
+from ctypes import *
+
 
 
 def nicehex(n):
@@ -14,10 +21,87 @@ def nicehex4(n):
 	return "0x" + ("0000000" + hex(n)[2:])[-8:]
 
 
+
+
 class MemObject:
 	#print ("Created!")
+	FPGAc = 0  # how many FPGA writes
+
+	FPGAcol = "green"
+	FPGAcol_old = "red"
+
+	breakFPGA = False
+	# breakFPGA = True
+
 	fpga_mmio = MMIO(0x01000000, 0x3000)
+	RAM_mmio = MMIO(0x02000000, 0x1000000)    
+
+	ptr = fpga_mmio.pointer
+	print(f"ptr is {ptr}")
+	print(f"base is {fpga_mmio.base}")
+
+	FPGAlptr = cast(ptr, POINTER(c_ulong))
+	FPGAwptr = cast(ptr, POINTER(c_ushort))
+	FPGAbptr = cast(ptr, POINTER(c_ubyte))
+
+	# breakpoint()
+
+	FPGActypes = True
+	# FPGActypes = False
+
+	print ("Testing RAM R/W")
+	x = RAM_mmio.read8(0)
+	print (f" - reading {x}")
+	print (" - writing...")
+	RAM_mmio.write8(0, 123)
+	x = RAM_mmio.read8(0)
+	print (f" - reading {x}")
+
+	def CtypesTest(self):
+		# ptr = self.fpga_mmio.pointer
+		# print(f"ptr is {ptr}")
+		# print(f"base is {self.fpga_mmio.base}")
+
+		# lptr = cast(ptr, POINTER(c_ulong))
+		# wptr = cast(ptr, POINTER(c_ushort))
+		# bptr = cast(ptr, POINTER(c_ubyte))
+		
+		# lptr[2] = 0x0fc1
+		# bptr[0] = 5
+		# self.FPGAlptr[0x428//4] = 0x510
+		# self.FPGAlptr[0] = 0x123
+		print(f"\n0x0: 0x{self.FPGAlptr[0x0]:x}")
+
 
+		print("################\n32 bit:")
+		for i in range(0x0, 0x430//4):
+			print(f"  0x{4*i:x}: 0x{self.FPGAlptr[i]:x}")
+		print("16 bit:")
+		for i in range(20):
+			print(f"  0x{2*i:x}: 0x{self.FPGAwptr[i]:x}")
+		print("8 bit")
+		for i in range(40):
+			print(f"  0x{i:x}: 0x{self.FPGAbptr[i]:x}")
+
+		print(f"\n0x428: 0x{self.FPGAlptr[0x428//4]:x}")
+
+	def __init__(self):
+		pass
+		# breakpoint()
+	
+
+		# print ("Testing RAM R/W")
+		# x = self.RAM_mmio.read8(0)
+		# print (f" - reading {x}")
+		# print (" - writing...")
+		# self.mem.RAMWrite8(0, 123)
+		# x = self.RAM_mmio.read8(0)
+		# print (f" - reading {x}")
+
+	
+
+
+	
 	# don't use these ones
 	# def mm_write16(self, addr, data):
 	# 	self.fpga_mmio.write16(addr, data)
@@ -25,29 +109,179 @@ class MemObject:
 	# def mm_write32(self, addr, data):
 	# 	self.fpga_mmio.write32(addr, data)
 
-	# use these two functions to write to the (16 bit) FPGA address
+
+	#NEW: use Python dictionary to do FPGA writes
+
+	def FPGAWrite8(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		FPGAreg = FPGA_dict[addr]
+		cprint (f'   ({self.FPGAc})--- FPGAWrite8("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		if self.breakFPGA: breakpoint()
+		if self.FPGActypes:
+			self.FPGAbptr[FPGAreg] = data & 0xff
+		else:
+			self.fpga_mmio.write8(FPGAreg, data)
+
+	def FPGAWrite16(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		FPGAreg = FPGA_dict[addr]
+		cprint (f'   ({self.FPGAc})--- FPGAWrite16("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		if self.breakFPGA: breakpoint()
+		if self.FPGActypes:
+			self.FPGAwptr[FPGAreg // 2] = data & 0xffff
+		else:
+			self.fpga_mmio.write16(FPGAreg, data)
+
+	def FPGAWrite32(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		FPGAreg = FPGA_dict[addr]
+		cprint (f'   ({self.FPGAc})--- FPGAWrite32("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		if self.breakFPGA: breakpoint()
+		if self.FPGActypes:
+			self.FPGAlptr[FPGAreg // 4] = data
+		else:
+			self.fpga_mmio.write32(FPGAreg, data)
+
+
+#duplicate functions without debug, for SCI writes
+
+	def FPGAWrite8s(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		FPGAreg = FPGA_dict[addr] * 1
+		if self.FPGActypes:
+			self.FPGAbptr[FPGAreg] = data & 0xff
+		else:
+			self.fpga_mmio.write8(FPGAreg, data)
+
+	def FPGAWrite16s(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		FPGAreg = FPGA_dict[addr] * 1
+		if self.FPGActypes:
+			self.FPGAwptr[FPGAreg // 2] = data & 0xffff
+		else:
+			self.fpga_mmio.write16(FPGAreg, data)
+
+	def FPGAWrite32s(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		FPGAreg = FPGA_dict[addr] * 1
+		if self.FPGActypes:
+			self.FPGAlptr[FPGAreg // 4] = data 
+		else:
+			self.fpga_mmio.write32(FPGAreg, data)
+
+
+
+	def FPGARead16(self, addr):
+		FPGAreg = FPGA_dict[addr] * 1
+		if self.FPGActypes:
+			ret = self.FPGAwptr[FPGAreg // 2]
+		else:
+			ret = self.fpga_mmio.read16(FPGAreg)
+		return ret
+
+	def FPGARead32(self, addr):
+		FPGAreg = FPGA_dict[addr] * 1
+		if self.FPGActypes:
+			ret = self.FPGAlptr[FPGAreg // 4]
+		else:
+			ret = self.fpga_mmio.read32(FPGAreg)
+		return ret
+
+
+
+
+
+	#OLDER non-Pythonic: use these three functions to write to the (16 bit) FPGA address
+	def fpga_write8(self, addr, data):
+		self.FPGAc = self.FPGAc + 1
+		cprint (f"   ({self.FPGAc})--- fpga_write8(0x{1 * addr:x}, 0x{data:x})", self.FPGAcol_old)
+		if self.breakFPGA: breakpoint()
+		if self.FPGActypes:
+			self.FPGAbptr[addr] = data & 0xff
+		else:
+			self.fpga_mmio.write8(1 * addr, data)
+
 	def fpga_write16(self, addr, data):
-		self.fpga_mmio.write16(2 * addr, data)
+		self.FPGAc = self.FPGAc + 1
+		cprint (f"   ({self.FPGAc})--- fpga_write16(0x{1 * addr:x}, 0x{data:x})", self.FPGAcol_old)
+		if self.breakFPGA: breakpoint()
+		if self.FPGActypes:
+			self.FPGAwptr[addr // 2] = data & 0xffff
+		else:
+			self.fpga_mmio.write16(1 * addr, data)
 
 	def fpga_write32(self, addr, data):
-		self.fpga_mmio.write32(2 * addr, data)
+		self.FPGAc = self.FPGAc + 1
+		cprint (f"   ({self.FPGAc})--- fpga_write32(0x{1 * addr:x}, 0x{data:x})", self.FPGAcol_old)
+		if self.breakFPGA: breakpoint()
+		if self.FPGActypes:
+			self.FPGAlptr[addr // 4] = data 
+		else:
+			self.fpga_mmio.write32(1 * addr, data)
+
+
+#duplicate functions without debug, for SCI writes
+	def fpga_write8s(self, addr, data):
+		if self.FPGActypes:
+			self.FPGAbptr[addr] = data & 0xff
+		else:
+			self.fpga_mmio.write8(1 * addr, data)
+
+	def fpga_write16s(self, addr, data):
+		if self.FPGActypes:
+			self.FPGAwptr[addr // 2] = data & 0xffff
+		else:
+			self.fpga_mmio.write16(1 * addr, data)
+
+	def fpga_write32s(self, addr, data):
+		if self.FPGActypes:
+			self.FPGAlptr[addr // 4] = data
+		else:
+			self.fpga_mmio.write32(1 * addr, data)
+
+
+
 
 
 	def fpga_read32(self, addr):
-		return self.fpga_mmio.read32(2 * addr)
+		# print (f"   $$$ fpga_read32(0x{2 * addr:x})")
+		res = self.fpga_mmio.read32(1 * addr)
+		# print (f"    ->0x{res:x}")
+		return res
 
 	def fpga_read16(self, addr):
-		return self.fpga_mmio.read16(2 * addr)
+		# print (f"   $$$ fpga_read16(0x{2 * addr:x})")
+		res = self.fpga_mmio.read16(1 * addr)
+		# print (f"    ->0x{res:x}")
+		return res
+
+
+
+# RAM access
+
+
+
+
+	def RAMWrite8(self, addr, data):
+		self.RAM_mmio.write8(addr, data)
+
+	def RAMWrite16(self, addr, data):
+		self.RAM_mmio.write16(addr, data)
+
+	def RAMRead8(self, addr):
+		res = self.RAM_mmio.read8(addr)
+		return res
 
 
 
 	def mm_open(self):
 		# Open FPGA memory map
 		#rint("Open!")
-		self.fpga_write32(IMAGER_FRAME_PERIOD, 100*4000)  #Disable integration
-		self.fpga_write32(IMAGER_INT_TIME, 100*4100)
+		# self.fpga_write32(IMAGER_FRAME_PERIOD, 100*4000)  #Disable integration
+		# self.fpga_write32(IMAGER_INT_TIME, 100*4100)
 
 		#print (self.fpga_mmio.read32(IMAGER_INT_TIME_ADDR))
+		pass
 
 	def mm_print(self):
 		print ("FPGA registers")
@@ -64,6 +298,42 @@ class MemObject:
 		#print (nicehex(28), nicehex4(mm))
 
 
+	def GPIOWrite(self, pin_name, value):
+		gpio = self._GPIO_ports[pin_name]
+		gpio.write(bool(value))
+
+	def GPIORead(self, pin_name):
+		gpio = self._GPIO_ports[pin_name]
+		return gpio.read()
+
+
+	_board_chronos14_gpio = {
+	"lux1310-dac-cs" : (33, "out"),
+	"lux1310-color" :  (66, "in"),
+	"encoder-a" :      (20, "in"),
+	"encoder-b" :      (26, "in"),
+	"encoder-sw" :     (27, "in"),
+	"shutter-sw" :     (66, "in"),
+	"record-led.0" :   (41, "out"),
+	"record-led.1" :   (25, "out"),
+	"trigger-pin" :    (127, "in"),
+	"frame-irq" :      (51, "in"),
+	# FPGA Programming Pins 
+	# "ecp5-progn" :     (47, ""),
+	# "ecp5-init" :      (45, ""),
+	# "ecp5-done" :      (52, ""),
+	# "ecp5-cs" :        (58, ""),
+	# "ecp5-holdn" :     (58  ""),
+	}
+
+	_GPIO_ports = {}
+
+	for key, value in _board_chronos14_gpio.items():
+		gpioaccess = GPIO(value[0], value[1])
+		_GPIO_ports.update({key : gpioaccess})
+
+	#print(_GPIO_ports)
+
 
 
 
diff --git a/mmapregisters.py b/mmapregisters.py
index 2b69d62..c9e9a38 100644
--- a/mmapregisters.py
+++ b/mmapregisters.py
@@ -1,85 +1,383 @@
 
 
+FPGA_const_dict = {
+	"DISPLAY_CTL_ADDRESS_SEL_OFFSET" :		0,
+	"DISPLAY_CTL_SCALER_NN_OFFSET" :		1,
+	"DISPLAY_CTL_SYNC_INH_OFFSET" :			2,
+	"DISPLAY_CTL_READOUT_INH_OFFSET" :		3,
+	"DISPLAY_CTL_COLOR_MODE_OFFSET" :		4,
+	"DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET" :	5,
+	"DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET" :	6,
+	"DISPLAY_CTL_ZEBRA_EN_OFFSET" :			9,
+
+	"RAM_REG_BASE" :						0x2000,
+}
+
+FPGA_dict = {
+	"SENSOR_CONTROL" :				0x0,        #0,		#0x00
+	"SENSOR_CLK_PHASE" :			0x4,     #2,		#0x04
+	"SENSOR_SYNC_TOKEN" :			0x8,        #4,		#0x08
+	"SENSOR_DATA_CORRECT" :			0xc,      #6,		#0x0c
+	"SENSOR_FIFO_START_W_THRESH" :	0x10,     #8,		#0x10	
+	"SENSOR_FIFO_STOP_W_THRESH" :	0x14,      #10,		#0x14
+	"IMAGER_FRAME_PERIOD" :			0x1c,      #14,		#0x1c
+	"IMAGER_INT_TIME" :				0x20,     #16,		#0x20
+	"SENSOR_SCI_CONTROL" :			0x24,       #18,		#0x24
+	"SENSOR_SCI_ADDRESS" :			0x28,       #20,		#0x28
+	"SENSOR_SCI_DATALEN" :			0x2c,       #22,		#0x2c
+	"SENSOR_SCI_FIFO_WR_ADDR" :		0x30,       #24,		#0x30
+	"SENSOR_SCI_READ_DATA" :		0x34,      #26,		#0x34
+
+	#"SYSTEM_RESET" :				0x300,
+
+	"SEQ_CTL" :						0x40,       #32,
+	"SEQ_STATUS" :					0x44,     #34,
+	"SEQ_FRAME_SIZE" :				0x48,      #36,
+	"SEQ_REC_REGION_START" :		0x4c,      #38,
+	"SEQ_REC_REGION_END" :			0x50,       #40,
+	"SEQ_LIVE_ADDR_0" :				0x54,     #42,
+	"SEQ_LIVE_ADDR_1" :				0x58,     #44,
+	"SEQ_LIVE_ADDR_2" :				0x5c,     #46,
+	"SEQ_TRIG_DELAY" :				0x60,      #48,
+	"SEQ_MD_FIFO_READ" :			0x64,     #50,
+
+	"SENSOR_MAGIC_START_DELAY" :	0x68,       #52,
+	"SENSOR_LINE_PERIOD" :			0x6c,       #54,
+
+	"TRIG_ENABLE" :					0xa0,        #0x50,
+	"TRIG_INVERT" :					0xa4,        #0x52,
+	"TRIG_DEBOUNCE" :				0xa8,       #0x54,
+
+	"IO_OUT_LEVEL" :				0xac,        #0x56,
+	"IO_OUT_SOURCE" :				0xb0,       #0x58,
+	"IO_OUT_INVERT" :				0xb4,       #0x5A,
+	"IO_IN" :						0xb8,     #0x5C,
+	"EXT_SHUTTER_CTL" :				0xbc,     #0x5E,
+
+	"SEQ_PGM_MEM_START" :			0x100,        #0x80,
+	"GPMC_PAGE_OFFSET" :			0x200,     #0x100,
+
+	"DISPLAY_CTL" :					0x400,        #0x200,
+	"DISPLAY_FRAME_ADDRESS" :		0x404,     #0x202,
+	"DISPLAY_FPN_ADDRESS" :			0x408,      #0x204,
+	"DISPLAY_GAIN" :				0x40c,        #0x206,
+	"DISPLAY_H_PERIOD" :			0x410,     #0x208,
+	"DISPLAY_V_PERIOD" :			0x414,     #0x20A,
+	"DISPLAY_H_SYNC_LEN" :			0x418,       #0x20C,
+	"DISPLAY_V_SYNC_LEN" :			0x41c,       #0x20E,
+	"DISPLAY_H_BACK_PORCH" :		0x420,      #0x210,
+	"DISPLAY_V_BACK_PORCH" :		0x424,      #0x212,
+	"DISPLAY_H_RES" :				0x428,       #0x214,
+	"DISPLAY_V_RES" :				0x42c,       #0x216,
+	"DISPLAY_H_OUT_RES" :			0x430,        #0x218,
+	"DISPLAY_V_OUT_RES" :			0x440,        #0x220,
+	"DISPLAY_PEAKING_THRESH" :		0x444,        #0x222,
+	"DISPLAY_PIPELINE" :			0x448,     #0x224,
+	"DISPLAY_MANUAL_SYNC" :			0x450,      #0x228,
+
+	"CCM_11" :						0x4c0,        #0x260,
+	"CCM_12" :						0x4c4,        #0x262,
+	"CCM_13" :						0x4c8,        #0x264,
+	"CCM_21" :						0x4d0,        #0x268,
+	"CCM_22" :						0x4d4,        #0x26A,
+	"CCM_23" :						0x4d8,        #0x26C,
+	"CCM_31" :						0x4dc,        #0x26E,
+	"CCM_32" :						0x4e0,        #0x270,
+	"CCM_33" :						0x4e4,        #0x272,
+	"WL_DYNDLY_0" :					0x4e8,        #0x274,
+	"WL_DYNDLY_1" :					0x4ec,        #0x276,
+	"WL_DYNDLY_2" :					0x4f0,        #0x278,
+	"WL_DYNDLY_3" :					0x4f4,        #0x27A,
+
+	"MMU_CONFIG_ADDRESS" :			0x520,       #0x290,
+
+	"SYSTEM_RESET" :				0x600,        #0x300,
+	"FPGA_VERSION" :				0x604,        #0x302,
+	"FPGA_SUBVERSION" :				0x608,     #0x304,
+	"DCG_MEM_START" :				0x1000,       #0x800,
+
+
+
+                                      
+#Image sensor control register
+	"IMAGE_SENSOR_CONTROL" :				0,		# this used to have an _ADDR suffix,
+
+	"IMAGE_SENSOR_RESET_MASK" :				0x1,
+	"IMAGE_SENSOR_EVEN_TIMESLOT_MASK" :		0x2,
+
+#Phase control register
+
+ ### IMAGE_SENSOR_CLK_PHASE_ADDR		=	(SENSOR_CLK_PHASE * 2)
+	"IMAGE_SENSOR_CLK_PHASE_OFFSET" :		0,
+
+#Sync Token Register
+ ### IMAGE_SENSOR_SYNC_TOKEN_ADDR	=	(SENSOR_SYNC_TOKEN * 2)
+
+#Data Correct
+#Indicates data channels 11:0 and sync are correct
+# Format: data[11], data[10], ... data[0], sync
+
+ ### IMAGE_SENSOR_DATA_CORRECT_ADDR	=	(SENSOR_DATA_CORRECT * 2)
+
+#Image data write path FIFO thresholds for start and stop of data write to ram
+
+ ### IMAGE_SENSOR_FIFO_START_W_THRESH_ADDR	=	(SENSOR_FIFO_START_W_THRESH	* 2)
+ ### IMAGE_SENSOR_FIFO_STOP_W_THRESH_ADDR	=	(SENSOR_FIFO_STOP_W_THRESH * 2)
+
+ ### IMAGER_FRAME_PERIOD_ADDR			=	(IMAGER_FRAME_PERIOD * 2)
+ ### IMAGER_INT_TIME_ADDR				=	(IMAGER_INT_TIME * 2)
+
+ ### SENSOR_SCI_CONTROL_ADDR				=	(SENSOR_SCI_CONTROL * 2)
+	"SENSOR_SCI_CONTROL_RUN_MASK" :			0x1,						#Write 1 to start, reads 1 while busy, 0 when done,
+	"SENSOR_SCI_CONTROL_RW_MASK" :			0x2,						#Read == 1, Write == 0,
+	"SENSOR_SCI_CONTROL_FIFO_FULL_MASK" :	0x4,					#1 indicates FIFO is full,
+ ### SENSOR_SCI_ADDRESS_ADDR				=	(SENSOR_SCI_ADDRESS * 2)
+ ### SENSOR_SCI_DATALEN_ADDR				=	(SENSOR_SCI_DATALEN * 2)
+ ### SENSOR_SCI_FIFO_WR_ADDR_ADDR		=	(SENSOR_SCI_FIFO_WR_ADDR * 2)
+ ### SENSOR_SCI_READ_DATA_ADDR			=	(SENSOR_SCI_READ_DATA * 2)
+
+ ### SEQ_CTL_ADDR					=	(SEQ_CTL * 2)
+	"SEQ_CTL_SW_TRIG_MASK" :				0x1,
+	"SEQ_CTL_START_REC_MASK" :				0x2,
+	"SEQ_CTL_STOP_REC_MASK" :				0x4,
+	"SEQ_CTL_TRIG_DELAY_MODE_MASK" :		0x8,
+
+ ### SEQ_STATUS_ADDR					=	(SEQ_STATUS * 2)
+	"SEQ_STATUS_RECORDING_MASK" :			0x1,
+	"SEQ_STATUS_MD_FIFO_EMPTY_MASK" :		0x2,
+
+ ### SEQ_FRAME_SIZE_ADDR				=	(SEQ_FRAME_SIZE * 2)
+ ### SEQ_REC_REGION_START_ADDR		=	(SEQ_REC_REGION_START * 2)
+ ### SEQ_REC_REGION_END_ADDR			=	(SEQ_REC_REGION_END * 2)
+ ### SEQ_LIVE_ADDR_0_ADDR			=	(SEQ_LIVE_ADDR_0 * 2)
+ ### SEQ_LIVE_ADDR_1_ADDR			=	(SEQ_LIVE_ADDR_1 * 2)
+ ### SEQ_LIVE_ADDR_2_ADDR			=	(SEQ_LIVE_ADDR_2 * 2)
+ ### SEQ_TRIG_DELAY_ADDR				=	(SEQ_TRIG_DELAY * 2)
+ ### SEQ_MD_FIFO_READ_ADDR			=	(SEQ_MD_FIFO_READ * 2)
+ ### SEQ_PGM_MEM_START_ADDR			=	(SEQ_PGM_MEM_START * 2)
+
+ ### SENSOR_MAGIC_START_DELAY_ADDR	=	(SENSOR_MAGIC_START_DELAY * 2)
+ ### SENSOR_LINE_PERIOD_ADDR			=	(SENSOR_LINE_PERIOD * 2)
+
+ ### TRIG_ENABLE_ADDR				=	(TRIG_ENABLE * 2)
+ ### TRIG_INVERT_ADDR				=	(TRIG_INVERT * 2)
+ ### TRIG_DEBOUNCE_ADDR				=	(TRIG_DEBOUNCE * 2)
+
+ ### IO_OUT_LEVEL_ADDR				=	(IO_OUT_LEVEL * 2)		#1 outputs high if selected (invert does not affect this)
+ ### IO_OUT_SOURCE_ADDR				=	(IO_OUT_SOURCE * 2)		#1 selects int time, 0 selects IO_OUT_LEVEL
+ ### IO_OUT_INVERT_ADDR				=	(IO_OUT_INVERT * 2)		#1 inverts int time signal
+ ### IO_IN_ADDR						=	(IO_IN * 2)		#1 inverts int time signal
+
+ ### EXT_SHUTTER_CTL_ADDR			=	(EXT_SHUTTER_CTL * 2)
+	"EXT_SH_TRIGD_EXP_EN_MASK" :			0x1,
+	"EXT_SH_TRIGD_EXP_EN_OFFSET" :			0,
+	"EXT_SH_GATING_EN_MASK" :				0x2,
+	"EXT_SH_GATING_EN_OFFSET" :				1,
+	"EXT_SH_SRC_EN_MASK" :					0x1C,
+	"EXT_SH_SRC_EN_OFFSET" :				2,
+
+ ### GPMC_PAGE_OFFSET_ADDR			=	(GPMC_PAGE_OFFSET * 2)
+
+ ### DISPLAY_CTL_ADDR				=	(DISPLAY_CTL * 2)
+	"DISPLAY_CTL_ADDRESS_SEL_OFFSET" :		0,
+	"DISPLAY_CTL_SCALER_NN_OFFSET" :		1,
+	"DISPLAY_CTL_SYNC_INH_OFFSET" :			2,
+	"DISPLAY_CTL_READOUT_INH_OFFSET" :		3,
+	"DISPLAY_CTL_COLOR_MODE_OFFSET" :		4,
+	"DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET" :	5,
+	"DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET" :	6,
+	"DISPLAY_CTL_ZEBRA_EN_OFFSET" :			9,
+
+	"DISPLAY_CTL_ADDRESS_SEL_MASK" :		(1 << FPGA_const_dict["DISPLAY_CTL_ADDRESS_SEL_OFFSET"]),
+	"DISPLAY_CTL_SCALER_NN_MASK" :			(1 << FPGA_const_dict["DISPLAY_CTL_SCALER_NN_OFFSET"]),
+	"DISPLAY_CTL_SYNC_INH_MASK" :			(1 << FPGA_const_dict["DISPLAY_CTL_SYNC_INH_OFFSET"]),
+	"DISPLAY_CTL_READOUT_INH_MASK" :		(1 << FPGA_const_dict["DISPLAY_CTL_READOUT_INH_OFFSET"]),
+	"DISPLAY_CTL_COLOR_MODE_MASK" :			(1 << FPGA_const_dict["DISPLAY_CTL_COLOR_MODE_OFFSET"]),
+	"DISPLAY_CTL_FOCUS_PEAK_EN_MASK" :		(1 << FPGA_const_dict["DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET"]),
+	"DISPLAY_CTL_FOCUS_PEAK_COLOR_MASK" :	(7 << FPGA_const_dict["DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET"]),
+	"DISPLAY_CTL_ZEBRA_EN_MASK" :			(1 << FPGA_const_dict["DISPLAY_CTL_ZEBRA_EN_OFFSET"]),
+
+ ### DISPLAY_FRAME_ADDRESS_ADDR		=	(DISPLAY_FRAME_ADDRESS * 2)
+ ### DISPLAY_FPN_ADDRESS_ADDR		=	(DISPLAY_FPN_ADDRESS * 2)
+ ### DISPLAY_GAIN_ADDR				=	(DISPLAY_GAIN * 2)
+ ### DISPLAY_H_PERIOD_ADDR			=	(DISPLAY_H_PERIOD * 2)
+ ### DISPLAY_V_PERIOD_ADDR			=	(DISPLAY_V_PERIOD * 2)
+ ### DISPLAY_H_SYNC_LEN_ADDR			=	(DISPLAY_H_SYNC_LEN * 2)
+ ### DISPLAY_V_SYNC_LEN_ADDR			=	(DISPLAY_V_SYNC_LEN * 2)
+ ### DISPLAY_H_BACK_PORCH_ADDR		=	(DISPLAY_H_BACK_PORCH * 2)
+ ### DISPLAY_V_BACK_PORCH_ADDR		=	(DISPLAY_V_BACK_PORCH * 2)
+ ### DISPLAY_H_RES_ADDR				=	(DISPLAY_H_RES * 2)
+ ### DISPLAY_V_RES_ADDR				=	(DISPLAY_V_RES * 2)
+ ### DISPLAY_H_OUT_RES_ADDR			=	(DISPLAY_H_OUT_RES * 2)
+ ### DISPLAY_V_OUT_RES_ADDR			=	(DISPLAY_V_OUT_RES * 2)
+ ### DISPLAY_PEAKING_THRESH_ADDR		=	(DISPLAY_PEAKING_THRESH * 2)
+
+ ### DISPLAY_PIPELINE_ADDR           	=	(DISPLAY_PIPELINE * 2)
+	"DISPLAY_PIPELINE_BIPASS_FPN" :			(1 << 0),
+	"DISPLAY_PIPELINE_BIPASS_GAIN" :		(1 << 1),
+	"DISPLAY_PIPELINE_BIPASS_DEMOSIAC" :	(1 << 2),
+	"DISPLAY_PIPELINE_BIPASS_COLORMATRIX" :	(1 << 3),
+	"DISPLAY_PIPELINE_BIPASS_GAMMA_TABLE" :	(1 << 4),
+	"DISPLAY_PIPELINE_RAW_12BPP" :			(1 << 5),
+	"DISPLAY_PIPELINE_RAW_16BPP" :			(1 << 6),
+	"DISPLAY_PIPELINE_RAW_RIGHT_JUSTIFY" :	(1 << 7),
+	"DISPLAY_PIPELINE_RAW_TEST_PATTERN" :	(1 << 15),
+
+ ### DISPLAY_MANUAL_SYNC_ADDR        =	(DISPLAY_MANUAL_SYNC * 2)
+	"DISPLAY_MANUAL_SYNC_MASK" :			(1),
+
+ ### CCM_11_ADDR						=	(CCM_11 * 2)
+ ### CCM_12_ADDR						=	(CCM_12 * 2)
+ ### CCM_13_ADDR						=	(CCM_13 * 2)
+ ### CCM_21_ADDR						=	(CCM_21 * 2)
+ ### CCM_22_ADDR						=	(CCM_22 * 2)
+ ### CCM_23_ADDR						=	(CCM_23 * 2)
+ ### CCM_31_ADDR						=	(CCM_31 * 2)
+ ### CCM_32_ADDR						=	(CCM_32 * 2)
+ ### CCM_33_ADDR						=	(CCM_33 * 2)
+
+ ### WL_DYNDLY_0_ADDR				=	(WL_DYNDLY_0 * 2)
+ ### WL_DYNDLY_1_ADDR				=	(WL_DYNDLY_1 * 2)
+ ### WL_DYNDLY_2_ADDR				=	(WL_DYNDLY_2 * 2)
+ ### WL_DYNDLY_3_ADDR				=	(WL_DYNDLY_3 * 2)
+
+ ### MMU_CONFIG_ADDR                 =	(MMU_CONFIG_ADDRESS * 2)
+	"MMU_INVERT_CS" :			1,
+	"MMU_SWITCH_STUFFED" :		2,
+
+ ### SYSTEM_RESET_ADDR				=	(SYSTEM_RESET * 2)
+
+ ### FPGA_VERSION_ADDR				=	(FPGA_VERSION * 2)
+ ### FPGA_SUBVERSION_ADDR            =	(FPGA_SUBVERSION * 2)
+
+ ### DCG_MEM_START_ADDR				=	(DCG_MEM_START * 2)
+
+
+
+#========================================================================================================
+#                                   New format registers
+
+#---------------------------------- Wishbone RAM Access -----------------------------------------
+
+
+	
+	"RAM_REG_BLOCK" :			(FPGA_const_dict["RAM_REG_BASE"]),
+
+# identifier
+	"RAM_IDENTIFIER_REG" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x00),
+	"RAM_VERSION_REG" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x04),
+	"RAM_SUBVERSION_REG" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x08),
+
+# reset and control
+	"RAM_CONTROL" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x0C),
+	"RAM_STATUS" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x10),
+
+	"RAM_ADDRESS" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x20), # 32 bit ,
+	"RAM_BURST_LENGTH" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x24),
+
+# Read/write buffers
+	"RAM_BUFFER_START" :			(FPGA_const_dict["RAM_REG_BASE"] + 0x200), # 1024*16bit (64-ram page) ,
+	"RAM_BUFFER_END" :			(FPGA_const_dict["RAM_REG_BASE"] + 0xA00),
+
+
+
+	"RAM_IDENTIFIER" :			(0x0040),
+
+	"RAM_CONTROL_TRIGGER_READ" :			0x0001,
+	"RAM_CONTROL_TRIGGER_WRITE" :			0x0002,
+
+	"RAM_BURST_LENGTH_MAX" :			32,
+
+
+
+	}
+
+
+
+
+
+
+
 #Register definitions from control register verilog file (in 16 bit word addresses)
-SENSOR_CONTROL				=	0
-SENSOR_CLK_PHASE			=	2
-SENSOR_SYNC_TOKEN			=	4
-SENSOR_DATA_CORRECT			=	6
-SENSOR_FIFO_START_W_THRESH	=	8
-SENSOR_FIFO_STOP_W_THRESH	=	10
-IMAGER_FRAME_PERIOD			=	14
-IMAGER_INT_TIME				=	16
-SENSOR_SCI_CONTROL			=	18
-SENSOR_SCI_ADDRESS			=	20
-SENSOR_SCI_DATALEN			=	22
-SENSOR_SCI_FIFO_WR_ADDR		=	24
-SENSOR_SCI_READ_DATA		=	26
-
-SEQ_CTL						=	32
-SEQ_STATUS					=	34
-SEQ_FRAME_SIZE				=	36
-SEQ_REC_REGION_START		=	38
-SEQ_REC_REGION_END			=	40
-SEQ_LIVE_ADDR_0				=	42
-SEQ_LIVE_ADDR_1				=	44
-SEQ_LIVE_ADDR_2				=	46
-SEQ_TRIG_DELAY				=	48
-SEQ_MD_FIFO_READ			=	50
-
-SENSOR_MAGIC_START_DELAY	=	52
-SENSOR_LINE_PERIOD			=	54
-
-TRIG_ENABLE					=	0x50
-TRIG_INVERT					=	0x52
-TRIG_DEBOUNCE				=	0x54
-
-IO_OUT_LEVEL				=	0x56
-IO_OUT_SOURCE				=	0x58
-IO_OUT_INVERT				=	0x5A
-IO_IN						=	0x5C
-EXT_SHUTTER_CTL				=	0x5E
-
-SEQ_PGM_MEM_START			=	0x80
-GPMC_PAGE_OFFSET			=	0x100
-
-DISPLAY_CTL					=	0x200
-DISPLAY_FRAME_ADDRESS		=	0x202
-DISPLAY_FPN_ADDRESS			=	0x204
-DISPLAY_GAIN				=	0x206
-DISPLAY_H_PERIOD			=	0x208
-DISPLAY_V_PERIOD			=	0x20A
-DISPLAY_H_SYNC_LEN			=	0x20C
-DISPLAY_V_SYNC_LEN			=	0x20E
-DISPLAY_H_BACK_PORCH		=	0x210
-DISPLAY_V_BACK_PORCH		=	0x212
-DISPLAY_H_RES				=	0x214
-DISPLAY_V_RES				=	0x216
-DISPLAY_H_OUT_RES			=	0x218
-DISPLAY_V_OUT_RES			=	0x220
-DISPLAY_PEAKING_THRESH		=	0x222
-DISPLAY_PIPELINE            =	0x224
-DISPLAY_MANUAL_SYNC         =	0x228
-
-CCM_11						=	0x260
-CCM_12						=	0x262
-CCM_13						=	0x264
-CCM_21						=	0x268
-CCM_22						=	0x26A
-CCM_23						=	0x26C
-CCM_31						=	0x26E
-CCM_32						=	0x270
-CCM_33						=	0x272
-WL_DYNDLY_0					=	0x274
-WL_DYNDLY_1					=	0x276
-WL_DYNDLY_2					=	0x278
-WL_DYNDLY_3					=	0x27A
-
-MMU_CONFIG_ADDRESS          =	0x290
-
-SYSTEM_RESET				=	0x300
-FPGA_VERSION				=	0x302
-FPGA_SUBVERSION             =	0x304
-DCG_MEM_START				=	0x800
+SENSOR_CONTROL				=	0x0		#0x00
+SENSOR_CLK_PHASE			=	0x4		#0x04
+SENSOR_SYNC_TOKEN			=	0x8		#0x08
+SENSOR_DATA_CORRECT			=	0xc		#0x0c
+SENSOR_FIFO_START_W_THRESH	=	0x10		#0x10	
+SENSOR_FIFO_STOP_W_THRESH	=	0x14		#0x14
+IMAGER_FRAME_PERIOD			=	0x1c		#0x1c
+IMAGER_INT_TIME				=	0x20		#0x20
+SENSOR_SCI_CONTROL			=	0x24		#0x24
+SENSOR_SCI_ADDRESS			=	0x28		#0x28
+SENSOR_SCI_DATALEN			=	0x2c		#0x2c
+SENSOR_SCI_FIFO_WR_ADDR		=	0x30		#0x30
+SENSOR_SCI_READ_DATA		=	0x34		#0x34
+
+SEQ_CTL						=	0x40
+SEQ_STATUS					=	0x44
+SEQ_FRAME_SIZE				=	0x48
+SEQ_REC_REGION_START		=	0x4c
+SEQ_REC_REGION_END			=	0x50
+SEQ_LIVE_ADDR_0				=	0x54
+SEQ_LIVE_ADDR_1				=	0x58
+SEQ_LIVE_ADDR_2				=	0x5c
+SEQ_TRIG_DELAY				=	0x60
+SEQ_MD_FIFO_READ			=	0x64
+
+SENSOR_MAGIC_START_DELAY	=	0x68
+SENSOR_LINE_PERIOD			=	0x6c
+
+TRIG_ENABLE					=	0xa0
+TRIG_INVERT					=	0xa4
+TRIG_DEBOUNCE				=	0xa8
+
+IO_OUT_LEVEL				=	0xac
+IO_OUT_SOURCE				=	0xb0
+IO_OUT_INVERT				=	0xb4
+IO_IN						=	0xb8
+EXT_SHUTTER_CTL				=	0xbc
+
+SEQ_PGM_MEM_START			=	0x100
+GPMC_PAGE_OFFSET			=	0x200
+
+DISPLAY_CTL					=	0x400
+DISPLAY_FRAME_ADDRESS		=	0x404
+DISPLAY_FPN_ADDRESS			=	0x408
+DISPLAY_GAIN				=	0x40c
+DISPLAY_H_PERIOD			=	0x410
+DISPLAY_V_PERIOD			=	0x414
+DISPLAY_H_SYNC_LEN			=	0x418
+DISPLAY_V_SYNC_LEN			=	0x41c
+DISPLAY_H_BACK_PORCH		=	0x420
+DISPLAY_V_BACK_PORCH		=	0x424
+DISPLAY_H_RES				=	0x428
+DISPLAY_V_RES				=	0x42c
+DISPLAY_H_OUT_RES			=	0x430
+DISPLAY_V_OUT_RES			=	0x440
+DISPLAY_PEAKING_THRESH		=	0x444
+DISPLAY_PIPELINE            =	0x448
+DISPLAY_MANUAL_SYNC         =	0x450
+
+CCM_11						=	0x4c0
+CCM_12						=	0x4c4
+CCM_13						=	0x4c8
+CCM_21						=	0x4d0
+CCM_22						=	0x4d4
+CCM_23						=	0x4d8
+CCM_31						=	0x4dc
+CCM_32						=	0x4e0
+CCM_33						=	0x4e4
+WL_DYNDLY_0					=	0x4e8
+WL_DYNDLY_1					=	0x4ec
+WL_DYNDLY_2					=	0x4f0
+WL_DYNDLY_3					=	0x4f4
+
+MMU_CONFIG_ADDRESS          =	0x520
+
+SYSTEM_RESET				=	0x600
+FPGA_VERSION				=	0x604
+FPGA_SUBVERSION             =	0x608
+DCG_MEM_START				=	0x1000
 
 
 
diff --git a/nonobj/camobj.py b/nonobj/camobj.py
new file mode 100644
index 0000000..a1c45c2
--- /dev/null
+++ b/nonobj/camobj.py
@@ -0,0 +1,9 @@
+
+# Camera class
+from mem import fpga_mmio
+
+class CamObject:
+	test = 456
+	fpga = fpga_mmio
+
+
diff --git a/nonobj/crctest.py b/nonobj/crctest.py
new file mode 100644
index 0000000..e036c4d
--- /dev/null
+++ b/nonobj/crctest.py
@@ -0,0 +1,4 @@
+from crccheck.crc import Crc16
+
+print (hex(Crc16().calc((1,1))))
+
diff --git a/nonobj/live.py b/nonobj/live.py
new file mode 100644
index 0000000..391b71f
--- /dev/null
+++ b/nonobj/live.py
@@ -0,0 +1,41 @@
+
+
+from camobj import *
+
+print ("Live Video Testing")
+
+
+
+
+
+
+def cam_init(cam):
+
+	frame_words = 0
+	maxfps = 3
+
+
+
+
+
+
+# main part
+
+cam = CamObject()
+
+
+def nicehex(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+print ("LIVE FPGA registers")
+
+print (cam)
+print (cam.fpga)
+
+for i in range(0, 128, 4):
+	mm = cam.fpga.read32(i)
+	print (nicehex(i), " - ", nicehex4(mm))
+
+print ("LIVE!")
diff --git a/nonobj/lux.py b/nonobj/lux.py
new file mode 100644
index 0000000..474db94
--- /dev/null
+++ b/nonobj/lux.py
@@ -0,0 +1,73 @@
+import spi
+from luxh import *
+
+def setDACCS(flag):
+	pass	
+
+
+
+
+def writeDACVoltage(chan, voltage):
+	if chan == VDR3_VOLTAGE:
+		writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
+	elif chan == VABL_VOLTAGE:
+		writeDAC(voltage * VABL_SCALE, VABL_VOLTAGE)
+	elif chan == VDR1_VOLTAGE:
+		writeDAC(voltage * VDR1_SCALE, VDR1_VOLTAGE)
+	elif chan == VDR2_VOLTAGE:
+		writeDAC(voltage * VDR2_SCALE, VDR2_VOLTAGE)
+	elif chan == VRSTB_VOLTAGE:
+		writeDAC(voltage * VRSTB_SCALE, VRSTB_VOLTAGE)
+	elif chan == VRSTH_VOLTAGE:
+		writeDAC(voltage * VRSTH_SCALE, VRSTH_VOLTAGE)
+	elif chan == VRSTL_VOLTAGE:
+		writeDAC(voltage * VRSTL_SCALE, VRSTL_VOLTAGE)
+	elif chan == VRST_VOLTAGE:
+		writeDAC(voltage * VRST_SCALE, VRST_VOLTAGE)
+	else:
+		pass
+
+
+def writeDAC(data, channel):
+	writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
+
+
+def writeDACSPI(data):
+	spi.spi_transfer(data)
+
+
+def writeDACVoltages():
+	initDAC();
+	writeDACVoltage(VABL_VOLTAGE, 0.3);
+	writeDACVoltage(VRSTB_VOLTAGE, 2.7);
+	writeDACVoltage(VRST_VOLTAGE, 3.3);
+	writeDACVoltage(VRSTL_VOLTAGE, 0.7);
+	writeDACVoltage(VRSTH_VOLTAGE, 3.6);
+	writeDACVoltage(VDR1_VOLTAGE, 2.5);
+	writeDACVoltage(VDR2_VOLTAGE, 2);
+	writeDACVoltage(VDR3_VOLTAGE, 1.5);
+
+def initDAC():
+	spi.spi_open()
+	spi.spi_transfer(0x9000)
+
+
+'''
+def writeDACSPI(data)
+{
+	UInt8 tx[2];
+	UInt8 rx[sizeof(tx)];
+	int retval;
+
+	tx[1] = data >> 8;
+	tx[0] = data & 0xFF;
+
+	setDACCS(false);
+	//delayms(1);
+	retval = spi->Transfer((uint64_t) tx, (uint64_t) rx, sizeof(tx));
+	//delayms(1);
+	setDACCS(true);
+	return retval;
+}
+
+'''
diff --git a/nonobj/luxh.py b/nonobj/luxh.py
new file mode 100644
index 0000000..2f64020
--- /dev/null
+++ b/nonobj/luxh.py
@@ -0,0 +1,94 @@
+
+
+
+LUX1310_HRES_INCREMENT		= 16
+LUX1310_VRES_INCREMENT		= 2
+LUX1310_MAX_STRIDE			= 1280
+LUX1310_MAX_H_RES			= 1280
+LUX1310_MAX_V_RES			= 1024
+LUX1310_MIN_HRES			= 192		#Limited by video encoder minimum
+LUX1310_MIN_VRES			= 96
+LUX1310_MAGIC_ABN_DELAY		= 26
+
+TIMING_CLOCK_FREQ			= 100000000.0	#Hz
+LUX1310_SENSOR_CLOCK		= 90000000.0	#Hz
+
+LUX1310_ROT					= (9+4)		#Granularity clock cycles (63MHz periods by default)
+LUX1310_FOT					= 315		#Granularity clock cycles (63MHz periods by default)
+
+ROT_TIMER					= 9
+FOT_TIMER					= 315
+
+ROT							= (ROT_TIMER + 4)
+FOT							= (FOT_TIMER + 29)
+MAX_TS						= 54
+
+LUX1310_MIN_INT_TIME		= 0.000001	#1 us
+LUX1310_MAX_SLAVE_PERIOD 	= (0xFFFFFFFF)
+
+LUX1310_GAIN_CORRECTION_MIN = 0.999
+LUX1310_GAIN_CORRECTION_MAX = 1.2
+
+VDR3_VOLTAGE				= 0
+VABL_VOLTAGE				= 1
+VDR1_VOLTAGE				= 2
+VDR2_VOLTAGE				= 3
+VRSTB_VOLTAGE				= 4
+VRSTH_VOLTAGE				= 5
+VRSTL_VOLTAGE				= 6
+VRSTH_VOLTAGE				= 7
+
+
+LUX1310_DAC_FS				= 4095.0
+LUX1310_DAC_VREF			= 3.3
+VDR3_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VABL_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * (10.0 + 23.2) / 10.0)
+VDR1_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VDR2_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VRSTB_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VRSTH_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * 49.9 / (49.9 + 10.0))
+VRSTL_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * (10.0 + 23.2) / 10.0)
+VRST_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * 49.9 / (49.9 + 10.0))
+
+
+LUX1310_WAVETABLE_80		= 0
+LUX1310_WAVETABLE_39		= 1
+LUX1310_WAVETABLE_30		= 2
+LUX1310_WAVETABLE_25		= 3
+LUX1310_WAVETABLE_20		= 4
+LUX1310_WAVETABLE_AUTO		= 0x7FFFFFFF
+
+LUX1310_WAVETABLE_80_FN		= "WT80"
+LUX1310_WAVETABLE_39_FN		= "WT39"
+LUX1310_WAVETABLE_30_FN		= "WT30"
+LUX1310_WAVETABLE_25_FN		= "WT25"
+LUX1310_WAVETABLE_20_FN		= "WT20"
+
+LUX1310_GAIN_1				= 0
+LUX1310_GAIN_2				= 1
+LUX1310_GAIN_4				= 2
+LUX1310_GAIN_8				= 3
+LUX1310_GAIN_16				= 4
+
+#Strings to build FPN filenames
+LUX1310_GAIN_1_FN			= "G1"
+LUX1310_GAIN_2_FN			= "G2"
+LUX1310_GAIN_4_FN			= "G4"
+LUX1310_GAIN_8_FN			= "G8"
+LUX1310_GAIN_16_FN			= "G16"
+
+ABN_DELAY_WT80				= 25
+ABN_DELAY_WT39				= 30
+ABN_DELAY_WT30				= 29
+ABN_DELAY_WT25				= 27
+ABN_DELAY_WT20				= 25
+
+LUX1310_VERSION_1			= 1
+LUX1310_VERSION_2			= 2
+
+LUX1310_CLOCK_PERIOD		= (1.0/90000000.0)
+LUX1310_MIN_WAVETABLE_SIZE	= 20
+
+FILTER_COLOR_RED			= 0
+FILTER_COLOR_GREEN			= 1
+FILTER_COLOR_BLUE			= 2
diff --git a/nonobj/mem.py b/nonobj/mem.py
new file mode 100644
index 0000000..697d07f
--- /dev/null
+++ b/nonobj/mem.py
@@ -0,0 +1,79 @@
+import time
+
+from periphery import MMIO
+#import spidev
+#from periphery import SPI
+from mmapregisters import *
+from spi import *
+from lux import *
+
+# Open FPGA memory map
+fpga_mmio = MMIO(0x01000000, 0x3000)
+
+def mm_write16(addr, data):
+    fpga_mmio.write16(addr, data)
+
+def mm_write32(addr, data):
+    fpga_mmio.write32(addr, data)
+
+def nicehex(n):
+    return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+    return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+print ("FPGA registers")
+
+for i in range(0, 128, 4):
+    mm = fpga_mmio.read32(i)
+    print (nicehex(i), " - ", nicehex4(mm))
+
+for i in range(1024, 1024+126, 4):
+    mm = fpga_mmio.read32(i)
+    print (nicehex(i), " - ", nicehex4(mm))
+
+mm = fpga_mmio.read32(28)
+print (nicehex(28), nicehex4(mm))
+
+
+
+
+#print ((IMAGER_FRAME_PERIOD_ADDR))
+#print (fpga_mmio.read32(IMAGER_FRAME_PERIOD_ADDR))
+
+#fpga_mmio.write32(IMAGER_FRAME_PERIOD_ADDR, 100*4000)	#Disable integration
+mm_write32(IMAGER_FRAME_PERIOD_ADDR, 100*4000)	#Disable integration
+mm_write32(IMAGER_INT_TIME_ADDR, 100*4100)
+
+print (fpga_mmio.read32(IMAGER_INT_TIME_ADDR))
+
+
+# Set up DAC with SPI
+def luxSetReset(value):
+	readvalue = fpga_mmio.read16(IMAGE_SENSOR_CONTROL_ADDR)
+	if value:
+		fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue | IMAGE_SENSOR_RESET_MASK)
+	else:
+		fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue & ~IMAGE_SENSOR_RESET_MASK)
+
+	#gpmc->write16(IMAGE_SENSOR_CONTROL_ADDR, (gpmc->read16(IMAGE_SENSOR_CONTROL_ADDR) & ~IMAGE_SENSOR_RESET_MASK) | (reset ? IMAGE_SENSOR_RESET_MASK : 0));
+	
+
+initDAC()
+
+writeDACVoltages()
+
+
+# Now do rest of lux init
+time.sleep(0.01)
+
+
+luxSetReset(True)
+luxSetReset(False)
+
+time.sleep(0.001)
+
+
+
+
+
+fpga_mmio.close()
diff --git a/nonobj/mmapregisters.py b/nonobj/mmapregisters.py
new file mode 100644
index 0000000..56fca82
--- /dev/null
+++ b/nonobj/mmapregisters.py
@@ -0,0 +1,280 @@
+
+
+#Register definitions from control register verilog file (in 16 bit word addresses)
+SENSOR_CONTROL				=	0
+SENSOR_CLK_PHASE			=	2
+SENSOR_SYNC_TOKEN			=	4
+SENSOR_DATA_CORRECT			=	6
+SENSOR_FIFO_START_W_THRESH	=	8
+SENSOR_FIFO_STOP_W_THRESH	=	10
+IMAGER_FRAME_PERIOD			=	14
+IMAGER_INT_TIME				=	16
+SENSOR_SCI_CONTROL			=	18
+SENSOR_SCI_ADDRESS			=	20
+SENSOR_SCI_DATALEN			=	22
+SENSOR_SCI_FIFO_WR_ADDR		=	24
+SENSOR_SCI_READ_DATA		=	26
+
+SEQ_CTL						=	32
+SEQ_STATUS					=	34
+SEQ_FRAME_SIZE				=	36
+SEQ_REC_REGION_START		=	38
+SEQ_REC_REGION_END			=	40
+SEQ_LIVE_ADDR_0				=	42
+SEQ_LIVE_ADDR_1				=	44
+SEQ_LIVE_ADDR_2				=	46
+SEQ_TRIG_DELAY				=	48
+SEQ_MD_FIFO_READ			=	50
+
+SENSOR_MAGIC_START_DELAY	=	52
+SENSOR_LINE_PERIOD			=	54
+
+TRIG_ENABLE					=	0x50
+TRIG_INVERT					=	0x52
+TRIG_DEBOUNCE				=	0x54
+
+IO_OUT_LEVEL				=	0x56
+IO_OUT_SOURCE				=	0x58
+IO_OUT_INVERT				=	0x5A
+IO_IN						=	0x5C
+EXT_SHUTTER_CTL				=	0x5E
+
+SEQ_PGM_MEM_START			=	0x80
+GPMC_PAGE_OFFSET			=	0x100
+
+DISPLAY_CTL					=	0x200
+DISPLAY_FRAME_ADDRESS		=	0x202
+DISPLAY_FPN_ADDRESS			=	0x204
+DISPLAY_GAIN				=	0x206
+DISPLAY_H_PERIOD			=	0x208
+DISPLAY_V_PERIOD			=	0x20A
+DISPLAY_H_SYNC_LEN			=	0x20C
+DISPLAY_V_SYNC_LEN			=	0x20E
+DISPLAY_H_BACK_PORCH		=	0x210
+DISPLAY_V_BACK_PORCH		=	0x212
+DISPLAY_H_RES				=	0x214
+DISPLAY_V_RES				=	0x216
+DISPLAY_H_OUT_RES			=	0x218
+DISPLAY_V_OUT_RES			=	0x220
+DISPLAY_PEAKING_THRESH		=	0x222
+DISPLAY_PIPELINE            =	0x224
+DISPLAY_MANUAL_SYNC         =	0x228
+
+CCM_11						=	0x260
+CCM_12						=	0x262
+CCM_13						=	0x264
+CCM_21						=	0x268
+CCM_22						=	0x26A
+CCM_23						=	0x26C
+CCM_31						=	0x26E
+CCM_32						=	0x270
+CCM_33						=	0x272
+WL_DYNDLY_0					=	0x274
+WL_DYNDLY_1					=	0x276
+WL_DYNDLY_2					=	0x278
+WL_DYNDLY_3					=	0x27A
+
+MMU_CONFIG_ADDRESS          =	0x290
+
+SYSTEM_RESET				=	0x300
+FPGA_VERSION				=	0x302
+FPGA_SUBVERSION             =	0x304
+DCG_MEM_START				=	0x800
+
+
+
+                                      
+#Image sensor control register
+IMAGE_SENSOR_CONTROL_ADDR		=	0
+
+IMAGE_SENSOR_RESET_MASK			=	0x1
+IMAGE_SENSOR_EVEN_TIMESLOT_MASK =	0x2
+
+#Phase control register
+
+IMAGE_SENSOR_CLK_PHASE_ADDR		=	(SENSOR_CLK_PHASE * 2)
+IMAGE_SENSOR_CLK_PHASE_OFFSET	=	0
+
+#Sync Token Register
+IMAGE_SENSOR_SYNC_TOKEN_ADDR	=	(SENSOR_SYNC_TOKEN * 2)
+
+#Data Correct
+#Indicates data channels 11:0 and sync are correct
+# Format: data[11], data[10], ... data[0], sync
+
+IMAGE_SENSOR_DATA_CORRECT_ADDR	=	(SENSOR_DATA_CORRECT * 2)
+
+#Image data write path FIFO thresholds for start and stop of data write to ram
+
+IMAGE_SENSOR_FIFO_START_W_THRESH_ADDR	=	(SENSOR_FIFO_START_W_THRESH	* 2)
+IMAGE_SENSOR_FIFO_STOP_W_THRESH_ADDR	=	(SENSOR_FIFO_STOP_W_THRESH * 2)
+
+IMAGER_FRAME_PERIOD_ADDR			=	(IMAGER_FRAME_PERIOD * 2)
+IMAGER_INT_TIME_ADDR				=	(IMAGER_INT_TIME * 2)
+
+SENSOR_SCI_CONTROL_ADDR				=	(SENSOR_SCI_CONTROL * 2)
+SENSOR_SCI_CONTROL_RUN_MASK			=	0x1						#Write 1 to start, reads 1 while busy, 0 when done
+SENSOR_SCI_CONTROL_RW_MASK			=	0x2						#Read == 1, Write == 0
+SENSOR_SCI_CONTROL_FIFO_FULL_MASK	=	0x4					#1 indicates FIFO is full
+SENSOR_SCI_ADDRESS_ADDR				=	(SENSOR_SCI_ADDRESS * 2)
+SENSOR_SCI_DATALEN_ADDR				=	(SENSOR_SCI_DATALEN * 2)
+SENSOR_SCI_FIFO_WR_ADDR_ADDR		=	(SENSOR_SCI_FIFO_WR_ADDR * 2)
+SENSOR_SCI_READ_DATA_ADDR			=	(SENSOR_SCI_READ_DATA * 2)
+
+SEQ_CTL_ADDR					=	(SEQ_CTL * 2)
+SEQ_CTL_SW_TRIG_MASK			=	0x1
+SEQ_CTL_START_REC_MASK			=	0x2
+SEQ_CTL_STOP_REC_MASK			=	0x4
+SEQ_CTL_TRIG_DELAY_MODE_MASK	=	0x8
+
+SEQ_STATUS_ADDR					=	(SEQ_STATUS * 2)
+SEQ_STATUS_RECORDING_MASK		=	0x1
+SEQ_STATUS_MD_FIFO_EMPTY_MASK	=	0x2
+
+SEQ_FRAME_SIZE_ADDR				=	(SEQ_FRAME_SIZE * 2)
+SEQ_REC_REGION_START_ADDR		=	(SEQ_REC_REGION_START * 2)
+SEQ_REC_REGION_END_ADDR			=	(SEQ_REC_REGION_END * 2)
+SEQ_LIVE_ADDR_0_ADDR			=	(SEQ_LIVE_ADDR_0 * 2)
+SEQ_LIVE_ADDR_1_ADDR			=	(SEQ_LIVE_ADDR_1 * 2)
+SEQ_LIVE_ADDR_2_ADDR			=	(SEQ_LIVE_ADDR_2 * 2)
+SEQ_TRIG_DELAY_ADDR				=	(SEQ_TRIG_DELAY * 2)
+SEQ_MD_FIFO_READ_ADDR			=	(SEQ_MD_FIFO_READ * 2)
+SEQ_PGM_MEM_START_ADDR			=	(SEQ_PGM_MEM_START * 2)
+
+SENSOR_MAGIC_START_DELAY_ADDR	=	(SENSOR_MAGIC_START_DELAY * 2)
+SENSOR_LINE_PERIOD_ADDR			=	(SENSOR_LINE_PERIOD * 2)
+
+TRIG_ENABLE_ADDR				=	(TRIG_ENABLE * 2)
+TRIG_INVERT_ADDR				=	(TRIG_INVERT * 2)
+TRIG_DEBOUNCE_ADDR				=	(TRIG_DEBOUNCE * 2)
+
+IO_OUT_LEVEL_ADDR				=	(IO_OUT_LEVEL * 2)		#1 outputs high if selected (invert does not affect this)
+IO_OUT_SOURCE_ADDR				=	(IO_OUT_SOURCE * 2)		#1 selects int time, 0 selects IO_OUT_LEVEL
+IO_OUT_INVERT_ADDR				=	(IO_OUT_INVERT * 2)		#1 inverts int time signal
+IO_IN_ADDR						=	(IO_IN * 2)		#1 inverts int time signal
+
+EXT_SHUTTER_CTL_ADDR			=	(EXT_SHUTTER_CTL * 2)
+EXT_SH_TRIGD_EXP_EN_MASK		=	0x1
+EXT_SH_TRIGD_EXP_EN_OFFSET		=	0
+EXT_SH_GATING_EN_MASK			=	0x2
+EXT_SH_GATING_EN_OFFSET			=	1
+EXT_SH_SRC_EN_MASK				=	0x1C
+EXT_SH_SRC_EN_OFFSET			=	2
+
+GPMC_PAGE_OFFSET_ADDR			=	(GPMC_PAGE_OFFSET * 2)
+
+DISPLAY_CTL_ADDR				=	(DISPLAY_CTL * 2)
+DISPLAY_CTL_ADDRESS_SEL_OFFSET	=	0
+DISPLAY_CTL_SCALER_NN_OFFSET	=	1
+DISPLAY_CTL_SYNC_INH_OFFSET		=	2
+DISPLAY_CTL_READOUT_INH_OFFSET	=	3
+DISPLAY_CTL_COLOR_MODE_OFFSET	=	4
+DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET	=	5
+DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET	=	6
+DISPLAY_CTL_ZEBRA_EN_OFFSET		=	9
+
+DISPLAY_CTL_ADDRESS_SEL_MASK	=	(1 << DISPLAY_CTL_ADDRESS_SEL_OFFSET)
+DISPLAY_CTL_SCALER_NN_MASK		=	(1 << DISPLAY_CTL_SCALER_NN_OFFSET)
+DISPLAY_CTL_SYNC_INH_MASK		=	(1 << DISPLAY_CTL_SYNC_INH_OFFSET)
+DISPLAY_CTL_READOUT_INH_MASK	=	(1 << DISPLAY_CTL_READOUT_INH_OFFSET)
+DISPLAY_CTL_COLOR_MODE_MASK		=	(1 << DISPLAY_CTL_COLOR_MODE_OFFSET)
+DISPLAY_CTL_FOCUS_PEAK_EN_MASK	=	(1 << DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET)
+DISPLAY_CTL_FOCUS_PEAK_COLOR_MASK	=	(7 << DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET)
+DISPLAY_CTL_ZEBRA_EN_MASK		=	(1 << DISPLAY_CTL_ZEBRA_EN_OFFSET)
+
+DISPLAY_FRAME_ADDRESS_ADDR		=	(DISPLAY_FRAME_ADDRESS * 2)
+DISPLAY_FPN_ADDRESS_ADDR		=	(DISPLAY_FPN_ADDRESS * 2)
+DISPLAY_GAIN_ADDR				=	(DISPLAY_GAIN * 2)
+DISPLAY_H_PERIOD_ADDR			=	(DISPLAY_H_PERIOD * 2)
+DISPLAY_V_PERIOD_ADDR			=	(DISPLAY_V_PERIOD * 2)
+DISPLAY_H_SYNC_LEN_ADDR			=	(DISPLAY_H_SYNC_LEN * 2)
+DISPLAY_V_SYNC_LEN_ADDR			=	(DISPLAY_V_SYNC_LEN * 2)
+DISPLAY_H_BACK_PORCH_ADDR		=	(DISPLAY_H_BACK_PORCH * 2)
+DISPLAY_V_BACK_PORCH_ADDR		=	(DISPLAY_V_BACK_PORCH * 2)
+DISPLAY_H_RES_ADDR				=	(DISPLAY_H_RES * 2)
+DISPLAY_V_RES_ADDR				=	(DISPLAY_V_RES * 2)
+DISPLAY_H_OUT_RES_ADDR			=	(DISPLAY_H_OUT_RES * 2)
+DISPLAY_V_OUT_RES_ADDR			=	(DISPLAY_V_OUT_RES * 2)
+DISPLAY_PEAKING_THRESH_ADDR		=	(DISPLAY_PEAKING_THRESH * 2)
+
+DISPLAY_PIPELINE_ADDR           	=	(DISPLAY_PIPELINE * 2)
+DISPLAY_PIPELINE_BIPASS_FPN         =	(1 << 0)
+DISPLAY_PIPELINE_BIPASS_GAIN        =	(1 << 1)
+DISPLAY_PIPELINE_BIPASS_DEMOSIAC    =	(1 << 2)
+DISPLAY_PIPELINE_BIPASS_COLORMATRIX =	(1 << 3)
+DISPLAY_PIPELINE_BIPASS_GAMMA_TABLE =	(1 << 4)
+DISPLAY_PIPELINE_RAW_12BPP          =	(1 << 5)
+DISPLAY_PIPELINE_RAW_16BPP          =	(1 << 6)
+DISPLAY_PIPELINE_RAW_RIGHT_JUSTIFY  =	(1 << 7)
+DISPLAY_PIPELINE_RAW_TEST_PATTERN   =	(1 << 15)
+
+DISPLAY_MANUAL_SYNC_ADDR        =	(DISPLAY_MANUAL_SYNC * 2)
+DISPLAY_MANUAL_SYNC_MASK        =	(1)
+
+CCM_11_ADDR						=	(CCM_11 * 2)
+CCM_12_ADDR						=	(CCM_12 * 2)
+CCM_13_ADDR						=	(CCM_13 * 2)
+CCM_21_ADDR						=	(CCM_21 * 2)
+CCM_22_ADDR						=	(CCM_22 * 2)
+CCM_23_ADDR						=	(CCM_23 * 2)
+CCM_31_ADDR						=	(CCM_31 * 2)
+CCM_32_ADDR						=	(CCM_32 * 2)
+CCM_33_ADDR						=	(CCM_33 * 2)
+
+WL_DYNDLY_0_ADDR				=	(WL_DYNDLY_0 * 2)
+WL_DYNDLY_1_ADDR				=	(WL_DYNDLY_1 * 2)
+WL_DYNDLY_2_ADDR				=	(WL_DYNDLY_2 * 2)
+WL_DYNDLY_3_ADDR				=	(WL_DYNDLY_3 * 2)
+
+MMU_CONFIG_ADDR                 =	(MMU_CONFIG_ADDRESS * 2)
+MMU_INVERT_CS                   =	1
+MMU_SWITCH_STUFFED              =	2
+
+SYSTEM_RESET_ADDR				=	(SYSTEM_RESET * 2)
+
+FPGA_VERSION_ADDR				=	(FPGA_VERSION * 2)
+FPGA_SUBVERSION_ADDR            =	(FPGA_SUBVERSION * 2)
+
+DCG_MEM_START_ADDR				=	(DCG_MEM_START * 2)
+
+
+
+#========================================================================================================
+#                                   New format registers
+
+#---------------------------------- Wishbone RAM Access -----------------------------------------
+
+
+RAM_REG_BASE                =	(0x2000)
+RAM_REG_BLOCK               =	(RAM_REG_BASE)
+
+# identifier
+RAM_IDENTIFIER_REG          =	(RAM_REG_BLOCK + 0x00)
+RAM_VERSION_REG             =	(RAM_REG_BLOCK + 0x04)
+RAM_SUBVERSION_REG          =	(RAM_REG_BLOCK + 0x08)
+
+# reset and control
+RAM_CONTROL                 =	(RAM_REG_BLOCK + 0x0C)
+RAM_STATUS                  =	(RAM_REG_BLOCK + 0x10)
+
+RAM_ADDRESS                 =	(RAM_REG_BLOCK + 0x20) # 32 bit 
+RAM_BURST_LENGTH            =	(RAM_REG_BLOCK + 0x24)
+
+# Read/write buffers
+RAM_BUFFER_START            =	(RAM_REG_BLOCK + 0x200) # 1024*16bit (64-ram page) 
+RAM_BUFFER_END              =	(RAM_REG_BLOCK + 0xA00)
+
+
+
+RAM_IDENTIFIER =	(0x0040)
+
+RAM_CONTROL_TRIGGER_READ  =	0x0001
+RAM_CONTROL_TRIGGER_WRITE =	0x0002
+
+RAM_BURST_LENGTH_MAX =	32
+
+#------------------------------------------------------------------------------------------------
+
+
+
+
diff --git a/nonobj/spi.py b/nonobj/spi.py
new file mode 100644
index 0000000..bc575db
--- /dev/null
+++ b/nonobj/spi.py
@@ -0,0 +1,24 @@
+from periphery import SPI
+
+
+# Now set up sensor with SPI
+
+SPI_DEV = "/dev/spidev3.0"
+SPI_MODE = 1
+SPI_SPEED = 1000000
+SPI_BITORDER = "msb"
+SPI_BITS = 16
+
+spi = 0
+
+def spi_open():
+	global spi
+	spi = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+	print (spi)
+
+def spi_transfer(data):
+	global spi
+	spilist = [data >> 8, data & 255]
+	print (spilist)
+	spi.transfer(spilist)
+
diff --git a/python output dec 17.odt b/python output dec 17.odt
new file mode 100644
index 0000000000000000000000000000000000000000..161cd55b197af0637c8d8e186b76073dcafe502d
GIT binary patch
literal 26869
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

literal 0
HcmV?d00001

diff --git a/python output dec14 b/python output dec14
new file mode 100644
index 0000000..be99d12
--- /dev/null
+++ b/python output dec14	
@@ -0,0 +1,247 @@
+setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
+   (1)--- FPGAWrite16("DISPLAY_H_RES":0x428, 0x510)
+   (2)--- FPGAWrite16("DISPLAY_H_OUT_RES":0x430, 0x500)
+   (3)--- FPGAWrite16("DISPLAY_V_RES":0x42c, 0x400)
+   (4)--- FPGAWrite16("DISPLAY_V_OUT_RES":0x440, 0x400)
+   (5)--- FPGAWrite16("DISPLAY_H_PERIOD":0x410, 0x652)
+   (6)--- FPGAWrite16("DISPLAY_H_SYNC_LEN":0x418, 0x1)
+   (7)--- FPGAWrite16("DISPLAY_H_BACK_PORCH":0x420, 0x40)
+   (8)--- FPGAWrite16("DISPLAY_V_PERIOD":0x414, 0x405)
+   (9)--- FPGAWrite16("DISPLAY_V_SYNC_LEN":0x41c, 0x1)
+   (10)--- FPGAWrite16("DISPLAY_V_BACK_PORCH":0x424, 0x4)
+pixel rate is 1385431040
+maxfps is 1057.0
+h_max_res = 1280
+   (11)--- FPGAWrite16("SENSOR_FIFO_START_W_THRESH":0x10, 0x100)
+   (12)--- FPGAWrite16("SENSOR_FIFO_STOP_W_THRESH":0x14, 0x100)
+   (13)--- FPGAWrite32("SEQ_LIVE_ADDR_0":0x54, 0xf000)
+   (14)--- FPGAWrite32("SEQ_LIVE_ADDR_1":0x58, 0x1e000)
+   (15)--- FPGAWrite32("SEQ_LIVE_ADDR_2":0x5c, 0x2d000)
+   (16)--- FPGAWrite32("SEQ_REC_REGION_START":0x4c, 0x3c000)
+---------
+dctrl is 0x280
+AND mask is 0x8
+   (17)--- FPGAWrite32("DISPLAY_CTL":0x400, 0x2f0)
+   (18)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x61a80)
+   (19)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x5f370)
+> /root/lowpy/camobj.py(392)CamInit()
+-> self.sensor._writeDACVoltages()
+(Pdb) c
+> /root/lowpy/lux1310.py(813)_writeDACVoltages()
+-> print("_writeDACVoltages")
+(Pdb) c
+_writeDACVoltages
+_writeDACVoltage: 1, 0.3V
+   writeDAC 1: 0x4d3
+      writeDACSPI 0x14d3
+_writeDACVoltage: 4, 2.7V
+   writeDAC 4: 0xd16
+      writeDACSPI 0x4d16
+_writeDACVoltage: 7, 3.3V
+   writeDAC 7: 0xd53
+      writeDACSPI 0x7d53
+_writeDACVoltage: 6, 0.7V
+   writeDAC 6: 0xb43
+      writeDACSPI 0x6b43
+_writeDACVoltage: 5, 3.6V
+   writeDAC 5: 0xe89
+      writeDACSPI 0x5e89
+_writeDACVoltage: 2, 2.5V
+   writeDAC 2: 0xc1e
+      writeDACSPI 0x2c1e
+_writeDACVoltage: 3, 2V
+   writeDAC 3: 0x9b1
+      writeDACSPI 0x39b1
+_writeDACVoltage: 0, 1.5V
+   writeDAC 0: 0x745
+      writeDACSPI 0x745
+<lux1310.Lux1310Object object at 0x40127690>
+   (20)--- fpga_write16(0x0, 0x5)
+   (21)--- fpga_write16(0x0, 0x4)
+#############
+Lux has been reset
+#############
+  <1>$$$ Lux1310Write("LUX1310_SCI_SRESET_B", 0x0) - 0x7e, 0x0
+  <2>$$$ Lux1310Write("LUX1310_SCI_CUST_PAT", 0xfc0) - 0x57, 0xfc0
+  <3>$$$ Lux1310Write("LUX1310_SCI_TST_PAT", 0x2) - 0x56, 0x2
+  <4>$$$ Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xfc0) - 0x4c, 0xfc0
+  <5>$$$ Lux1310Write("LUX1310_SCI_DAC_ILV", 0xe1) - 0x5a, 0xe1
+   (22)--- fpga_write16(0x4, 0x0)
+   (23)--- fpga_write16(0x4, 0x1)
+   (24)--- fpga_write16(0x4, 0x0)
+
+lux1310_data_correct: 0
+  <6>$$$ Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xf00) - 0x4c, 0xf00
+  <7>$$$ Lux1310Write("LUX1310_SCI_TST_PAT", 0x2202) - 0x56, 0x2
+  <8>$$$ Lux1310Write("LUX1310_SCI_RDOUT_DLY", 0x50) - 0x37, 0x50
+  <9>$$$ Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", 0x50) - 0x7a, 0x50
+  <10>$$$ Lux1310Write("LUX1310_SCI_LINE_VALID_DLY", 0x7) - 0x71, 0x7
+  <11>$$$ Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL0", 0xe08e) - 0x2d, 0xe08e
+  <12>$$$ Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL1", 0xfc1f) - 0x2e, 0xfc1f
+  <13>$$$ Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL2", 0x3) - 0x2f, 0x3
+  <14>$$$ Lux1310Write("LUX1310_SCI_ADC_CLOCK_CTRL", 0x2202) - 0x5c, 0x2202
+  <15>$$$ Lux1310Write("LUX1310_SCI_SEL_VCM", 0x4b76) - 0x62, 0x4b76
+  <16>$$$ Lux1310Write("LUX1310_SCI_INT_CLK_TIMING", 0x41f) - 0x74, 0x41f
+LuxInit2
+configuring for LUX1310 silicon rev 2
+  <17>$$$ Lux1310Write("LUX1310_SCI_TERMB_RXCLK", 0x307f) - 0x5b, 0x307f
+< undocumented 0x7b Lux write >
+  <19>$$$ Lux1310Write(0x3a07ff, 0x0)
+  <20>$$$ Lux1310Write(0x3b07ff, 0x0)
+  <21>$$$ Lux1310Write(0x3c07ff, 0x0)
+  <22>$$$ Lux1310Write(0x3d07ff, 0x0)
+  <23>$$$ Lux1310Write(0x3e07ff, 0x0)
+  <24>$$$ Lux1310Write(0x3f07ff, 0x0)
+  <25>$$$ Lux1310Write(0x4007ff, 0x0)
+  <26>$$$ Lux1310Write(0x4107ff, 0x0)
+  <27>$$$ Lux1310Write(0x4207ff, 0x0)
+  <28>$$$ Lux1310Write(0x4307ff, 0x0)
+  <29>$$$ Lux1310Write(0x4407ff, 0x0)
+  <30>$$$ Lux1310Write(0x4507ff, 0x0)
+  <31>$$$ Lux1310Write(0x4607ff, 0x0)
+  <32>$$$ Lux1310Write(0x4707ff, 0x0)
+  <33>$$$ Lux1310Write(0x4807ff, 0x0)
+  <34>$$$ Lux1310Write(0x4907ff, 0x0)
+  <35>$$$ Lux1310Write("LUX1310_SCI_ADC_CAL_EN", 0x1) - 0x39, 0x1
+  <36>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", 0x7f) - 0x51, 0x7f
+  <37>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_FB", 0x7f) - 0x52, 0x7f
+  <38>$$$ Lux1310Write("LUX1310_SCI_GAIN_BIT", 0x3) - 0x53, 0x3
+$$$ Lux1310SCIWriteBuf to 0x7f: 427 entries
+  <39>$$$ Lux1310Write("LUX1310_SCI_TIMING_EN", 0x1) - 0x1, 0x1
+   (25)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x61a80)
+   (26)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x5f370)
+getMinFramePeriod: 0.0009457444444444445
+Requested period 0.00094575
+getMinFramePeriod: 0.0009457444444444445
+   (27)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x1716f)
+   (28)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x16f8e)
+done LuxInit2
+TODO: don't do fake IO
+   (29)--- fpga_write16(0xa0, 0x1)
+   (30)--- fpga_write16(0xa4, 0x1)
+   (31)--- fpga_write16(0xa8, 0x0)
+   (32)--- fpga_write32(0x60, 0x0)
+   (33)--- fpga_write16(0xb4, 0x0)
+   (34)--- fpga_write16(0xb0, 0x0)
+   (35)--- fpga_write16(0xac, 0x2)
+   (36)--- fpga_write16(0xbc, 0x0)
+   (37)--- fpga_write16(0xbc, 0x0)
+   (38)--- fpga_write16(0xbc, 0x0)
+   (39)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x0)
+### Lux1310SetResolutions
+ImageGeometryData(hres=1280, vres=1024, hoffset=0, voffset=0)
+0
+80
+  <40>$$$ Lux1310Write("LUX1310_SCI_X_START", 0x20) - 0x5, 0x20
+  <41>$$$ Lux1310Write("LUX1310_SCI_X_END", 0x51f) - 0x6, 0x51f
+  <42>$$$ Lux1310Write("LUX1310_SCI_Y_START", 0x0) - 0x7, 0x0
+  <43>$$$ Lux1310Write("LUX1310_SCI_Y_END", 0x3ff) - 0x8, 0x3ff
+   (40)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x1716f)
+> /root/lowpy/lux1310.py(504)Lux1310SetGain()
+-> if NODAC:
+(Pdb) c
+Lux1310SetGain: 0
+  <44>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", 0x7f) - 0x51, 0x7f
+  <45>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_FB", 0x7f) - 0x52, 0x7f
+  <46>$$$ Lux1310Write("LUX1310_SCI_GAIN_BIT", 0x3) - 0x53, 0x3
+  <47>$$$ Lux1310Write("LUX1310_SCI_TIMING_EN", 0x8000) - 0x1, 0x0
+  <48>$$$ Lux1310Write("LUX1310_SCI_RDOUT_DLY", 0x50) - 0x37, 0x50
+  <49>$$$ Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", 0x50) - 0x7a, 0x50
+$$$ Lux1310SCIWriteBuf to 0x7f: 427 entries
+  <50>$$$ Lux1310Write("LUX1310_SCI_TIMING_EN", 0x1) - 0x1, 0x1
+   (41)--- FPGAWrite16("SENSOR_MAGIC_START_DELAY":0x68, 0x50)
+Wavetable size set to 80
+Resetting cal gain to 1.0
+> /root/lowpy/camobj.py(435)CamInit()
+-> self.FakeInit()
+(Pdb) c
+TODO: don't do fake init
+--- faking 16 bit (0x6c, (0x52)
+   (42)--- fpga_write16(0x6c, 0x52)
+=== faking 32 bit (0x20, (0x12e5a)
+   (43)--- fpga_write32(0x20, 0x12e5a)
+--- faking 16 bit (0x48, (0xf000)
+   (44)--- fpga_write16(0x48, 0xf000)
+--- faking 16 bit (0x428, (0x500)
+   (45)--- fpga_write16(0x428, 0x500)
+--- faking 16 bit (0x430, (0x500)
+   (46)--- fpga_write16(0x430, 0x500)
+--- faking 16 bit (0x42c, (0x400)
+   (47)--- fpga_write16(0x42c, 0x400)
+--- faking 16 bit (0x440, (0x400)
+   (48)--- fpga_write16(0x440, 0x400)
+--- faking 16 bit (0x410, (0x652)
+   (49)--- fpga_write16(0x410, 0x652)
+--- faking 16 bit (0x418, (0x1)
+   (50)--- fpga_write16(0x418, 0x1)
+--- faking 16 bit (0x420, (0x40)
+   (51)--- fpga_write16(0x420, 0x40)
+--- faking 16 bit (0x414, (0x405)
+   (52)--- fpga_write16(0x414, 0x405)
+--- faking 16 bit (0x41c, (0x1)
+   (53)--- fpga_write16(0x41c, 0x1)
+--- faking 16 bit (0x424, (0x4)
+   (54)--- fpga_write16(0x424, 0x4)
+=== faking 32 bit (0x60, (0x0)
+   (55)--- fpga_write32(0x60, 0x0)
+--- faking 16 bit (0xbc, (0x0)
+   (56)--- fpga_write16(0xbc, 0x0)
+=== faking 32 bit (0x20, (0x78)
+   (57)--- fpga_write32(0x20, 0x78)
+=== faking 32 bit (0x50, (0x1fffe000)
+   (58)--- fpga_write32(0x50, 0x1fffe000)
+=== faking 32 bit (0x104, (0x0)
+   (59)--- fpga_write32(0x104, 0x0)
+=== faking 32 bit (0x100, (0x200c)
+   (60)--- fpga_write32(0x100, 0x200c)
+--- faking 16 bit (0x48, (0xf000)
+   (61)--- fpga_write16(0x48, 0xf000)
+=== faking 32 bit (0x40, (0x2)
+   (62)--- fpga_write32(0x40, 0x2)
+=== faking 32 bit (0x40, (0x0)
+   (63)--- fpga_write32(0x40, 0x0)
+--- faking 16 bit (0xbc, (0x0)
+   (64)--- fpga_write16(0xbc, 0x0)
+=== faking 32 bit (0x20, (0x12e5a)
+   (65)--- fpga_write32(0x20, 0x12e5a)
+=== faking 32 bit (0x20, (0x0)
+   (66)--- fpga_write32(0x20, 0x0)
+=== faking 32 bit (0x20, (0x12e5a)
+   (67)--- fpga_write32(0x20, 0x12e5a)
+--- faking 16 bit (0x4f0, (0x10e5)
+   (68)--- fpga_write16(0x4f0, 0x10e5)
+--- faking 16 bit (0x4f4, (0x10e5)
+   (69)--- fpga_write16(0x4f4, 0x10e5)
+--- faking 16 bit (0x4f8, (0x10e5)
+   (70)--- fpga_write16(0x4f8, 0x10e5)
+--- faking 16 bit (0x4c0, (0x1ea2)
+   (71)--- fpga_write16(0x4c0, 0x1ea2)
+--- faking 16 bit (0x4c4, (0xf6c6)
+   (72)--- fpga_write16(0x4c4, 0xf6c6)
+--- faking 16 bit (0x4c8, (0xfc41)
+   (73)--- fpga_write16(0x4c8, 0xfc41)
+--- faking 16 bit (0x4d0, (0xfb1d)
+   (74)--- fpga_write16(0x4d0, 0xfb1d)
+--- faking 16 bit (0x4d4, (0x163b)
+   (75)--- fpga_write16(0x4d4, 0x163b)
+--- faking 16 bit (0x4d8, (0xfe74)
+   (76)--- fpga_write16(0x4d8, 0xfe74)
+--- faking 16 bit (0x4dc, (0x209)
+   (77)--- fpga_write16(0x4dc, 0x209)
+--- faking 16 bit (0x4e0, (0xf0c1)
+   (78)--- fpga_write16(0x4e0, 0xf0c1)
+--- faking 16 bit (0x4e4, (0x1a63)
+   (79)--- fpga_write16(0x4e4, 0x1a63)
+--- faking 16 bit (0x4f0, (0x16ce)
+   (80)--- fpga_write16(0x4f0, 0x16ce)
+--- faking 16 bit (0x4f4, (0x10e5)
+   (81)--- fpga_write16(0x4f4, 0x10e5)
+--- faking 16 bit (0x4f8, (0x1ac3)
+   (82)--- fpga_write16(0x4f8, 0x1ac3)
+=== faking 32 bit (0x400, (0x280)
+   (83)--- fpga_write32(0x400, 0x280)
+=== faking 32 bit (0x444, (0x19)
+   (84)--- fpga_write32(0x444, 0x19)
+=== faking 32 bit (0x20, (0x12c31)
+   (85)--- fpga_write32(0x20, 0x12c31)
+LIVE FPGA registers
diff --git a/python output with fake.odt b/python output with fake.odt
new file mode 100644
index 0000000000000000000000000000000000000000..636a130b07f0e65a72de22d980559019b78a5a1e
GIT binary patch
literal 26895
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
I76Rgb0K5~ttN;K2

literal 0
HcmV?d00001

diff --git a/red writes camApp.odt b/red writes camApp.odt
new file mode 100644
index 0000000000000000000000000000000000000000..cb7e801d530063ceecf3b8d8da2ddabe7d88911e
GIT binary patch
literal 17204
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
W$w9sU{Wa9LKgT!!Q!DuU-Twy@>1eM2

literal 0
HcmV?d00001

diff --git a/root/camobj.py b/root/camobj.py
new file mode 100644
index 0000000..0d919ec
--- /dev/null
+++ b/root/camobj.py
@@ -0,0 +1,65 @@
+
+# Camera class
+#from mem import fpga_mmio
+
+from memobj import MemObject
+from sensorobj import SensorObject
+from lux1310 import Lux1310Object
+
+
+class CamObject:
+	#print("CamObject created")
+	# mem = MemObject()
+
+
+	#print ("begin")
+	mem = MemObject()
+	#sensor = SensorObject(mem)
+	sensor = Lux1310Object(mem)
+	
+
+
+	def setLiveTiming(self, geometry, hOutRes, vOutRes, maxFPS):
+
+		pxClock = 100000000
+		hSync = 50
+		hPorch = 166
+		vSync = 3
+		vPorch = 38
+
+		hPeriod = hOutRes + hSync + hPorch + hSync
+
+		# Calculate minimum hPeriod to fit within the max vertical
+		# resolution and make sure hPeriod is equal to or larger
+	 
+		minHPeriod = (pxClock / ((sensor.v_max_res + vPorch + vSync + vSync) * maxFps)) + 1; # the +1 is just to round up
+		if hPeriod < minHPeriod: 
+			hPeriod = minHPeriod
+
+		# calculate vPeriod and make sure it's large enough for the frame
+		vPeriod = pxClock / (hPeriod * maxFps)
+		if vPeriod < (vOutRes + vSync + vPorch + vSync):
+			vPeriod = vOutRes + vSync + vPorch + vSync
+	
+
+
+
+# minHPeriod;
+# hPeriod;
+# vPeriod;
+# fps;
+
+
+# def cam_init(cam):
+
+# 	frame_words = 0
+# 	maxfps = 3
+
+
+
+
+#print ("cam begin")
+
+#camobj = CamObject()
+
+#camobj.mem.mm_print()
diff --git a/root/live.py b/root/live.py
new file mode 100644
index 0000000..827ac5d
--- /dev/null
+++ b/root/live.py
@@ -0,0 +1,37 @@
+
+
+from camobj import CamObject
+
+print ("Live Video Testing")
+
+
+
+
+
+
+
+
+# main part
+
+cam = CamObject()
+
+
+def nicehex(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+print ("LIVE FPGA registers")
+
+#print (cam)
+
+for i in range(0, 16, 4):
+	mm = cam.mem.fpga_mmio.read32(i)
+	print (nicehex(i), " - ", nicehex4(mm))
+
+print ("LIVE!")
+
+print (cam.sensor.ImageGeometry.hres)
+print (cam.sensor.numfunc())
+
+
diff --git a/root/lux.py b/root/lux.py
new file mode 100644
index 0000000..474db94
--- /dev/null
+++ b/root/lux.py
@@ -0,0 +1,73 @@
+import spi
+from luxh import *
+
+def setDACCS(flag):
+	pass	
+
+
+
+
+def writeDACVoltage(chan, voltage):
+	if chan == VDR3_VOLTAGE:
+		writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
+	elif chan == VABL_VOLTAGE:
+		writeDAC(voltage * VABL_SCALE, VABL_VOLTAGE)
+	elif chan == VDR1_VOLTAGE:
+		writeDAC(voltage * VDR1_SCALE, VDR1_VOLTAGE)
+	elif chan == VDR2_VOLTAGE:
+		writeDAC(voltage * VDR2_SCALE, VDR2_VOLTAGE)
+	elif chan == VRSTB_VOLTAGE:
+		writeDAC(voltage * VRSTB_SCALE, VRSTB_VOLTAGE)
+	elif chan == VRSTH_VOLTAGE:
+		writeDAC(voltage * VRSTH_SCALE, VRSTH_VOLTAGE)
+	elif chan == VRSTL_VOLTAGE:
+		writeDAC(voltage * VRSTL_SCALE, VRSTL_VOLTAGE)
+	elif chan == VRST_VOLTAGE:
+		writeDAC(voltage * VRST_SCALE, VRST_VOLTAGE)
+	else:
+		pass
+
+
+def writeDAC(data, channel):
+	writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
+
+
+def writeDACSPI(data):
+	spi.spi_transfer(data)
+
+
+def writeDACVoltages():
+	initDAC();
+	writeDACVoltage(VABL_VOLTAGE, 0.3);
+	writeDACVoltage(VRSTB_VOLTAGE, 2.7);
+	writeDACVoltage(VRST_VOLTAGE, 3.3);
+	writeDACVoltage(VRSTL_VOLTAGE, 0.7);
+	writeDACVoltage(VRSTH_VOLTAGE, 3.6);
+	writeDACVoltage(VDR1_VOLTAGE, 2.5);
+	writeDACVoltage(VDR2_VOLTAGE, 2);
+	writeDACVoltage(VDR3_VOLTAGE, 1.5);
+
+def initDAC():
+	spi.spi_open()
+	spi.spi_transfer(0x9000)
+
+
+'''
+def writeDACSPI(data)
+{
+	UInt8 tx[2];
+	UInt8 rx[sizeof(tx)];
+	int retval;
+
+	tx[1] = data >> 8;
+	tx[0] = data & 0xFF;
+
+	setDACCS(false);
+	//delayms(1);
+	retval = spi->Transfer((uint64_t) tx, (uint64_t) rx, sizeof(tx));
+	//delayms(1);
+	setDACCS(true);
+	return retval;
+}
+
+'''
diff --git a/root/lux1310.py b/root/lux1310.py
new file mode 100644
index 0000000..bfb75ab
--- /dev/null
+++ b/root/lux1310.py
@@ -0,0 +1,129 @@
+
+from sensorobj import SensorObject
+import spi
+from lux1310h import *
+import time
+
+class Lux1310Object(SensorObject):
+
+	def lux1310num(self):
+		return 77
+
+#	lux1310num()
+
+
+	def __init__(self, mem):
+		self.mem = mem
+		self.lux1310num()
+		self.initlux1310()		
+
+
+	#numfunc = lux1310num
+
+
+	def setDACCS(self, flag):
+		pass	
+
+
+
+
+	def writeDACVoltage(self, chan, voltage):
+		if chan == VDR3_VOLTAGE:
+			self.writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
+		elif chan == VABL_VOLTAGE:
+			self.writeDAC(voltage * VABL_SCALE, VABL_VOLTAGE)
+		elif chan == VDR1_VOLTAGE:
+			self.writeDAC(voltage * VDR1_SCALE, VDR1_VOLTAGE)
+		elif chan == VDR2_VOLTAGE:
+			self.writeDAC(voltage * VDR2_SCALE, VDR2_VOLTAGE)
+		elif chan == VRSTB_VOLTAGE:
+			self.writeDAC(voltage * VRSTB_SCALE, VRSTB_VOLTAGE)
+		elif chan == VRSTH_VOLTAGE:
+			self.writeDAC(voltage * VRSTH_SCALE, VRSTH_VOLTAGE)
+		elif chan == VRSTL_VOLTAGE:
+			self.writeDAC(voltage * VRSTL_SCALE, VRSTL_VOLTAGE)
+		elif chan == VRST_VOLTAGE:
+			self.writeDAC(voltage * VRST_SCALE, VRST_VOLTAGE)
+		else:
+			pass
+
+
+	def writeDAC(self, data, channel):
+		self.writeDACSPI(((int(channel) & 0x7) << 12) | (int(data) & 0x0FFF))
+
+
+	def writeDACSPI(self, data):
+		spi.spi_transfer(data)
+
+
+	def initDAC(self):
+		spi.spi_open()
+		spi.spi_transfer(0x9000)
+
+	def writeDACVoltages(self):
+		self.initDAC();
+		self.writeDACVoltage(VABL_VOLTAGE, 0.3);
+		self.writeDACVoltage(VRSTB_VOLTAGE, 2.7);
+		self.writeDACVoltage(VRST_VOLTAGE, 3.3);
+		self.writeDACVoltage(VRSTL_VOLTAGE, 0.7);
+		self.writeDACVoltage(VRSTH_VOLTAGE, 3.6);
+		self.writeDACVoltage(VDR1_VOLTAGE, 2.5);
+		self.writeDACVoltage(VDR2_VOLTAGE, 2);
+		self.writeDACVoltage(VDR3_VOLTAGE, 1.5);
+
+
+
+
+
+
+	def initlux1310(self):
+
+		self.mem.mm_open()
+		#self.mem.initlux()
+
+		self.initDAC()
+		self.writeDACVoltages()
+
+
+		# Now do rest of lux init
+		time.sleep(0.01)
+
+
+		self.lux1310SetReset(True)
+		self.lux1310SetReset(False)
+
+		time.sleep(0.001)
+
+
+
+		# Set up DAC with SPI
+		def lux1310SetReset(self, value):
+			readvalue = self.fpga_mmio.read16(IMAGE_SENSOR_CONTROL_ADDR)
+			if value:
+				self.fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue | IMAGE_SENSOR_RESET_MASK)
+			else:
+				self.fpga_mmio.write16(IMAGE_SENSOR_CONTROL_ADDR, readvalue & ~IMAGE_SENSOR_RESET_MASK)
+
+
+
+
+
+'''
+def writeDACSPI(data)
+{
+	UInt8 tx[2];
+	UInt8 rx[sizeof(tx)];
+	int retval;
+
+	tx[1] = data >> 8;
+	tx[0] = data & 0xFF;
+
+	setDACCS(false);
+	//delayms(1);
+	retval = spi->Transfer((uint64_t) tx, (uint64_t) rx, sizeof(tx));
+	//delayms(1);
+	setDACCS(true);
+	return retval;
+}
+
+'''
diff --git a/root/lux1310h.py b/root/lux1310h.py
new file mode 100644
index 0000000..ae78610
--- /dev/null
+++ b/root/lux1310h.py
@@ -0,0 +1,94 @@
+
+
+
+LUX1310_HRES_INCREMENT		= 16
+LUX1310_VRES_INCREMENT		= 2
+LUX1310_MAX_STRIDE			= 1280
+LUX1310_MAX_H_RES			= 1280
+LUX1310_MAX_V_RES			= 1024
+LUX1310_MIN_HRES			= 192		#Limited by video encoder minimum
+LUX1310_MIN_VRES			= 96
+LUX1310_MAGIC_ABN_DELAY		= 26
+
+TIMING_CLOCK_FREQ			= 100000000.0	#Hz
+LUX1310_SENSOR_CLOCK		= 90000000.0	#Hz
+
+LUX1310_ROT					= (9+4)		#Granularity clock cycles (63MHz periods by default)
+LUX1310_FOT					= 315		#Granularity clock cycles (63MHz periods by default)
+
+ROT_TIMER					= 9
+FOT_TIMER					= 315
+
+ROT							= (ROT_TIMER + 4)
+FOT							= (FOT_TIMER + 29)
+MAX_TS						= 54
+
+LUX1310_MIN_INT_TIME		= 0.000001	#1 us
+LUX1310_MAX_SLAVE_PERIOD 	= (0xFFFFFFFF)
+
+LUX1310_GAIN_CORRECTION_MIN = 0.999
+LUX1310_GAIN_CORRECTION_MAX = 1.2
+
+VDR3_VOLTAGE				= 0
+VABL_VOLTAGE				= 1
+VDR1_VOLTAGE				= 2
+VDR2_VOLTAGE				= 3
+VRSTB_VOLTAGE				= 4
+VRSTH_VOLTAGE				= 5
+VRSTL_VOLTAGE				= 6
+VRST_VOLTAGE				= 7
+
+
+LUX1310_DAC_FS				= 4095.0
+LUX1310_DAC_VREF			= 3.3
+VDR3_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VABL_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * (10.0 + 23.2) / 10.0)
+VDR1_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VDR2_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VRSTB_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF)
+VRSTH_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * 49.9 / (49.9 + 10.0))
+VRSTL_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * (10.0 + 23.2) / 10.0)
+VRST_SCALE					= (LUX1310_DAC_FS / LUX1310_DAC_VREF * 49.9 / (49.9 + 10.0))
+
+
+LUX1310_WAVETABLE_80		= 0
+LUX1310_WAVETABLE_39		= 1
+LUX1310_WAVETABLE_30		= 2
+LUX1310_WAVETABLE_25		= 3
+LUX1310_WAVETABLE_20		= 4
+LUX1310_WAVETABLE_AUTO		= 0x7FFFFFFF
+
+LUX1310_WAVETABLE_80_FN		= "WT80"
+LUX1310_WAVETABLE_39_FN		= "WT39"
+LUX1310_WAVETABLE_30_FN		= "WT30"
+LUX1310_WAVETABLE_25_FN		= "WT25"
+LUX1310_WAVETABLE_20_FN		= "WT20"
+
+LUX1310_GAIN_1				= 0
+LUX1310_GAIN_2				= 1
+LUX1310_GAIN_4				= 2
+LUX1310_GAIN_8				= 3
+LUX1310_GAIN_16				= 4
+
+#Strings to build FPN filenames
+LUX1310_GAIN_1_FN			= "G1"
+LUX1310_GAIN_2_FN			= "G2"
+LUX1310_GAIN_4_FN			= "G4"
+LUX1310_GAIN_8_FN			= "G8"
+LUX1310_GAIN_16_FN			= "G16"
+
+ABN_DELAY_WT80				= 25
+ABN_DELAY_WT39				= 30
+ABN_DELAY_WT30				= 29
+ABN_DELAY_WT25				= 27
+ABN_DELAY_WT20				= 25
+
+LUX1310_VERSION_1			= 1
+LUX1310_VERSION_2			= 2
+
+LUX1310_CLOCK_PERIOD		= (1.0/90000000.0)
+LUX1310_MIN_WAVETABLE_SIZE	= 20
+
+FILTER_COLOR_RED			= 0
+FILTER_COLOR_GREEN			= 1
+FILTER_COLOR_BLUE			= 2
diff --git a/root/memobj.py b/root/memobj.py
new file mode 100644
index 0000000..cb6f3e7
--- /dev/null
+++ b/root/memobj.py
@@ -0,0 +1,52 @@
+import time
+
+from periphery import MMIO
+#import spidev
+#from periphery import SPI
+from mmapregisters import *
+from spi import *
+from lux import *
+
+
+def nicehex(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-4:]
+def nicehex4(n):
+	return "0x" + ("0000000" + hex(n)[2:])[-8:]
+
+
+class MemObject:
+	#print ("Created!")
+	fpga_mmio = MMIO(0x01000000, 0x3000)
+
+	def mm_write16(self, addr, data):
+		self.fpga_mmio.write16(addr, data)
+
+	def mm_write32(self, addr, data):
+		self.fpga_mmio.write32(addr, data)
+
+	def mm_open(self):
+		# Open FPGA memory map
+		#rint("Open!")
+		self.mm_write32(IMAGER_FRAME_PERIOD_ADDR, 100*4000)  #Disable integration
+		self.mm_write32(IMAGER_INT_TIME_ADDR, 100*4100)
+
+		#print (self.fpga_mmio.read32(IMAGER_INT_TIME_ADDR))
+
+	def mm_print(self):
+		print ("FPGA registers")
+
+		for i in range(0, 12, 4):
+			mm = self.fpga_mmio.read32(i)
+			print (nicehex(i), " - ", nicehex4(mm))
+
+		for i in range(1024, 1024+12, 4):
+			mm = self.fpga_mmio.read32(i)
+			print (nicehex(i), " - ", nicehex4(mm))
+
+		#mm = fpga_mmio.read32(28)
+		#print (nicehex(28), nicehex4(mm))
+
+
+
+
+#fpga_mmio.close()
diff --git a/root/mmapregisters.py b/root/mmapregisters.py
new file mode 100644
index 0000000..56fca82
--- /dev/null
+++ b/root/mmapregisters.py
@@ -0,0 +1,280 @@
+
+
+#Register definitions from control register verilog file (in 16 bit word addresses)
+SENSOR_CONTROL				=	0
+SENSOR_CLK_PHASE			=	2
+SENSOR_SYNC_TOKEN			=	4
+SENSOR_DATA_CORRECT			=	6
+SENSOR_FIFO_START_W_THRESH	=	8
+SENSOR_FIFO_STOP_W_THRESH	=	10
+IMAGER_FRAME_PERIOD			=	14
+IMAGER_INT_TIME				=	16
+SENSOR_SCI_CONTROL			=	18
+SENSOR_SCI_ADDRESS			=	20
+SENSOR_SCI_DATALEN			=	22
+SENSOR_SCI_FIFO_WR_ADDR		=	24
+SENSOR_SCI_READ_DATA		=	26
+
+SEQ_CTL						=	32
+SEQ_STATUS					=	34
+SEQ_FRAME_SIZE				=	36
+SEQ_REC_REGION_START		=	38
+SEQ_REC_REGION_END			=	40
+SEQ_LIVE_ADDR_0				=	42
+SEQ_LIVE_ADDR_1				=	44
+SEQ_LIVE_ADDR_2				=	46
+SEQ_TRIG_DELAY				=	48
+SEQ_MD_FIFO_READ			=	50
+
+SENSOR_MAGIC_START_DELAY	=	52
+SENSOR_LINE_PERIOD			=	54
+
+TRIG_ENABLE					=	0x50
+TRIG_INVERT					=	0x52
+TRIG_DEBOUNCE				=	0x54
+
+IO_OUT_LEVEL				=	0x56
+IO_OUT_SOURCE				=	0x58
+IO_OUT_INVERT				=	0x5A
+IO_IN						=	0x5C
+EXT_SHUTTER_CTL				=	0x5E
+
+SEQ_PGM_MEM_START			=	0x80
+GPMC_PAGE_OFFSET			=	0x100
+
+DISPLAY_CTL					=	0x200
+DISPLAY_FRAME_ADDRESS		=	0x202
+DISPLAY_FPN_ADDRESS			=	0x204
+DISPLAY_GAIN				=	0x206
+DISPLAY_H_PERIOD			=	0x208
+DISPLAY_V_PERIOD			=	0x20A
+DISPLAY_H_SYNC_LEN			=	0x20C
+DISPLAY_V_SYNC_LEN			=	0x20E
+DISPLAY_H_BACK_PORCH		=	0x210
+DISPLAY_V_BACK_PORCH		=	0x212
+DISPLAY_H_RES				=	0x214
+DISPLAY_V_RES				=	0x216
+DISPLAY_H_OUT_RES			=	0x218
+DISPLAY_V_OUT_RES			=	0x220
+DISPLAY_PEAKING_THRESH		=	0x222
+DISPLAY_PIPELINE            =	0x224
+DISPLAY_MANUAL_SYNC         =	0x228
+
+CCM_11						=	0x260
+CCM_12						=	0x262
+CCM_13						=	0x264
+CCM_21						=	0x268
+CCM_22						=	0x26A
+CCM_23						=	0x26C
+CCM_31						=	0x26E
+CCM_32						=	0x270
+CCM_33						=	0x272
+WL_DYNDLY_0					=	0x274
+WL_DYNDLY_1					=	0x276
+WL_DYNDLY_2					=	0x278
+WL_DYNDLY_3					=	0x27A
+
+MMU_CONFIG_ADDRESS          =	0x290
+
+SYSTEM_RESET				=	0x300
+FPGA_VERSION				=	0x302
+FPGA_SUBVERSION             =	0x304
+DCG_MEM_START				=	0x800
+
+
+
+                                      
+#Image sensor control register
+IMAGE_SENSOR_CONTROL_ADDR		=	0
+
+IMAGE_SENSOR_RESET_MASK			=	0x1
+IMAGE_SENSOR_EVEN_TIMESLOT_MASK =	0x2
+
+#Phase control register
+
+IMAGE_SENSOR_CLK_PHASE_ADDR		=	(SENSOR_CLK_PHASE * 2)
+IMAGE_SENSOR_CLK_PHASE_OFFSET	=	0
+
+#Sync Token Register
+IMAGE_SENSOR_SYNC_TOKEN_ADDR	=	(SENSOR_SYNC_TOKEN * 2)
+
+#Data Correct
+#Indicates data channels 11:0 and sync are correct
+# Format: data[11], data[10], ... data[0], sync
+
+IMAGE_SENSOR_DATA_CORRECT_ADDR	=	(SENSOR_DATA_CORRECT * 2)
+
+#Image data write path FIFO thresholds for start and stop of data write to ram
+
+IMAGE_SENSOR_FIFO_START_W_THRESH_ADDR	=	(SENSOR_FIFO_START_W_THRESH	* 2)
+IMAGE_SENSOR_FIFO_STOP_W_THRESH_ADDR	=	(SENSOR_FIFO_STOP_W_THRESH * 2)
+
+IMAGER_FRAME_PERIOD_ADDR			=	(IMAGER_FRAME_PERIOD * 2)
+IMAGER_INT_TIME_ADDR				=	(IMAGER_INT_TIME * 2)
+
+SENSOR_SCI_CONTROL_ADDR				=	(SENSOR_SCI_CONTROL * 2)
+SENSOR_SCI_CONTROL_RUN_MASK			=	0x1						#Write 1 to start, reads 1 while busy, 0 when done
+SENSOR_SCI_CONTROL_RW_MASK			=	0x2						#Read == 1, Write == 0
+SENSOR_SCI_CONTROL_FIFO_FULL_MASK	=	0x4					#1 indicates FIFO is full
+SENSOR_SCI_ADDRESS_ADDR				=	(SENSOR_SCI_ADDRESS * 2)
+SENSOR_SCI_DATALEN_ADDR				=	(SENSOR_SCI_DATALEN * 2)
+SENSOR_SCI_FIFO_WR_ADDR_ADDR		=	(SENSOR_SCI_FIFO_WR_ADDR * 2)
+SENSOR_SCI_READ_DATA_ADDR			=	(SENSOR_SCI_READ_DATA * 2)
+
+SEQ_CTL_ADDR					=	(SEQ_CTL * 2)
+SEQ_CTL_SW_TRIG_MASK			=	0x1
+SEQ_CTL_START_REC_MASK			=	0x2
+SEQ_CTL_STOP_REC_MASK			=	0x4
+SEQ_CTL_TRIG_DELAY_MODE_MASK	=	0x8
+
+SEQ_STATUS_ADDR					=	(SEQ_STATUS * 2)
+SEQ_STATUS_RECORDING_MASK		=	0x1
+SEQ_STATUS_MD_FIFO_EMPTY_MASK	=	0x2
+
+SEQ_FRAME_SIZE_ADDR				=	(SEQ_FRAME_SIZE * 2)
+SEQ_REC_REGION_START_ADDR		=	(SEQ_REC_REGION_START * 2)
+SEQ_REC_REGION_END_ADDR			=	(SEQ_REC_REGION_END * 2)
+SEQ_LIVE_ADDR_0_ADDR			=	(SEQ_LIVE_ADDR_0 * 2)
+SEQ_LIVE_ADDR_1_ADDR			=	(SEQ_LIVE_ADDR_1 * 2)
+SEQ_LIVE_ADDR_2_ADDR			=	(SEQ_LIVE_ADDR_2 * 2)
+SEQ_TRIG_DELAY_ADDR				=	(SEQ_TRIG_DELAY * 2)
+SEQ_MD_FIFO_READ_ADDR			=	(SEQ_MD_FIFO_READ * 2)
+SEQ_PGM_MEM_START_ADDR			=	(SEQ_PGM_MEM_START * 2)
+
+SENSOR_MAGIC_START_DELAY_ADDR	=	(SENSOR_MAGIC_START_DELAY * 2)
+SENSOR_LINE_PERIOD_ADDR			=	(SENSOR_LINE_PERIOD * 2)
+
+TRIG_ENABLE_ADDR				=	(TRIG_ENABLE * 2)
+TRIG_INVERT_ADDR				=	(TRIG_INVERT * 2)
+TRIG_DEBOUNCE_ADDR				=	(TRIG_DEBOUNCE * 2)
+
+IO_OUT_LEVEL_ADDR				=	(IO_OUT_LEVEL * 2)		#1 outputs high if selected (invert does not affect this)
+IO_OUT_SOURCE_ADDR				=	(IO_OUT_SOURCE * 2)		#1 selects int time, 0 selects IO_OUT_LEVEL
+IO_OUT_INVERT_ADDR				=	(IO_OUT_INVERT * 2)		#1 inverts int time signal
+IO_IN_ADDR						=	(IO_IN * 2)		#1 inverts int time signal
+
+EXT_SHUTTER_CTL_ADDR			=	(EXT_SHUTTER_CTL * 2)
+EXT_SH_TRIGD_EXP_EN_MASK		=	0x1
+EXT_SH_TRIGD_EXP_EN_OFFSET		=	0
+EXT_SH_GATING_EN_MASK			=	0x2
+EXT_SH_GATING_EN_OFFSET			=	1
+EXT_SH_SRC_EN_MASK				=	0x1C
+EXT_SH_SRC_EN_OFFSET			=	2
+
+GPMC_PAGE_OFFSET_ADDR			=	(GPMC_PAGE_OFFSET * 2)
+
+DISPLAY_CTL_ADDR				=	(DISPLAY_CTL * 2)
+DISPLAY_CTL_ADDRESS_SEL_OFFSET	=	0
+DISPLAY_CTL_SCALER_NN_OFFSET	=	1
+DISPLAY_CTL_SYNC_INH_OFFSET		=	2
+DISPLAY_CTL_READOUT_INH_OFFSET	=	3
+DISPLAY_CTL_COLOR_MODE_OFFSET	=	4
+DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET	=	5
+DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET	=	6
+DISPLAY_CTL_ZEBRA_EN_OFFSET		=	9
+
+DISPLAY_CTL_ADDRESS_SEL_MASK	=	(1 << DISPLAY_CTL_ADDRESS_SEL_OFFSET)
+DISPLAY_CTL_SCALER_NN_MASK		=	(1 << DISPLAY_CTL_SCALER_NN_OFFSET)
+DISPLAY_CTL_SYNC_INH_MASK		=	(1 << DISPLAY_CTL_SYNC_INH_OFFSET)
+DISPLAY_CTL_READOUT_INH_MASK	=	(1 << DISPLAY_CTL_READOUT_INH_OFFSET)
+DISPLAY_CTL_COLOR_MODE_MASK		=	(1 << DISPLAY_CTL_COLOR_MODE_OFFSET)
+DISPLAY_CTL_FOCUS_PEAK_EN_MASK	=	(1 << DISPLAY_CTL_FOCUS_PEAK_EN_OFFSET)
+DISPLAY_CTL_FOCUS_PEAK_COLOR_MASK	=	(7 << DISPLAY_CTL_FOCUS_PEAK_COLOR_OFFSET)
+DISPLAY_CTL_ZEBRA_EN_MASK		=	(1 << DISPLAY_CTL_ZEBRA_EN_OFFSET)
+
+DISPLAY_FRAME_ADDRESS_ADDR		=	(DISPLAY_FRAME_ADDRESS * 2)
+DISPLAY_FPN_ADDRESS_ADDR		=	(DISPLAY_FPN_ADDRESS * 2)
+DISPLAY_GAIN_ADDR				=	(DISPLAY_GAIN * 2)
+DISPLAY_H_PERIOD_ADDR			=	(DISPLAY_H_PERIOD * 2)
+DISPLAY_V_PERIOD_ADDR			=	(DISPLAY_V_PERIOD * 2)
+DISPLAY_H_SYNC_LEN_ADDR			=	(DISPLAY_H_SYNC_LEN * 2)
+DISPLAY_V_SYNC_LEN_ADDR			=	(DISPLAY_V_SYNC_LEN * 2)
+DISPLAY_H_BACK_PORCH_ADDR		=	(DISPLAY_H_BACK_PORCH * 2)
+DISPLAY_V_BACK_PORCH_ADDR		=	(DISPLAY_V_BACK_PORCH * 2)
+DISPLAY_H_RES_ADDR				=	(DISPLAY_H_RES * 2)
+DISPLAY_V_RES_ADDR				=	(DISPLAY_V_RES * 2)
+DISPLAY_H_OUT_RES_ADDR			=	(DISPLAY_H_OUT_RES * 2)
+DISPLAY_V_OUT_RES_ADDR			=	(DISPLAY_V_OUT_RES * 2)
+DISPLAY_PEAKING_THRESH_ADDR		=	(DISPLAY_PEAKING_THRESH * 2)
+
+DISPLAY_PIPELINE_ADDR           	=	(DISPLAY_PIPELINE * 2)
+DISPLAY_PIPELINE_BIPASS_FPN         =	(1 << 0)
+DISPLAY_PIPELINE_BIPASS_GAIN        =	(1 << 1)
+DISPLAY_PIPELINE_BIPASS_DEMOSIAC    =	(1 << 2)
+DISPLAY_PIPELINE_BIPASS_COLORMATRIX =	(1 << 3)
+DISPLAY_PIPELINE_BIPASS_GAMMA_TABLE =	(1 << 4)
+DISPLAY_PIPELINE_RAW_12BPP          =	(1 << 5)
+DISPLAY_PIPELINE_RAW_16BPP          =	(1 << 6)
+DISPLAY_PIPELINE_RAW_RIGHT_JUSTIFY  =	(1 << 7)
+DISPLAY_PIPELINE_RAW_TEST_PATTERN   =	(1 << 15)
+
+DISPLAY_MANUAL_SYNC_ADDR        =	(DISPLAY_MANUAL_SYNC * 2)
+DISPLAY_MANUAL_SYNC_MASK        =	(1)
+
+CCM_11_ADDR						=	(CCM_11 * 2)
+CCM_12_ADDR						=	(CCM_12 * 2)
+CCM_13_ADDR						=	(CCM_13 * 2)
+CCM_21_ADDR						=	(CCM_21 * 2)
+CCM_22_ADDR						=	(CCM_22 * 2)
+CCM_23_ADDR						=	(CCM_23 * 2)
+CCM_31_ADDR						=	(CCM_31 * 2)
+CCM_32_ADDR						=	(CCM_32 * 2)
+CCM_33_ADDR						=	(CCM_33 * 2)
+
+WL_DYNDLY_0_ADDR				=	(WL_DYNDLY_0 * 2)
+WL_DYNDLY_1_ADDR				=	(WL_DYNDLY_1 * 2)
+WL_DYNDLY_2_ADDR				=	(WL_DYNDLY_2 * 2)
+WL_DYNDLY_3_ADDR				=	(WL_DYNDLY_3 * 2)
+
+MMU_CONFIG_ADDR                 =	(MMU_CONFIG_ADDRESS * 2)
+MMU_INVERT_CS                   =	1
+MMU_SWITCH_STUFFED              =	2
+
+SYSTEM_RESET_ADDR				=	(SYSTEM_RESET * 2)
+
+FPGA_VERSION_ADDR				=	(FPGA_VERSION * 2)
+FPGA_SUBVERSION_ADDR            =	(FPGA_SUBVERSION * 2)
+
+DCG_MEM_START_ADDR				=	(DCG_MEM_START * 2)
+
+
+
+#========================================================================================================
+#                                   New format registers
+
+#---------------------------------- Wishbone RAM Access -----------------------------------------
+
+
+RAM_REG_BASE                =	(0x2000)
+RAM_REG_BLOCK               =	(RAM_REG_BASE)
+
+# identifier
+RAM_IDENTIFIER_REG          =	(RAM_REG_BLOCK + 0x00)
+RAM_VERSION_REG             =	(RAM_REG_BLOCK + 0x04)
+RAM_SUBVERSION_REG          =	(RAM_REG_BLOCK + 0x08)
+
+# reset and control
+RAM_CONTROL                 =	(RAM_REG_BLOCK + 0x0C)
+RAM_STATUS                  =	(RAM_REG_BLOCK + 0x10)
+
+RAM_ADDRESS                 =	(RAM_REG_BLOCK + 0x20) # 32 bit 
+RAM_BURST_LENGTH            =	(RAM_REG_BLOCK + 0x24)
+
+# Read/write buffers
+RAM_BUFFER_START            =	(RAM_REG_BLOCK + 0x200) # 1024*16bit (64-ram page) 
+RAM_BUFFER_END              =	(RAM_REG_BLOCK + 0xA00)
+
+
+
+RAM_IDENTIFIER =	(0x0040)
+
+RAM_CONTROL_TRIGGER_READ  =	0x0001
+RAM_CONTROL_TRIGGER_WRITE =	0x0002
+
+RAM_BURST_LENGTH_MAX =	32
+
+#------------------------------------------------------------------------------------------------
+
+
+
+
diff --git a/root/sensorobj.py b/root/sensorobj.py
new file mode 100644
index 0000000..3c83850
--- /dev/null
+++ b/root/sensorobj.py
@@ -0,0 +1,63 @@
+
+from dataclasses import dataclass
+
+
+
+@dataclass
+class ImageGeometryData:
+	hres: int = 1280
+	vres: int = 1024
+	hoffset: int = 0
+	voffset: int = 0
+
+# Image timing constraings are a function of the selected frame geometry, so this
+# structure is to be returned by the ops->get_constraings function for a given
+# X/Y resolution.
+
+
+@dataclass
+class ImageConstraintsData:
+	t_min_period: int = 0
+	t_max_period: int = 0
+
+	# Exposure timing must satisfy the constraints:
+	# tMinExposure <= tExposure <= (tFramePeriod * tMaxShutter) / 360 - tExposureDelay
+
+	t_min_exposure: int = 0
+	t_exposure_delay: int = 0
+	t_max_shutter: int = 0
+
+	# All timing values will be implicitly quantized by this frequency. */
+	f_quantization: int = 0
+
+
+
+
+'''
+@dataclass
+class image_sensor_ops {
+	int (*set_exposure)(struct image_sensor *sensor, const struct image_geometry *g, unsigned long long nsec);
+	int (*set_period)(struct image_sensor *sensor, const struct image_geometry *g, unsigned long long nsec);
+	int (*set_resolution)(struct image_sensor *sensor, const struct image_geometry *g);
+	int (*get_constraints)(struct image_sensor *sensor, const struct image_geometry *g, struct image_constraints *c);
+	/* ADC Gain Configuration and Calibration */
+	int (*set_gain)(struct image_sensor *sensor, int gain, FILE *cal);
+	int (*cal_gain)(struct image_sensor *sensor, const struct image_geometry *g, const void *frame, FILE *cal);
+	char *(*cal_suffix)(struct image_sensor *sensor, char *filename, size_t maxlen);
+};
+'''
+
+def luxnum(self):
+	return 5
+
+class SensorObject():
+	def __init__(self, mem):
+		self.mem = mem
+
+	# print ("class SensorObject")
+	# print (mem)
+	
+	ImageGeometry = ImageGeometryData()
+	ImageGeometry.hres = 500000001
+	numfunc = luxnum
+
diff --git a/root/spi.py b/root/spi.py
new file mode 100644
index 0000000..2ac8366
--- /dev/null
+++ b/root/spi.py
@@ -0,0 +1,24 @@
+from periphery import SPI
+
+
+# Now set up sensor with SPI
+
+SPI_DEV = "/dev/spidev3.0"
+SPI_MODE = 1
+SPI_SPEED = 1000000
+SPI_BITORDER = "msb"
+SPI_BITS = 16
+
+spi = 0
+
+def spi_open():
+	global spi
+	spi = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+	#print (spi)
+
+def spi_transfer(data):
+	global spi
+	spilist = [data >> 8, data & 255]
+	#print (spilist)
+	spi.transfer(spilist)
+
diff --git a/sensorobj.py b/sensorobj.py
index e3e3af2..412dfcc 100644
--- a/sensorobj.py
+++ b/sensorobj.py
@@ -104,14 +104,12 @@ class image_sensor_ops {
 };
 '''
 
-def luxnum(self):
-	return 5
 
 class SensorObject():
 	# def __init__(self, mem):
-	def __init__(self):
+	def __init__(self, mem):
 		print ("SensorObject Init")
-		#self.mem = mem
+		self.mem = mem
 		#print (mem)
 		self.SensorInit()
 
@@ -124,6 +122,6 @@ class SensorObject():
 	OpsDict = {}
 	# ImageGeometry.hres = 500000001
 	# ImageSensor = ImageSensorData
-	numfunc = luxnum
+	
 	hMaxRes = 0;
 	vMaxRes = 0;
diff --git a/spi.py b/spi.py
index 2ac8366..36f2f33 100644
--- a/spi.py
+++ b/spi.py
@@ -9,7 +9,7 @@ SPI_SPEED = 1000000
 SPI_BITORDER = "msb"
 SPI_BITS = 16
 
-spi = 0
+#spi = 0
 
 def spi_open():
 	global spi
@@ -21,4 +21,4 @@ def spi_transfer(data):
 	spilist = [data >> 8, data & 255]
 	#print (spilist)
 	spi.transfer(spilist)
-
+	
\ No newline at end of file
diff --git a/watch-camera-video.sh b/watch-camera-video.sh
new file mode 100644
index 0000000..239d6f4
--- /dev/null
+++ b/watch-camera-video.sh
@@ -0,0 +1,49 @@
+#!/bin/bash
+set -uo pipefail #enable bash's safer mode
+IFS=$'\n'
+
+#This script runs the Python-based Chronos on-board GUI.
+#When a file is changed, Python is automatically restarted.
+#brk() may be used in the Python script to enter an interactive debugger.
+
+trap "{ stty sane; echo; kill 0; }" EXIT #Kill all children when we die. (This cleans up any windows lying around.) Also restore the console (keyboard stops being echoed after ctrl-c'ing out of pdb) and advance to a new line before printing the prompt again. When python is in pdb() on the camera, it will not respond to anything other than -9 unfortunately.
+
+bash <<< "#sh doesn't do the equality test for 143, must use bash
+	while true; do
+		sleep 2 &
+		python3 src/live.py < `readlink -f /dev/stdin` 2> `readlink -f /dev/stderr`
+		PY_EXIT=\$?
+		[[ \$PY_EXIT -eq 137 ]] || echo Python exited with code \$PY_EXIT. Restarting... #Python exits with 137 when killed by watchdog running pkill. We don't really care about that, since it's so frequent, but knowing when it's died of other causes is useful.
+		wait #In combination with sleep 2, don't restart the python script until at least two seconds have passed since the last invocation. This stops python from running many times if python crashes immediately.
+		echo; echo ----- reset -----; echo; #Visually separate logs.
+	done
+" 2> /dev/null & #suppress bash terminated messages caused by entr pkill
+PYTHON_PARENT_SHELL=$! #Used to limit pkill to the subshell we're running our python app in. Otherwise, pkill takes out entr as well.
+
+#Watch for filesystem changes and run a command. If another change comes in during the timeout period, ignore the first change.
+python3 - $PYTHON_PARENT_SHELL << 'EOL'
+from watchdog.observers import Observer
+from watchdog.events import PatternMatchingEventHandler
+import subprocess, sys
+
+timeout = 0.05 #seconds
+
+killingProcess = None
+
+def callback(evt):
+	"""Terminate running python in this session, so the bash loop above restarts it."""
+	global killingProcess
+	killingProcess and killingProcess.kill()
+	# SIGKILL is needed only on the camera, as pdb() does not respond to SIGTERM only on the camera.
+	killingProcess = subprocess.Popen(f"sleep {timeout} && pkill --signal SIGKILL --parent {sys.argv[1]} --full main.py", shell=True)
+	
+event_handler = PatternMatchingEventHandler(
+	patterns=["*.py","*.ui"],
+	ignore_directories=True )
+event_handler.on_any_event = callback
+	
+observer = Observer()
+observer.schedule(event_handler, '.', recursive=True)
+observer.start()
+observer.join()
+EOL
\ No newline at end of file
diff --git a/watch-computer.sh b/watch-computer.sh
new file mode 100644
index 0000000..6684e04
--- /dev/null
+++ b/watch-computer.sh
@@ -0,0 +1,18 @@
+#!/bin/bash
+set -uo pipefail
+IFS=$'\n'
+
+trap "exit;" SIGINT SIGTERM #The following loop works fine in Konsole but won't ever stop on Gnome Terminal.
+
+while true; do 
+	find -regex '\./[^_\.].*' ! -name git_description ! -path 'util/stats_reported' | entr -d bash -c "
+		if [[ \$(cat git_description) != \$(git describe --tags --always) ]]; then #Only update when description changes, results in some thrashing otherwise.
+			git describe --tags --always > git_description
+		fi
+		rsync -ir ./ \"croot@192.168.1.214:/opt/camera/chronos-gui-2/\" --delete --links \
+			--rsh=\"/usr/bin/sshpass -p $CHRONOS_PASSWORD ssh -l root\" --times --inplace \
+			--exclude \"__pycache__\" --exclude \"/.git\" \
+			--exclude \"util/stats_reported\" \
+			--exclude \"src/read_jog_wheel_encoder\"
+	"
+done
-- 
2.7.4


From f19c570b3627e2aa6aa4c0962efd6f0287bba198 Mon Sep 17 00:00:00 2001
From: Johan Thornton <johan@krontech.ca>
Date: Wed, 16 Jan 2019 13:25:30 -0800
Subject: [PATCH 6/7] Live mode works after camApp runs.

---
 camobj.py                         |   36 +-
 debug1                            | 1687 ------------------------------------
 debug2                            | 1688 ------------------------------------
 debug3                            | 1691 -------------------------------------
 debug4                            | 1372 ------------------------------
 debug5                            | 1086 ------------------------
 debug6                            | 1086 ------------------------
 debug7                            |  229 -----
 io.py                             |   35 -
 list of SCIWrites                 |  134 ---
 list of SCIWrites and FPGAWrites  |  124 ---
 list of SCIWrites and FPGAWrites2 |  119 ---
 live.py                           |    9 +-
 lux1310.py                        |  108 ++-
 memobj.py                         |  207 ++++-
 python output dec 17.odt          |  Bin 26869 -> 0 bytes
 python output dec14               |  247 ------
 python output with fake.odt       |  Bin 26895 -> 0 bytes
 18 files changed, 298 insertions(+), 9560 deletions(-)
 delete mode 100644 debug1
 delete mode 100644 debug2
 delete mode 100644 debug3
 delete mode 100644 debug4
 delete mode 100644 debug5
 delete mode 100644 debug6
 delete mode 100644 debug7
 delete mode 100644 io.py
 delete mode 100644 list of SCIWrites
 delete mode 100644 list of SCIWrites and FPGAWrites
 delete mode 100644 list of SCIWrites and FPGAWrites2
 delete mode 100644 python output dec 17.odt
 delete mode 100644 python output dec14
 delete mode 100644 python output with fake.odt

diff --git a/camobj.py b/camobj.py
index 3086e24..1f615c5 100644
--- a/camobj.py
+++ b/camobj.py
@@ -28,6 +28,8 @@ print (f"EEPROM: {hex(v)}")
 
 from ioports import board_chronos14_ioports
 
+import pychronos
+
 MAX_FRAME_LENGTH = 0xf000
 REC_START_ADDR = MAX_FRAME_LENGTH * 4
 
@@ -57,7 +59,6 @@ def i2c_eeprom_do_read(addr,  offset,  leng):
 class CamObject:
 
 
-
 	ioports = board_chronos14_ioports
 
 		# self.CamInit()
@@ -65,7 +66,10 @@ class CamObject:
 
 	print ("continue")
 	mem = MemObject()
-	mem.CtypesTest()
+	# mem.CtypesTest()
+	mem.MemTest()
+
+	# breakpoint()
 
 	# exit()
 
@@ -240,26 +244,26 @@ class CamObject:
 
 	def FakeIO(self):
 		print ("TODO: don't do fake IO")
-		self.mem.fpga_write16(0xa0, 0x1)
-		self.mem.fpga_write16(0xa4, 0x1)
-		self.mem.fpga_write16(0xa8, 0x0)
-		self.mem.fpga_write32(0x60, 0x0)	
-		self.mem.fpga_write16(0xb4, 0x0)
-		self.mem.fpga_write16(0xb0, 0x0)
-		self.mem.fpga_write16(0xac, 0x2)
-		self.mem.fpga_write16(0xbc, 0x0)
-		self.mem.fpga_write16(0xbc, 0x0)
-		self.mem.fpga_write16(0xbc, 0x0)
+		self.mem.FPGAWrite16(0xa0, 0x1)
+		self.mem.FPGAWrite16(0xa4, 0x1)
+		self.mem.FPGAWrite16(0xa8, 0x0)
+		self.mem.FPGAWrite32(0x60, 0x0)	
+		self.mem.FPGAWrite16(0xb4, 0x0)
+		self.mem.FPGAWrite16(0xb0, 0x0)
+		self.mem.FPGAWrite16(0xac, 0x2)
+		self.mem.FPGAWrite16(0xbc, 0x0)
+		self.mem.FPGAWrite16(0xbc, 0x0)
+		self.mem.FPGAWrite16(0xbc, 0x0)
 
 
 	def Fake16(self, addr, data):
 			# breakpoint()
 			print (f"--- faking 16 bit (0x{(addr * 2):x}, (0x{data:x})")
-			self.mem.fpga_write16(addr * 2, data)
+			self.mem.FPGAWrite16(addr * 2, data)
 	def Fake32(self, addr, data):
 			# breakpoint()
 			print (f"=== faking 32 bit (0x{(addr * 2):x}, (0x{data:x})")
-			self.mem.fpga_write32(addr * 2, data)
+			self.mem.FPGAWrite32(addr * 2, data)
 
 	def FakeInit(self):
 		print ("TODO: don't do fake init")
@@ -388,7 +392,7 @@ class CamObject:
 
 
 		#TODO - dereference through SensorObj:
-		breakpoint()
+		# breakpoint()
 		self.sensor._writeDACVoltages()
 		# exit()
 
@@ -431,7 +435,7 @@ class CamObject:
 
 		# exit()
 
-		breakpoint()
+			# breakpoint()
 		self.FakeInit()
 
 		# frame_words = int(((self.sensor.hMaxRes * self.sensor.vMaxRes * self.image_sensor_bpp()) / 8 + (32 - 1)) / 32)
diff --git a/debug1 b/debug1
deleted file mode 100644
index c22af1a..0000000
--- a/debug1
+++ /dev/null
@@ -1,1687 +0,0 @@
-
-stdin: is not a tty
-Could not read calibration: "/etc/pointercal" 
-Folder cal found, no need to create 
-Folder cal/factoryFPN found, no need to create 
-Folder userFPN found, no need to create 
-Testing QDebug
-QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
-------------------------------------------------------------------- 
-Found 16 GB memory stick in slot 0 
-ioctl(): Remote I/O error
-ioctl returned -1
-Found 0 GB memory stick in slot 1 
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-  -----write16 1536 :  1 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-  -----write16 1064 :  1296 
-  -----write16 1072 :  1280 
-  -----write16 1068 :  1024 
-  -----write16 1088 :  1024 
-  -----write16 1040 :  1618 
-  -----write16 1048 :  1 
-  -----write16 1056 :  64 
-  -----write16 1044 :  1029 
-  -----write16 1052 :  1 
-  -----write16 1060 :  4 
-  -----write16 16 :  256 
-  -----write16 20 :  256 
-  -----write32 84 :  61440 
-  -----write32 88 :  122880 
-  -----write32 92 :  184320 
-  -----write32 76 :  245760 
---- memory --- no remap
---- memory --- remap register: 0x0000
-  -----write32 1024 :  752 
-  -----write32 28 :  400000 
-  -----write32 32 :  410000 
-  -----write16 0 :  5 
-  -----write16 0 :  4 
-$$$$$$ sci write 126 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  126 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  126 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  126 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-$$$$$$ sci write 87 :  4032 
-  -----write16 36 :  2 
-  -----write16 40 :  87 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  87 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  87 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  87 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-SCI Read returned 4032 
-$$$$$$ sci write 86 :  2 
-  -----write16 36 :  2 
-  -----write16 40 :  86 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  86 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  86 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 76 :  4032 
-  -----write16 36 :  2 
-  -----write16 40 :  76 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  76 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  76 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 90 :  225 
-  -----write16 36 :  2 
-  -----write16 40 :  90 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  90 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  90 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-  -----write16 4 :  0 
-  -----write16 4 :  1 
-  -----write16 4 :  0 
-datacorrect 131071 
-$$$$$$ sci write 76 :  3840 
-  -----write16 36 :  2 
-  -----write16 40 :  76 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  76 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  76 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 86 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  86 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  86 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  86 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 55 :  80 
-  -----write16 36 :  2 
-  -----write16 40 :  55 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  55 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  55 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 122 :  80 
-  -----write16 36 :  2 
-  -----write16 40 :  122 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  122 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  122 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 113 :  7 
-  -----write16 36 :  2 
-  -----write16 40 :  113 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  113 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  113 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 45 :  57486 
-  -----write16 36 :  2 
-  -----write16 40 :  45 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  45 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  45 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 46 :  64543 
-  -----write16 36 :  2 
-  -----write16 40 :  46 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  46 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  46 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 47 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  47 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  47 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  47 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 92 :  8706 
-  -----write16 36 :  2 
-  -----write16 40 :  92 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  92 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  92 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 98 :  19318 
-  -----write16 36 :  2 
-  -----write16 40 :  98 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  98 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  98 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 116 :  1055 
-  -----write16 36 :  2 
-  -----write16 40 :  116 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  116 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  116 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  0 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-$$$$$$ sci write 91 :  12415 
-  -----write16 36 :  2 
-  -----write16 40 :  91 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  91 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  91 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 123 :  12295 
-  -----write16 36 :  2 
-  -----write16 40 :  123 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  123 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  123 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 58 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  58 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  58 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  58 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 59 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  59 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  59 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  59 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 60 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  60 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  60 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  60 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 61 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  61 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  61 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  61 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 62 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  62 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  62 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  62 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 63 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  63 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  63 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  63 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 64 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  64 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  64 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  64 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 65 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  65 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  65 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  65 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 66 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  66 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  66 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  66 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 67 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  67 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  67 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  67 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 68 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  68 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  68 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  68 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 69 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  69 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  69 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  69 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 70 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  70 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  70 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  70 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 71 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  71 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  71 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  71 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 72 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  72 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  72 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  72 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 73 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  73 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  73 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  73 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 57 :  1 
-  -----write16 36 :  2 
-  -----write16 40 :  57 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  57 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  57 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-$$$$$$ sci write 81 :  127 
-  -----write16 36 :  2 
-  -----write16 40 :  81 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  81 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  81 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 82 :  127 
-  -----write16 36 :  2 
-  -----write16 40 :  82 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  82 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  82 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 83 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  83 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  83 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  83 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  32768 
-  -----write16 40 :  127 
-  -----write16 44 :  427 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  39 
-  -----write16 48 :  250 
-  -----write16 48 :  33 
-  -----write16 48 :  160 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  165 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  233 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  181 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  237 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  251 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  212 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  181 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  237 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  251 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  212 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  181 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  237 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  165 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  233 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  165 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  31 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 36 :  1 
-$$$$$$ sci write 1 :  1 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write32 28 :  400000 
-  -----write32 32 :  390000 
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32 28 :  94575 
-  -----write32 32 :  94094 
-  -----write16 160 :  1 
-  -----write16 164 :  1 
-  -----write16 168 :  0 
-  -----write32 96 :  0 
-  -----write16 180 :  0 
-  -----write16 176 :  0 
-  -----write16 172 :  2 
-  -----write16 188 :  0 
-  -----write16 188 :  0 
-  -----write16 188 :  0 
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  -----write32 32 :  0 
-Settings.period is 94575 
-$$$$$$ sci write 5 :  32 
-  -----write16 36 :  2 
-  -----write16 40 :  5 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  5 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  5 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 6 :  1311 
-  -----write16 36 :  2 
-  -----write16 40 :  6 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  6 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  6 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 7 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  7 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  7 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  7 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 8 :  1023 
-  -----write16 36 :  2 
-  -----write16 40 :  8 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  8 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  8 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32 28 :  94575 
-$$$$$$ sci write 81 :  127 
-  -----write16 36 :  2 
-  -----write16 40 :  81 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  81 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  81 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 82 :  127 
-  -----write16 36 :  2 
-  -----write16 40 :  82 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  82 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  82 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 83 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  83 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  83 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  83 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-$$$$$$ sci write 1 :  0 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 55 :  80 
-  -----write16 36 :  2 
-  -----write16 40 :  55 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  55 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  55 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-$$$$$$ sci write 122 :  80 
-  -----write16 36 :  2 
-  -----write16 40 :  122 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  122 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  122 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  32768 
-  -----write16 40 :  127 
-  -----write16 44 :  427 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  39 
-  -----write16 48 :  250 
-  -----write16 48 :  33 
-  -----write16 48 :  160 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  140 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  163 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  199 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  49 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  129 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  127 
-  -----write16 48 :  203 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  31 
-  -----write16 48 :  242 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  7 
-  -----write16 48 :  252 
-  -----write16 48 :  191 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  47 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  165 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  233 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  181 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  237 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  251 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  212 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  181 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  237 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  251 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  212 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  181 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  237 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  165 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  233 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  81 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  148 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  165 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  63 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  128 
-  -----write16 48 :  255 
-  -----write16 48 :  15 
-  -----write16 48 :  250 
-  -----write16 48 :  17 
-  -----write16 48 :  224 
-  -----write16 48 :  63 
-  -----write16 48 :  195 
-  -----write16 48 :  254 
-  -----write16 48 :  132 
-  -----write16 48 :  120 
-  -----write16 48 :  15 
-  -----write16 48 :  240 
-  -----write16 48 :  255 
-  -----write16 48 :  161 
-  -----write16 48 :  30 
-  -----write16 48 :  3 
-  -----write16 48 :  252 
-  -----write16 48 :  31 
-  -----write16 48 :  232 
-  -----write16 48 :  71 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 48 :  0 
-  -----write16 36 :  1 
-$$$$$$ sci write 1 :  1 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 36 :  2 
-  -----write16 40 :  1 
-  -----write16 44 :  2 
-  -----write16 36 :  3 
-  -----write16 104 :  25 
-NOW Wavetable size set to 80 
-  -----write16 108 :  82 
-About to sensor->setSlaveExposure 
-  -----write32 32 :  87270 
-  -----write16 72 :  61440 
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 87281 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-  -----write16 1064 :  1280 
-  -----write16 1072 :  1280 
-  -----write16 1068 :  1024 
-  -----write16 1088 :  1024 
-  -----write16 1040 :  1618 
-  -----write16 1048 :  1 
-  -----write16 1056 :  64 
-  -----write16 1044 :  1029 
-  -----write16 1052 :  1 
-  -----write16 1060 :  4 
-  -----write32 96 :  0 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-  -----write16 188 :  0 
-  -----write32 32 :  120 
-Starting record with a length of 2 frames 
-  -----write32 80 :  536862720 
-  -----write32 260 :  0 
-  -----write32 256 :  8204 
-  -----write16 72 :  61440 
-  -----write32 64 :  2 
-  -----write32 64 :  0 
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-UI init done
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
- NOW Starting rec data thread
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-  -----write16 188 :  0 
---- Using old settings --- Exposure time: 87281 (default: 94075)
-  -----write32 32 :  87270 
---- Saving settings --- Exposure time: 87281
-Record done, doing normal FPN correction 
-  -----write32 32 :  0 
---- Using old settings --- Exposure time: 87281 (default: 94075)
-  -----write32 32 :  87270 
---- Saving settings --- Exposure time: 87281
-imgGain set to 1.05214 
-Setting WB Matrix: 1.052145 1.052145 1.052145
-  -----write16 1264 :  4309 
-  -----write16 1268 :  4309 
-  -----write16 1272 :  4309 
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-  -----write16 1216 :  7842 
-  -----write16 1220 :  63174 
-  -----write16 1224 :  64577 
-  -----write16 1232 :  64285 
-  -----write16 1236 :  5691 
-  -----write16 1240 :  65140 
-  -----write16 1244 :  521 
-  -----write16 1248 :  61633 
-  -----write16 1252 :  6755 
-Setting WB Matrix: 1.420396 1.052145 1.666597
-  -----write16 1264 :  5817 
-  -----write16 1268 :  4309 
-  -----write16 1272 :  6826 
-  -----write32 1024 :  640 
-  -----write32 1092 :  25 
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  -----write32 32 :  86809 
---- Saving settings --- Exposure time: 86758
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbebee4c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbebee4c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
diff --git a/debug2 b/debug2
deleted file mode 100644
index a39bc73..0000000
--- a/debug2
+++ /dev/null
@@ -1,1688 +0,0 @@
-
-stdin: is not a tty
-Could not read calibration: "/etc/pointercal" 
-Folder cal found, no need to create 
-Folder cal/factoryFPN found, no need to create 
-Folder userFPN found, no need to create 
-Testing QDebug
-QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
-------------------------------------------------------------------- 
-true 
-Found 16 GB memory stick in slot 0 
-ioctl(): Remote I/O error
-ioctl returned -1
-Found 0 GB memory stick in slot 1 
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-  -----write16   0x600: 0x1
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-  -----write16   0x428: 0x510
-  -----write16   0x430: 0x500
-  -----write16   0x42c: 0x400
-  -----write16   0x440: 0x400
-  -----write16   0x410: 0x652
-  -----write16   0x418: 0x1
-  -----write16   0x420: 0x40
-  -----write16   0x414: 0x405
-  -----write16   0x41c: 0x1
-  -----write16   0x424: 0x4
-  -----write16   0x10: 0x100
-  -----write16   0x14: 0x100
-  -----write32   0x54: 0xf000
-  -----write32   0x58: 0x1e000
-  -----write32   0x5c: 0x2d000
-  -----write32   0x4c: 0x3c000
---- memory --- no remap
---- memory --- remap register: 0x0000
-  -----write32   0x400: 0x2f0
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x64190
-  -----write16   0x0: 0x5
-  -----write16   0x0: 0x4
-  $$$ SCI write   0x7e: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-  $$$ SCI write   0x57: 0xfc0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x57
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x57
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x57
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x57
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-SCI Read returned 4032 
-  $$$ SCI write   0x56: 0x2
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x56
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x56
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x56
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x4c: 0xfc0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x4c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x4c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x4c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x5a: 0xe1
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-  -----write16   0x4: 0x0
-  -----write16   0x4: 0x1
-  -----write16   0x4: 0x0
-datacorrect 131071 
-  $$$ SCI write   0x4c: 0xf00
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x4c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x4c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x4c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x56: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x56
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x56
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x56
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x37: 0x50
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x37
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x37
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x37
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x7a: 0x50
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x71: 0x7
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x71
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x71
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x71
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x2d: 0xe08e
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2d
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2d
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2d
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x2e: 0xfc1f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x2f: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2f
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2f
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x2f
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x5c: 0x2202
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x62: 0x4b76
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x62
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x62
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x62
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x74: 0x41f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x74
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x74
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x74
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x0
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-  $$$ SCI write   0x5b: 0x307f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x7b: 0x3007
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x3a: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x3b: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3b
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x3c: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3c
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x3d: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3d
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3d
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3d
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x3e: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3e
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x3f: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3f
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3f
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x3f
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x40: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x40
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x40
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x40
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x41: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x41
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x41
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x41
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x42: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x42
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x42
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x42
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x43: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x43
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x43
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x43
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x44: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x44
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x44
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x44
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x45: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x45
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x45
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x45
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x46: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x46
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x46
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x46
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x47: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x47
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x47
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x47
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x48: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x48
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x48
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x48
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x49: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x49
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x49
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x49
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x39: 0x1
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x39
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x39
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x39
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-  $$$ SCI write   0x51: 0x7f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x51
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x51
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x51
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x52: 0x7f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x52
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x52
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x52
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x53: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x53
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x53
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x53
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x8000
-  -----write16   0x28: 0x7f
-  -----write16   0x2c: 0x1ab
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x27
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x21
-  -----write16   0x30: 0xa0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe9
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xb5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xed
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfb
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0xd4
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xb5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xed
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfb
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0xd4
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xb5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xed
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe9
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x24: 0x1
-  $$$ SCI write   0x1: 0x1
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x5f370
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-  -----write32   0x20: 0x16f8e
-  -----write16   0xa0: 0x1
-  -----write16   0xa4: 0x1
-  -----write16   0xa8: 0x0
-  -----write32   0x60: 0x0
-  -----write16   0xb4: 0x0
-  -----write16   0xb0: 0x0
-  -----write16   0xac: 0x2
-  -----write16   0xbc: 0x0
-  -----write16   0xbc: 0x0
-  -----write16   0xbc: 0x0
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x20: 0x0
-Settings.period is 94575 
-  $$$ SCI write   0x5: 0x20
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x5
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x6: 0x51f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x6
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x6
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x6
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x7: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x8: 0x3ff
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x8
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x8
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x8
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-  $$$ SCI write   0x51: 0x7f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x51
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x51
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x51
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x52: 0x7f
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x52
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x52
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x52
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x53: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x53
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x53
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x53
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-  $$$ SCI write   0x1: 0x0
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x37: 0x50
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x37
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x37
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x37
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  $$$ SCI write   0x7a: 0x50
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x7a
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x8000
-  -----write16   0x28: 0x7f
-  -----write16   0x2c: 0x1ab
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x27
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x21
-  -----write16   0x30: 0xa0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x8c
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa3
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0xc7
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x31
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x81
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x7f
-  -----write16   0x30: 0xcb
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xf2
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x7
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0xbf
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0x2f
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe9
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xb5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xed
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfb
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0xd4
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xb5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xed
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfb
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0xd4
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xb5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xed
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe9
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x51
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x94
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa5
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x80
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xfa
-  -----write16   0x30: 0x11
-  -----write16   0x30: 0xe0
-  -----write16   0x30: 0x3f
-  -----write16   0x30: 0xc3
-  -----write16   0x30: 0xfe
-  -----write16   0x30: 0x84
-  -----write16   0x30: 0x78
-  -----write16   0x30: 0xf
-  -----write16   0x30: 0xf0
-  -----write16   0x30: 0xff
-  -----write16   0x30: 0xa1
-  -----write16   0x30: 0x1e
-  -----write16   0x30: 0x3
-  -----write16   0x30: 0xfc
-  -----write16   0x30: 0x1f
-  -----write16   0x30: 0xe8
-  -----write16   0x30: 0x47
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x30: 0x0
-  -----write16   0x24: 0x1
-  $$$ SCI write   0x1: 0x1
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x24: 0x2
-  -----write16   0x28: 0x1
-  -----write16   0x2c: 0x2
-  -----write16   0x24: 0x3
-  -----write16   0x68: 0x19
-NOW Wavetable size set to 80 
-  -----write16   0x6c: 0x52
-About to sensor->setSlaveExposure 
-  -----write32   0x20: 0x14286
-  -----write16   0x48: 0xf000
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 82577 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-  -----write16   0x428: 0x500
-  -----write16   0x430: 0x500
-  -----write16   0x42c: 0x400
-  -----write16   0x440: 0x400
-  -----write16   0x410: 0x652
-  -----write16   0x418: 0x1
-  -----write16   0x420: 0x40
-  -----write16   0x414: 0x405
-  -----write16   0x41c: 0x1
-  -----write16   0x424: 0x4
-  -----write32   0x60: 0x0
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-  -----write16   0xbc: 0x0
-  -----write32   0x20: 0x78
-Starting record with a length of 2 frames 
-  -----write32   0x50: 0x1fffe000
-  -----write32   0x104: 0x0
-  -----write32   0x100: 0x200c
-  -----write16   0x48: 0xf000
-  -----write32   0x40: 0x2
-  -----write32   0x40: 0x0
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-UI init done
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
- NOW Starting rec data thread
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-  -----write16   0xbc: 0x0
---- Using old settings --- Exposure time: 82577 (default: 94075)
-  -----write32   0x20: 0x14286
---- Saving settings --- Exposure time: 82577
-Record done, doing normal FPN correction 
-  -----write32   0x20: 0x0
---- Using old settings --- Exposure time: 82577 (default: 94075)
-  -----write32   0x20: 0x14286
---- Saving settings --- Exposure time: 82577
-imgGain set to 1.05377 
-Setting WB Matrix: 1.053769 1.053769 1.053769
-  -----write16   0x4f0: 0x10dc
-  -----write16   0x4f4: 0x10dc
-  -----write16   0x4f8: 0x10dc
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-  -----write16   0x4c0: 0x1ea2
-  -----write16   0x4c4: 0xf6c6
-  -----write16   0x4c8: 0xfc41
-  -----write16   0x4d0: 0xfb1d
-  -----write16   0x4d4: 0x163b
-  -----write16   0x4d8: 0xfe74
-  -----write16   0x4dc: 0x209
-  -----write16   0x4e0: 0xf0c1
-  -----write16   0x4e4: 0x1a63
-Setting WB Matrix: 1.422588 1.053769 1.669170
-  -----write16   0x4f0: 0x16c2
-  -----write16   0x4f4: 0x10dc
-  -----write16   0x4f8: 0x1ab4
-  -----write32   0x400: 0x280
-  -----write32   0x444: 0x19
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  -----write32   0x20: 0x140b9
---- Saving settings --- Exposure time: 82054
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbea104c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbea104c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
diff --git a/debug3 b/debug3
deleted file mode 100644
index 5a9f532..0000000
--- a/debug3
+++ /dev/null
@@ -1,1691 +0,0 @@
-Debugging has finished
-
-stdin: is not a tty
-Could not read calibration: "/etc/pointercal" 
-Folder cal found, no need to create 
-Folder cal/factoryFPN found, no need to create 
-Folder userFPN found, no need to create 
-Testing QDebug
-QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
-------------------------------------------------------------------- 
-true 
-Found 16 GB memory stick in slot 0 
-ioctl(): Remote I/O error
-ioctl returned -1
-Found 0 GB memory stick in slot 1 
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-   ---- Write16   0x600(0x300): 0x1
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x510
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-   ---- Write16   0x10(0x8): 0x100
-   ---- Write16   0x14(0xa): 0x100
-  -----write32   0x54: 0xf000
-  -----write32   0x58: 0x1e000
-  -----write32   0x5c: 0x2d000
-  -----write32   0x4c: 0x3c000
---- memory --- no remap
---- memory --- remap register: 0x0000
-  -----write32   0x400: 0x2f0
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x64190
-   ---- Write16   0x0(0x0): 0x5
-   ---- Write16   0x0(0x0): 0x4
-$$$$ SCI Write   0x7e: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-$$$$ SCI Write   0x57: 0xfc0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x57
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x57
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x57
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x57
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-SCI Read returned 4032 
-$$$$ SCI Write   0x56: 0x2
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x56
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x56
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x56
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x4c: 0xfc0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x4c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x4c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x4c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x5a: 0xe1
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-   ---- Write16   0x4(0x2): 0x0
-   ---- Write16   0x4(0x2): 0x1
-   ---- Write16   0x4(0x2): 0x0
-datacorrect 131071 
-$$$$ SCI Write   0x4c: 0xf00
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x4c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x4c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x4c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x56: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x56
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x56
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x56
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x37: 0x50
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x37
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x37
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x37
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x7a: 0x50
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x71: 0x7
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x71
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x71
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x71
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x2d: 0xe08e
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2d
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2d
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2d
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x2e: 0xfc1f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x2f: 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2f
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2f
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x2f
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x5c: 0x2202
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x62: 0x4b76
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x62
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x62
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x62
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x74: 0x41f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x74
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x74
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x74
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x0
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-$$$$ SCI Write   0x5b: 0x307f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x7b: 0x3007
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x3a: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x3b: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3b
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x3c: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3c
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x3d: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3d
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3d
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3d
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x3e: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3e
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x3f: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3f
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3f
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x3f
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x40: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x40
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x40
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x40
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x41: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x41
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x41
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x41
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x42: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x42
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x42
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x42
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x43: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x43
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x43
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x43
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x44: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x44
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x44
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x44
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x45: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x45
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x45
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x45
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x46: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x46
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x46
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x46
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x47: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x47
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x47
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x47
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x48: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x48
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x48
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x48
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x49: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x49
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x49
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x49
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x39: 0x1
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x39
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x39
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x39
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-$$$$ SCI Write   0x51: 0x7f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x51
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x51
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x51
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x52: 0x7f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x52
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x52
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x52
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x53: 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x53
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x53
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x53
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-$$$$ SCI Write   0x1: 0x1
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x5f370
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-  -----write32   0x20: 0x16f8e
-   ---- Write16   0xa0(0x50): 0x1
-   ---- Write16   0xa4(0x52): 0x1
-   ---- Write16   0xa8(0x54): 0x0
-  -----write32   0x60: 0x0
-   ---- Write16   0xb4(0x5a): 0x0
-   ---- Write16   0xb0(0x58): 0x0
-   ---- Write16   0xac(0x56): 0x2
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x20: 0x0
-Settings.period is 94575 
-$$$$ SCI Write   0x5: 0x20
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x5
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x6: 0x51f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x6
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x6
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x6
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x7: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x8: 0x3ff
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x8
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x8
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x8
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-$$$$ SCI Write   0x51: 0x7f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x51
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x51
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x51
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x52: 0x7f
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x52
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x52
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x52
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x53: 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x53
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x53
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x53
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-$$$$ SCI Write   0x1: 0x0
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x37: 0x50
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x37
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x37
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x37
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI Write   0x7a: 0x50
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x7a
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-$$$$ SCI Write   0x1: 0x1
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x24(0x12): 0x2
-   ---- Write16   0x28(0x14): 0x1
-   ---- Write16   0x2c(0x16): 0x2
-   ---- Write16   0x24(0x12): 0x3
-   ---- Write16   0x68(0x34): 0x19
-NOW Wavetable size set to 80 
-   ---- Write16   0x6c(0x36): 0x52
-About to sensor->setSlaveExposure 
-  -----write32   0x20: 0x16745
-   ---- Write16   0x48(0x24): 0xf000
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 91984 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x500
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-  -----write32   0x60: 0x0
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-   ---- Write16   0xbc(0x5e): 0x0
-  -----write32   0x20: 0x78
-Starting record with a length of 2 frames 
-  -----write32   0x50: 0x1fffe000
-  -----write32   0x104: 0x0
-  -----write32   0x100: 0x200c
-   ---- Write16   0x48(0x24): 0xf000
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-UI init done
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
- NOW Starting rec data thread
-  -----write32   0x40: 0x2
-  -----write32   0x40: 0x0
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-   ---- Write16   0xbc(0x5e): 0x0
---- Using old settings --- Exposure time: 91984 (default: 94075)
-  -----write32   0x20: 0x16745
---- Saving settings --- Exposure time: 91984
-Record done, doing normal FPN correction 
-  -----write32   0x20: 0x0
---- Using old settings --- Exposure time: 91984 (default: 94075)
-  -----write32   0x20: 0x16745
---- Saving settings --- Exposure time: 91984
-imgGain set to 1.04891 
-Setting WB Matrix: 1.048912 1.048912 1.048912
-   ---- Write16   0x4f0(0x278): 0x10c8
-   ---- Write16   0x4f4(0x27a): 0x10c8
-   ---- Write16   0x4f8(0x27c): 0x10c8
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-   ---- Write16   0x4c0(0x260): 0x1ea2
-   ---- Write16   0x4c4(0x262): 0xf6c6
-   ---- Write16   0x4c8(0x264): 0xfc41
-   ---- Write16   0x4d0(0x268): 0xfb1d
-   ---- Write16   0x4d4(0x26a): 0x163b
-   ---- Write16   0x4d8(0x26c): 0xfe74
-   ---- Write16   0x4dc(0x26e): 0x209
-   ---- Write16   0x4e0(0x270): 0xf0c1
-   ---- Write16   0x4e4(0x272): 0x1a63
-Setting WB Matrix: 1.416031 1.048912 1.661476
-   ---- Write16   0x4f0(0x278): 0x16a8
-   ---- Write16   0x4f4(0x27a): 0x10c8
-   ---- Write16   0x4f8(0x27c): 0x1a95
-  -----write32   0x400: 0x280
-  -----write32   0x444: 0x19
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  -----write32   0x20: 0x16578
---- Saving settings --- Exposure time: 91462
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeb674c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeb674c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
diff --git a/debug4 b/debug4
deleted file mode 100644
index 243c759..0000000
--- a/debug4
+++ /dev/null
@@ -1,1372 +0,0 @@
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-   ---- Write16   0x600(0x300): 0x1
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x510
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-   ---- Write16   0x10(0x8): 0x100
-   ---- Write16   0x14(0xa): 0x100
-  -----write32   0x54: 0xf000
-  -----write32   0x58: 0x1e000
-  -----write32   0x5c: 0x2d000
-  -----write32   0x4c: 0x3c000
---- memory --- no remap
---- memory --- remap register: 0x0000
-  -----write32   0x400: 0x2f0
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x64190
-   ---- Write16   0x0(0x0): 0x5
-   ---- Write16   0x0(0x0): 0x4
-$$$$ SCI Write   0x7e: 0x0
-==== SCI Read   0x7e
-   -> 0x1
-==== SCI Read   0x7e
-   -> 0x1
-==== SCI Read   0x7e
-   -> 0x1
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-$$$$ SCI Write   0x57: 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-SCI Read returned 4032 
-$$$$ SCI Write   0x56: 0x2
-==== SCI Read   0x56
-   -> 0x2
-==== SCI Read   0x56
-   -> 0x2
-==== SCI Read   0x56
-   -> 0x2
-$$$$ SCI Write   0x4c: 0xfc0
-==== SCI Read   0x4c
-   -> 0xfc0
-==== SCI Read   0x4c
-   -> 0xfc0
-==== SCI Read   0x4c
-   -> 0xfc0
-$$$$ SCI Write   0x5a: 0xe1
-==== SCI Read   0x5a
-   -> 0x61
-==== SCI Read   0x5a
-   -> 0x61
-==== SCI Read   0x5a
-   -> 0x61
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-   ---- Write16   0x4(0x2): 0x0
-   ---- Write16   0x4(0x2): 0x1
-   ---- Write16   0x4(0x2): 0x0
-datacorrect 131071 
-$$$$ SCI Write   0x4c: 0xf00
-==== SCI Read   0x4c
-   -> 0xf00
-==== SCI Read   0x4c
-   -> 0xf00
-==== SCI Read   0x4c
-   -> 0xf00
-$$$$ SCI Write   0x56: 0x0
-==== SCI Read   0x56
-   -> 0x0
-==== SCI Read   0x56
-   -> 0x0
-==== SCI Read   0x56
-   -> 0x0
-$$$$ SCI Write   0x37: 0x50
-==== SCI Read   0x37
-   -> 0x50
-==== SCI Read   0x37
-   -> 0x50
-==== SCI Read   0x37
-   -> 0x50
-$$$$ SCI Write   0x7a: 0x50
-==== SCI Read   0x7a
-   -> 0x50
-==== SCI Read   0x7a
-   -> 0x50
-==== SCI Read   0x7a
-   -> 0x50
-$$$$ SCI Write   0x71: 0x7
-==== SCI Read   0x71
-   -> 0x7
-==== SCI Read   0x71
-   -> 0x7
-==== SCI Read   0x71
-   -> 0x7
-$$$$ SCI Write   0x2d: 0xe08e
-==== SCI Read   0x2d
-   -> 0xe08e
-==== SCI Read   0x2d
-   -> 0xe08e
-==== SCI Read   0x2d
-   -> 0xe08e
-$$$$ SCI Write   0x2e: 0xfc1f
-==== SCI Read   0x2e
-   -> 0xfc1f
-==== SCI Read   0x2e
-   -> 0xfc1f
-==== SCI Read   0x2e
-   -> 0xfc1f
-$$$$ SCI Write   0x2f: 0x3
-==== SCI Read   0x2f
-   -> 0x3
-==== SCI Read   0x2f
-   -> 0x3
-==== SCI Read   0x2f
-   -> 0x3
-$$$$ SCI Write   0x5c: 0x2202
-==== SCI Read   0x5c
-   -> 0x2202
-==== SCI Read   0x5c
-   -> 0x2202
-==== SCI Read   0x5c
-   -> 0x2202
-$$$$ SCI Write   0x62: 0x4b76
-==== SCI Read   0x62
-   -> 0x4b76
-==== SCI Read   0x62
-   -> 0x4b76
-==== SCI Read   0x62
-   -> 0x4b76
-$$$$ SCI Write   0x74: 0x41f
-==== SCI Read   0x74
-   -> 0x41f
-==== SCI Read   0x74
-   -> 0x41f
-==== SCI Read   0x74
-   -> 0x41f
-==== SCI Read   0x0
-   -> 0xda02
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-$$$$ SCI Write   0x5b: 0x307f
-==== SCI Read   0x5b
-   -> 0x307f
-==== SCI Read   0x5b
-   -> 0x307f
-==== SCI Read   0x5b
-   -> 0x307f
-$$$$ SCI Write   0x7b: 0x3007
-==== SCI Read   0x7b
-   -> 0x3007
-==== SCI Read   0x7b
-   -> 0x3007
-==== SCI Read   0x7b
-   -> 0x3007
-$$$$ SCI Write   0x3a: 0x0
-==== SCI Read   0x3a
-   -> 0x0
-==== SCI Read   0x3a
-   -> 0x0
-==== SCI Read   0x3a
-   -> 0x0
-$$$$ SCI Write   0x3b: 0x0
-==== SCI Read   0x3b
-   -> 0x0
-==== SCI Read   0x3b
-   -> 0x0
-==== SCI Read   0x3b
-   -> 0x0
-$$$$ SCI Write   0x3c: 0x0
-==== SCI Read   0x3c
-   -> 0x0
-==== SCI Read   0x3c
-   -> 0x0
-==== SCI Read   0x3c
-   -> 0x0
-$$$$ SCI Write   0x3d: 0x0
-==== SCI Read   0x3d
-   -> 0x0
-==== SCI Read   0x3d
-   -> 0x0
-==== SCI Read   0x3d
-   -> 0x0
-$$$$ SCI Write   0x3e: 0x0
-==== SCI Read   0x3e
-   -> 0x0
-==== SCI Read   0x3e
-   -> 0x0
-==== SCI Read   0x3e
-   -> 0x0
-$$$$ SCI Write   0x3f: 0x0
-==== SCI Read   0x3f
-   -> 0x0
-==== SCI Read   0x3f
-   -> 0x0
-==== SCI Read   0x3f
-   -> 0x0
-$$$$ SCI Write   0x40: 0x0
-==== SCI Read   0x40
-   -> 0x0
-==== SCI Read   0x40
-   -> 0x0
-==== SCI Read   0x40
-   -> 0x0
-$$$$ SCI Write   0x41: 0x0
-==== SCI Read   0x41
-   -> 0x0
-==== SCI Read   0x41
-   -> 0x0
-==== SCI Read   0x41
-   -> 0x0
-$$$$ SCI Write   0x42: 0x0
-==== SCI Read   0x42
-   -> 0x0
-==== SCI Read   0x42
-   -> 0x0
-==== SCI Read   0x42
-   -> 0x0
-$$$$ SCI Write   0x43: 0x0
-==== SCI Read   0x43
-   -> 0x0
-==== SCI Read   0x43
-   -> 0x0
-==== SCI Read   0x43
-   -> 0x0
-$$$$ SCI Write   0x44: 0x0
-==== SCI Read   0x44
-   -> 0x0
-==== SCI Read   0x44
-   -> 0x0
-==== SCI Read   0x44
-   -> 0x0
-$$$$ SCI Write   0x45: 0x0
-==== SCI Read   0x45
-   -> 0x0
-==== SCI Read   0x45
-   -> 0x0
-==== SCI Read   0x45
-   -> 0x0
-$$$$ SCI Write   0x46: 0x0
-==== SCI Read   0x46
-   -> 0x0
-==== SCI Read   0x46
-   -> 0x0
-==== SCI Read   0x46
-   -> 0x0
-$$$$ SCI Write   0x47: 0x0
-==== SCI Read   0x47
-   -> 0x0
-==== SCI Read   0x47
-   -> 0x0
-==== SCI Read   0x47
-   -> 0x0
-$$$$ SCI Write   0x48: 0x0
-==== SCI Read   0x48
-   -> 0x0
-==== SCI Read   0x48
-   -> 0x0
-==== SCI Read   0x48
-   -> 0x0
-$$$$ SCI Write   0x49: 0x0
-==== SCI Read   0x49
-   -> 0x0
-==== SCI Read   0x49
-   -> 0x0
-==== SCI Read   0x49
-   -> 0x0
-$$$$ SCI Write   0x39: 0x1
-==== SCI Read   0x39
-   -> 0x0
-==== SCI Read   0x39
-   -> 0x0
-==== SCI Read   0x39
-   -> 0x0
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-$$$$ SCI Write   0x51: 0x7f
-==== SCI Read   0x51
-   -> 0x7f
-==== SCI Read   0x51
-   -> 0x7f
-==== SCI Read   0x51
-   -> 0x7f
-$$$$ SCI Write   0x52: 0x7f
-==== SCI Read   0x52
-   -> 0x7f
-==== SCI Read   0x52
-   -> 0x7f
-==== SCI Read   0x52
-   -> 0x7f
-$$$$ SCI Write   0x53: 0x3
-==== SCI Read   0x53
-   -> 0x3
-==== SCI Read   0x53
-   -> 0x3
-==== SCI Read   0x53
-   -> 0x3
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-$$$$ SCI Write   0x1: 0x1
-==== SCI Read   0x1
-   -> 0x1
-==== SCI Read   0x1
-   -> 0x1
-==== SCI Read   0x1
-   -> 0x1
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x5f370
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-  -----write32   0x20: 0x16f8e
-   ---- Write16   0xa0(0x50): 0x1
-   ---- Write16   0xa4(0x52): 0x1
-   ---- Write16   0xa8(0x54): 0x0
-  -----write32   0x60: 0x0
-   ---- Write16   0xb4(0x5a): 0x0
-   ---- Write16   0xb0(0x58): 0x0
-   ---- Write16   0xac(0x56): 0x2
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x20: 0x0
-Settings.period is 94575 
-$$$$ SCI Write   0x5: 0x20
-==== SCI Read   0x5
-   -> 0x20
-==== SCI Read   0x5
-   -> 0x20
-==== SCI Read   0x5
-   -> 0x20
-$$$$ SCI Write   0x6: 0x51f
-==== SCI Read   0x6
-   -> 0x51f
-==== SCI Read   0x6
-   -> 0x51f
-==== SCI Read   0x6
-   -> 0x51f
-$$$$ SCI Write   0x7: 0x0
-==== SCI Read   0x7
-   -> 0x0
-==== SCI Read   0x7
-   -> 0x0
-==== SCI Read   0x7
-   -> 0x0
-$$$$ SCI Write   0x8: 0x3ff
-==== SCI Read   0x8
-   -> 0x3ff
-==== SCI Read   0x8
-   -> 0x3ff
-==== SCI Read   0x8
-   -> 0x3ff
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-$$$$ SCI Write   0x51: 0x7f
-==== SCI Read   0x51
-   -> 0x7f
-==== SCI Read   0x51
-   -> 0x7f
-==== SCI Read   0x51
-   -> 0x7f
-$$$$ SCI Write   0x52: 0x7f
-==== SCI Read   0x52
-   -> 0x7f
-==== SCI Read   0x52
-   -> 0x7f
-==== SCI Read   0x52
-   -> 0x7f
-$$$$ SCI Write   0x53: 0x3
-==== SCI Read   0x53
-   -> 0x3
-==== SCI Read   0x53
-   -> 0x3
-==== SCI Read   0x53
-   -> 0x3
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-$$$$ SCI Write   0x1: 0x0
-==== SCI Read   0x1
-   -> 0x0
-==== SCI Read   0x1
-   -> 0x0
-==== SCI Read   0x1
-   -> 0x0
-$$$$ SCI Write   0x37: 0x50
-==== SCI Read   0x37
-   -> 0x50
-==== SCI Read   0x37
-   -> 0x50
-==== SCI Read   0x37
-   -> 0x50
-$$$$ SCI Write   0x7a: 0x50
-==== SCI Read   0x7a
-   -> 0x50
-==== SCI Read   0x7a
-   -> 0x50
-==== SCI Read   0x7a
-   -> 0x50
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-$$$$ SCI Write   0x1: 0x1
-==== SCI Read   0x1
-   -> 0x1
-==== SCI Read   0x1
-   -> 0x1
-==== SCI Read   0x1
-   -> 0x1
-   ---- Write16   0x68(0x34): 0x19
-NOW Wavetable size set to 80 
-   ---- Write16   0x6c(0x36): 0x52
-About to sensor->setSlaveExposure 
-  -----write32   0x20: 0x154e6
-   ---- Write16   0x48(0x24): 0xf000
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 87281 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x500
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-  -----write32   0x60: 0x0
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-   ---- Write16   0xbc(0x5e): 0x0
-  -----write32   0x20: 0x78
-Starting record with a length of 2 frames 
-  -----write32   0x50: 0x1fffe000
-  -----write32   0x104: 0x0
-  -----write32   0x100: 0x200c
-   ---- Write16   0x48(0x24): 0xf000
-  -----write32   0x40: 0x2
-  -----write32   0x40: 0x0
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-UI init done
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
- NOW Starting rec data thread
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-   ---- Write16   0xbc(0x5e): 0x0
---- Using old settings --- Exposure time: 87281 (default: 94075)
-  -----write32   0x20: 0x154e6
---- Saving settings --- Exposure time: 87281
-Record done, doing normal FPN correction 
-  -----write32   0x20: 0x0
---- Using old settings --- Exposure time: 87281 (default: 94075)
-  -----write32   0x20: 0x154e6
---- Saving settings --- Exposure time: 87281
-imgGain set to 1.05431 
-Setting WB Matrix: 1.054311 1.054311 1.054311
-   ---- Write16   0x4f0(0x278): 0x10de
-   ---- Write16   0x4f4(0x27a): 0x10de
-   ---- Write16   0x4f8(0x27c): 0x10de
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-   ---- Write16   0x4c0(0x260): 0x1ea2
-   ---- Write16   0x4c4(0x262): 0xf6c6
-   ---- Write16   0x4c8(0x264): 0xfc41
-   ---- Write16   0x4d0(0x268): 0xfb1d
-   ---- Write16   0x4d4(0x26a): 0x163b
-   ---- Write16   0x4d8(0x26c): 0xfe74
-   ---- Write16   0x4dc(0x26e): 0x209
-   ---- Write16   0x4e0(0x270): 0xf0c1
-   ---- Write16   0x4e4(0x272): 0x1a63
-Setting WB Matrix: 1.423320 1.054311 1.670029
-   ---- Write16   0x4f0(0x278): 0x16c5
-   ---- Write16   0x4f4(0x27a): 0x10de
-   ---- Write16   0x4f8(0x27c): 0x1ab8
-  -----write32   0x400: 0x280
-  -----write32   0x444: 0x19
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  -----write32   0x20: 0x15319
---- Saving settings --- Exposure time: 86758
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbed3b4c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbed3b4c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
diff --git a/debug5 b/debug5
deleted file mode 100644
index 0bc6fae..0000000
--- a/debug5
+++ /dev/null
@@ -1,1086 +0,0 @@
-
-stdin: is not a tty
-Could not read calibration: "/etc/pointercal" 
-Folder cal found, no need to create 
-Folder cal/factoryFPN found, no need to create 
-Folder userFPN found, no need to create 
-Testing QDebug
-QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
-------------------------------------------------------------------- 
-true 
-Found 16 GB memory stick in slot 0 
-ioctl(): Remote I/O error
-ioctl returned -1
-Found 0 GB memory stick in slot 1 
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-   ---- Write16   0x600(0x300): 0x1
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x510
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-   ---- Write16   0x10(0x8): 0x100
-   ---- Write16   0x14(0xa): 0x100
-  -----write32   0x54: 0xf000
-  -----write32   0x58: 0x1e000
-  -----write32   0x5c: 0x2d000
-  -----write32   0x4c: 0x3c000
---- memory --- no remap
---- memory --- remap register: 0x0000
-  -----write32   0x400: 0x2f0
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x64190
-   ---- Write16   0x0(0x0): 0x5
-   ---- Write16   0x0(0x0): 0x4
-$$$$ SCI Write   0x7e: 0x0
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-$$$$ SCI Write   0x57: 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-SCI Read returned 4032 
-$$$$ SCI Write   0x56: 0x2
-$$$$ SCI Write   0x4c: 0xfc0
-$$$$ SCI Write   0x5a: 0xe1
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-   ---- Write16   0x4(0x2): 0x0
-   ---- Write16   0x4(0x2): 0x1
-   ---- Write16   0x4(0x2): 0x0
-datacorrect 131071 
-$$$$ SCI Write   0x4c: 0xf00
-$$$$ SCI Write   0x56: 0x0
-$$$$ SCI Write   0x37: 0x50
-$$$$ SCI Write   0x7a: 0x50
-$$$$ SCI Write   0x71: 0x7
-$$$$ SCI Write   0x2d: 0xe08e
-$$$$ SCI Write   0x2e: 0xfc1f
-$$$$ SCI Write   0x2f: 0x3
-$$$$ SCI Write   0x5c: 0x2202
-$$$$ SCI Write   0x62: 0x4b76
-$$$$ SCI Write   0x74: 0x41f
-==== SCI Read   0x0
-   -> 0xda02
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-$$$$ SCI Write   0x5b: 0x307f
-$$$$ SCI Write   0x7b: 0x3007
-$$$$ SCI Write   0x3a: 0x0
-$$$$ SCI Write   0x3b: 0x0
-$$$$ SCI Write   0x3c: 0x0
-$$$$ SCI Write   0x3d: 0x0
-$$$$ SCI Write   0x3e: 0x0
-$$$$ SCI Write   0x3f: 0x0
-$$$$ SCI Write   0x40: 0x0
-$$$$ SCI Write   0x41: 0x0
-$$$$ SCI Write   0x42: 0x0
-$$$$ SCI Write   0x43: 0x0
-$$$$ SCI Write   0x44: 0x0
-$$$$ SCI Write   0x45: 0x0
-$$$$ SCI Write   0x46: 0x0
-$$$$ SCI Write   0x47: 0x0
-$$$$ SCI Write   0x48: 0x0
-$$$$ SCI Write   0x49: 0x0
-$$$$ SCI Write   0x39: 0x1
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-$$$$ SCI Write   0x51: 0x7f
-$$$$ SCI Write   0x52: 0x7f
-$$$$ SCI Write   0x53: 0x3
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-$$$$ SCI Write   0x1: 0x1
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x5f370
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-  -----write32   0x20: 0x16f8e
-   ---- Write16   0xa0(0x50): 0x1
-   ---- Write16   0xa4(0x52): 0x1
-   ---- Write16   0xa8(0x54): 0x0
-  -----write32   0x60: 0x0
-   ---- Write16   0xb4(0x5a): 0x0
-   ---- Write16   0xb0(0x58): 0x0
-   ---- Write16   0xac(0x56): 0x2
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x20: 0x0
-Settings.period is 94575 
-$$$$ SCI Write   0x5: 0x20
-$$$$ SCI Write   0x6: 0x51f
-$$$$ SCI Write   0x7: 0x0
-$$$$ SCI Write   0x8: 0x3ff
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-$$$$ SCI Write   0x51: 0x7f
-$$$$ SCI Write   0x52: 0x7f
-$$$$ SCI Write   0x53: 0x3
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-$$$$ SCI Write   0x1: 0x0
-$$$$ SCI Write   0x37: 0x50
-$$$$ SCI Write   0x7a: 0x50
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-$$$$ SCI Write   0x1: 0x1
-   ---- Write16   0x68(0x34): 0x19
-NOW Wavetable size set to 80 
-   ---- Write16   0x6c(0x36): 0x52
-About to sensor->setSlaveExposure 
-  -----write32   0x20: 0x148a6
-   ---- Write16   0x48(0x24): 0xf000
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 84145 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x500
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-  -----write32   0x60: 0x0
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-   ---- Write16   0xbc(0x5e): 0x0
-  -----write32   0x20: 0x78
-Starting record with a length of 2 frames 
-  -----write32   0x50: 0x1fffe000
-  -----write32   0x104: 0x0
-  -----write32   0x100: 0x200c
-   ---- Write16   0x48(0x24): 0xf000
-  -----write32   0x40: 0x2
-  -----write32   0x40: 0x0
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-UI init done
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
- NOW Starting rec data thread
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-   ---- Write16   0xbc(0x5e): 0x0
---- Using old settings --- Exposure time: 84145 (default: 94075)
-  -----write32   0x20: 0x148a6
---- Saving settings --- Exposure time: 84145
-Record done, doing normal FPN correction 
-  -----write32   0x20: 0x0
---- Using old settings --- Exposure time: 84145 (default: 94075)
-  -----write32   0x20: 0x148a6
---- Saving settings --- Exposure time: 84145
-imgGain set to 1.05621 
-Setting WB Matrix: 1.056215 1.056215 1.056215
-   ---- Write16   0x4f0(0x278): 0x10e6
-   ---- Write16   0x4f4(0x27a): 0x10e6
-   ---- Write16   0x4f8(0x27c): 0x10e6
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-   ---- Write16   0x4c0(0x260): 0x1ea2
-   ---- Write16   0x4c4(0x262): 0xf6c6
-   ---- Write16   0x4c8(0x264): 0xfc41
-   ---- Write16   0x4d0(0x268): 0xfb1d
-   ---- Write16   0x4d4(0x26a): 0x163b
-   ---- Write16   0x4d8(0x26c): 0xfe74
-   ---- Write16   0x4dc(0x26e): 0x209
-   ---- Write16   0x4e0(0x270): 0xf0c1
-   ---- Write16   0x4e4(0x272): 0x1a63
-Setting WB Matrix: 1.425890 1.056215 1.673044
-   ---- Write16   0x4f0(0x278): 0x16d0
-   ---- Write16   0x4f4(0x27a): 0x10e6
-   ---- Write16   0x4f8(0x27c): 0x1ac4
-  -----write32   0x400: 0x280
-  -----write32   0x444: 0x19
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  -----write32   0x20: 0x146d9
---- Saving settings --- Exposure time: 83622
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeadf4c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbeadf4c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
diff --git a/debug6 b/debug6
deleted file mode 100644
index 2c1f5cc..0000000
--- a/debug6
+++ /dev/null
@@ -1,1086 +0,0 @@
-
-stdin: is not a tty
-Could not read calibration: "/etc/pointercal" 
-Folder cal found, no need to create 
-Folder cal/factoryFPN found, no need to create 
-Folder userFPN found, no need to create 
-Testing QDebug
-QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
-------------------------------------------------------------------- 
-true 
-Found 16 GB memory stick in slot 0 
-ioctl(): Remote I/O error
-ioctl returned -1
-Found 0 GB memory stick in slot 1 
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-   ---- Write16   0x600(0x300): 0x1
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x510
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-   ---- Write16   0x10(0x8): 0x100
-   ---- Write16   0x14(0xa): 0x100
-  -----write32   0x54: 0xf000
-  -----write32   0x58: 0x1e000
-  -----write32   0x5c: 0x2d000
-  -----write32   0x4c: 0x3c000
---- memory --- no remap
---- memory --- remap register: 0x0000
-  -----write32   0x400: 0x2f0
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x64190
-   ---- Write16   0x0(0x0): 0x5
-   ---- Write16   0x0(0x0): 0x4
-(1)$$$$ SCI Write   0x7e: 0x0
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-(2)$$$$ SCI Write   0x57: 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-SCI Read returned 4032 
-(3)$$$$ SCI Write   0x56: 0x2
-(4)$$$$ SCI Write   0x4c: 0xfc0
-(5)$$$$ SCI Write   0x5a: 0xe1
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-   ---- Write16   0x4(0x2): 0x0
-   ---- Write16   0x4(0x2): 0x1
-   ---- Write16   0x4(0x2): 0x0
-datacorrect 131071 
-(6)$$$$ SCI Write   0x4c: 0xf00
-(7)$$$$ SCI Write   0x56: 0x0
-(8)$$$$ SCI Write   0x37: 0x50
-(9)$$$$ SCI Write   0x7a: 0x50
-(10)$$$$ SCI Write   0x71: 0x7
-(11)$$$$ SCI Write   0x2d: 0xe08e
-(12)$$$$ SCI Write   0x2e: 0xfc1f
-(13)$$$$ SCI Write   0x2f: 0x3
-(14)$$$$ SCI Write   0x5c: 0x2202
-(15)$$$$ SCI Write   0x62: 0x4b76
-(16)$$$$ SCI Write   0x74: 0x41f
-==== SCI Read   0x0
-   -> 0xda02
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-(17)$$$$ SCI Write   0x5b: 0x307f
-(18)$$$$ SCI Write   0x7b: 0x3007
-(19)$$$$ SCI Write   0x3a: 0x0
-(20)$$$$ SCI Write   0x3b: 0x0
-(21)$$$$ SCI Write   0x3c: 0x0
-(22)$$$$ SCI Write   0x3d: 0x0
-(23)$$$$ SCI Write   0x3e: 0x0
-(24)$$$$ SCI Write   0x3f: 0x0
-(25)$$$$ SCI Write   0x40: 0x0
-(26)$$$$ SCI Write   0x41: 0x0
-(27)$$$$ SCI Write   0x42: 0x0
-(28)$$$$ SCI Write   0x43: 0x0
-(29)$$$$ SCI Write   0x44: 0x0
-(30)$$$$ SCI Write   0x45: 0x0
-(31)$$$$ SCI Write   0x46: 0x0
-(32)$$$$ SCI Write   0x47: 0x0
-(33)$$$$ SCI Write   0x48: 0x0
-(34)$$$$ SCI Write   0x49: 0x0
-(35)$$$$ SCI Write   0x39: 0x1
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-(36)$$$$ SCI Write   0x51: 0x7f
-(37)$$$$ SCI Write   0x52: 0x7f
-(38)$$$$ SCI Write   0x53: 0x3
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-(39)$$$$ SCI Write   0x1: 0x1
-  -----write32   0x1c: 0x61a80
-  -----write32   0x20: 0x5f370
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-  -----write32   0x20: 0x16f8e
-   ---- Write16   0xa0(0x50): 0x1
-   ---- Write16   0xa4(0x52): 0x1
-   ---- Write16   0xa8(0x54): 0x0
-  -----write32   0x60: 0x0
-   ---- Write16   0xb4(0x5a): 0x0
-   ---- Write16   0xb0(0x58): 0x0
-   ---- Write16   0xac(0x56): 0x2
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-   ---- Write16   0xbc(0x5e): 0x0
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x20: 0x0
-Settings.period is 94575 
-(40)$$$$ SCI Write   0x5: 0x20
-(41)$$$$ SCI Write   0x6: 0x51f
-(42)$$$$ SCI Write   0x7: 0x0
-(43)$$$$ SCI Write   0x8: 0x3ff
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  -----write32   0x1c: 0x1716f
-(44)$$$$ SCI Write   0x51: 0x7f
-(45)$$$$ SCI Write   0x52: 0x7f
-(46)$$$$ SCI Write   0x53: 0x3
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-(47)$$$$ SCI Write   0x1: 0x0
-(48)$$$$ SCI Write   0x37: 0x50
-(49)$$$$ SCI Write   0x7a: 0x50
-$$$$ SCI WriteBuf   0x7f: length 427
-   ---- Write16   0x24(0x12): 0x8000
-   ---- Write16   0x28(0x14): 0x7f
-   ---- Write16   0x2c(0x16): 0x1ab
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x27
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x21
-   ---- Write16   0x30(0x18): 0xa0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x8c
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa3
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0xc7
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x31
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x81
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x7f
-   ---- Write16   0x30(0x18): 0xcb
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xf2
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x7
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0xbf
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0x2f
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfb
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0xd4
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xb5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xed
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe9
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x51
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x94
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa5
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x80
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xfa
-   ---- Write16   0x30(0x18): 0x11
-   ---- Write16   0x30(0x18): 0xe0
-   ---- Write16   0x30(0x18): 0x3f
-   ---- Write16   0x30(0x18): 0xc3
-   ---- Write16   0x30(0x18): 0xfe
-   ---- Write16   0x30(0x18): 0x84
-   ---- Write16   0x30(0x18): 0x78
-   ---- Write16   0x30(0x18): 0xf
-   ---- Write16   0x30(0x18): 0xf0
-   ---- Write16   0x30(0x18): 0xff
-   ---- Write16   0x30(0x18): 0xa1
-   ---- Write16   0x30(0x18): 0x1e
-   ---- Write16   0x30(0x18): 0x3
-   ---- Write16   0x30(0x18): 0xfc
-   ---- Write16   0x30(0x18): 0x1f
-   ---- Write16   0x30(0x18): 0xe8
-   ---- Write16   0x30(0x18): 0x47
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x30(0x18): 0x0
-   ---- Write16   0x24(0x12): 0x1
-(50)$$$$ SCI Write   0x1: 0x1
-   ---- Write16   0x68(0x34): 0x19
-NOW Wavetable size set to 80 
-   ---- Write16   0x6c(0x36): 0x52
-About to sensor->setSlaveExposure 
-  -----write32   0x20: 0x13e90
-   ---- Write16   0x48(0x24): 0xf000
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 81532 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   ---- Write16   0x428(0x214): 0x500
-   ---- Write16   0x430(0x218): 0x500
-   ---- Write16   0x42c(0x216): 0x400
-   ---- Write16   0x440(0x220): 0x400
-   ---- Write16   0x410(0x208): 0x652
-   ---- Write16   0x418(0x20c): 0x1
-   ---- Write16   0x420(0x210): 0x40
-   ---- Write16   0x414(0x20a): 0x405
-   ---- Write16   0x41c(0x20e): 0x1
-   ---- Write16   0x424(0x212): 0x4
-  -----write32   0x60: 0x0
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-   ---- Write16   0xbc(0x5e): 0x0
-  -----write32   0x20: 0x78
-Starting record with a length of 2 frames 
-  -----write32   0x50: 0x1fffe000
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-UI init done
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98
- NOW Starting rec data thread
-  -----write32   0x104: 0x0
-  -----write32   0x100: 0x200c
-   ---- Write16   0x48(0x24): 0xf000
-  -----write32   0x40: 0x2
-  -----write32   0x40: 0x0
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-   ---- Write16   0xbc(0x5e): 0x0
---- Using old settings --- Exposure time: 81532 (default: 94075)
-  -----write32   0x20: 0x13e90
---- Saving settings --- Exposure time: 81532
-Record done, doing normal FPN correction 
-  -----write32   0x20: 0x0
---- Using old settings --- Exposure time: 81532 (default: 94075)
-  -----write32   0x20: 0x13e90
---- Saving settings --- Exposure time: 81532
-imgGain set to 1.05296 
-Setting WB Matrix: 1.052956 1.052956 1.052956
-   ---- Write16   0x4f0(0x278): 0x10d8
-   ---- Write16   0x4f4(0x27a): 0x10d8
-   ---- Write16   0x4f8(0x27c): 0x10d8
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-   ---- Write16   0x4c0(0x260): 0x1ea2
-   ---- Write16   0x4c4(0x262): 0xf6c6
-   ---- Write16   0x4c8(0x264): 0xfc41
-   ---- Write16   0x4d0(0x268): 0xfb1d
-   ---- Write16   0x4d4(0x26a): 0x163b
-   ---- Write16   0x4d8(0x26c): 0xfe74
-   ---- Write16   0x4dc(0x26e): 0x209
-   ---- Write16   0x4e0(0x270): 0xf0c1
-   ---- Write16   0x4e4(0x272): 0x1a63
-Setting WB Matrix: 1.421491 1.052956 1.667883
-   ---- Write16   0x4f0(0x278): 0x16be
-   ---- Write16   0x4f4(0x27a): 0x10d8
-   ---- Write16   0x4f8(0x27c): 0x1aaf
-  -----write32   0x400: 0x280
-  -----write32   0x444: 0x19
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  -----write32   0x20: 0x13c67
---- Saving settings --- Exposure time: 81009
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbe9054c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbe9054c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
diff --git a/debug7 b/debug7
deleted file mode 100644
index 6be13d6..0000000
--- a/debug7
+++ /dev/null
@@ -1,229 +0,0 @@
-
-Debugging starts
-stdin: is not a tty
-Listening on port 10001
-Remote debugging from host 192.168.1.187
-Process /usr/bin/camApp created; pid = 18103
-Could not read calibration: "/etc/pointercal" 
-Folder cal found, no need to create 
-Folder cal/factoryFPN found, no need to create 
-Folder userFPN found, no need to create 
-Testing QDebug
-QMetaObject::connectSlotsByName: No matching signal for on_MainWindowTimer()
-------------------------------------------------------------------- 
-true 
-Found 16 GB memory stick in slot 0 
-ioctl(): Remote I/O error
-ioctl returned -1
-Found 0 GB memory stick in slot 1 
-Status readback: 0 16 7 128 
-Read in serial number 10263 
-   (1)---- Write16   0x600(0x300): 0x1
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   (2)---- Write16   0x428(0x214): 0x510
-   (3)---- Write16   0x430(0x218): 0x500
-   (4)---- Write16   0x42c(0x216): 0x400
-   (5)---- Write16   0x440(0x220): 0x400
-   (6)---- Write16   0x410(0x208): 0x652
-   (7)---- Write16   0x418(0x20c): 0x1
-   (8)---- Write16   0x420(0x210): 0x40
-   (9)---- Write16   0x414(0x20a): 0x405
-   (10)---- Write16   0x41c(0x20e): 0x1
-   (11)---- Write16   0x424(0x212): 0x4
-   (12)---- Write16   0x10(0x8): 0x100
-   (13)---- Write16   0x14(0xa): 0x100
-  (14)-----write32   0x54: 0xf000
-  (15)-----write32   0x58: 0x1e000
-  (16)-----write32   0x5c: 0x2d000
-  (17)-----write32   0x4c: 0x3c000
---- memory --- no remap
---- memory --- remap register: 0x0000
-  (18)-----write32   0x400: 0x2f0
-  (19)-----write32   0x1c: 0x61a80
-  (20)-----write32   0x20: 0x64190
-   (21)---- Write16   0x0(0x0): 0x5
-   (22)---- Write16   0x0(0x0): 0x4
-(1)$$$$ SCI Write   0x7e: 0x0
-SCI readback wrong, address:  126  expected:  0  got:  1 1 1 
-(2)$$$$ SCI Write   0x57: 0xfc0
-==== SCI Read   0x57
-   -> 0xfc0
-SCI Read returned 4032 
-(3)$$$$ SCI Write   0x56: 0x2
-(4)$$$$ SCI Write   0x4c: 0xfc0
-(5)$$$$ SCI Write   0x5a: 0xe1
-SCI readback wrong, address:  90  expected:  225  got:  97 97 97 
-   (23)---- Write16   0x4(0x2): 0x0
-   (24)---- Write16   0x4(0x2): 0x1
-   (25)---- Write16   0x4(0x2): 0x0
-datacorrect 131071 
-(6)$$$$ SCI Write   0x4c: 0xf00
-(7)$$$$ SCI Write   0x56: 0x0
-(8)$$$$ SCI Write   0x37: 0x50
-(9)$$$$ SCI Write   0x7a: 0x50
-(10)$$$$ SCI Write   0x71: 0x7
-(11)$$$$ SCI Write   0x2d: 0xe08e
-(12)$$$$ SCI Write   0x2e: 0xfc1f
-(13)$$$$ SCI Write   0x2f: 0x3
-(14)$$$$ SCI Write   0x5c: 0x2202
-(15)$$$$ SCI Write   0x62: 0x4b76
-(16)$$$$ SCI Write   0x74: 0x41f
-==== SCI Read   0x0
-   -> 0xda02
-Read rev of  55810 
-Found LUX1310 sensor, silicon revision 2 
-(17)$$$$ SCI Write   0x5b: 0x307f
-(18)$$$$ SCI Write   0x7b: 0x3007
-(19)$$$$ SCI Write   0x3a: 0x0
-(20)$$$$ SCI Write   0x3b: 0x0
-(21)$$$$ SCI Write   0x3c: 0x0
-(22)$$$$ SCI Write   0x3d: 0x0
-(23)$$$$ SCI Write   0x3e: 0x0
-(24)$$$$ SCI Write   0x3f: 0x0
-(25)$$$$ SCI Write   0x40: 0x0
-(26)$$$$ SCI Write   0x41: 0x0
-(27)$$$$ SCI Write   0x42: 0x0
-(28)$$$$ SCI Write   0x43: 0x0
-(29)$$$$ SCI Write   0x44: 0x0
-(30)$$$$ SCI Write   0x45: 0x0
-(31)$$$$ SCI Write   0x46: 0x0
-(32)$$$$ SCI Write   0x47: 0x0
-(33)$$$$ SCI Write   0x48: 0x0
-(34)$$$$ SCI Write   0x49: 0x0
-(35)$$$$ SCI Write   0x39: 0x1
-SCI readback wrong, address:  57  expected:  1  got:  0 0 0 
-(36)$$$$ SCI Write   0x51: 0x7f
-(37)$$$$ SCI Write   0x52: 0x7f
-(38)$$$$ SCI Write   0x53: 0x3
-$$$$ SCI WriteBuf   0x7f: length 427
-(39)$$$$ SCI Write   0x1: 0x1
-  (26)-----write32   0x1c: 0x61a80
-  (27)-----write32   0x20: 0x5f370
-getMinFramePeriod: 0.000945744 
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  (28)-----write32   0x1c: 0x1716f
-  (29)-----write32   0x20: 0x16f8e
-   (30)---- Write16   0xa0(0x50): 0x1
-   (31)---- Write16   0xa4(0x52): 0x1
-   (32)---- Write16   0xa8(0x54): 0x0
-  (33)-----write32   0x60: 0x0
-   (34)---- Write16   0xb4(0x5a): 0x0
-   (35)---- Write16   0xb0(0x58): 0x0
-   (36)---- Write16   0xac(0x56): 0x2
-   (37)---- Write16   0xbc(0x5e): 0x0
-   (38)---- Write16   0xbc(0x5e): 0x0
-   (39)---- Write16   0xbc(0x5e): 0x0
-getMinFramePeriod: 0.000945744 
-getMinFramePeriod: 0.000945744 
-  (40)-----write32   0x20: 0x0
-Settings.period is 94575 
-(40)$$$$ SCI Write   0x5: 0x20
-(41)$$$$ SCI Write   0x6: 0x51f
-(42)$$$$ SCI Write   0x7: 0x0
-(43)$$$$ SCI Write   0x8: 0x3ff
-Requested period 0.00094575 
-getMinFramePeriod: 0.000945744 
-  (41)-----write32   0x1c: 0x1716f
-(44)$$$$ SCI Write   0x51: 0x7f
-(45)$$$$ SCI Write   0x52: 0x7f
-(46)$$$$ SCI Write   0x53: 0x3
-getMinFramePeriod: 0.000945744 
-currentPeriod 94575 Min period 94575 
-getMinFramePeriod: 0.000945744 
-(47)$$$$ SCI Write   0x1: 0x0
-(48)$$$$ SCI Write   0x37: 0x50
-(49)$$$$ SCI Write   0x7a: 0x50
-$$$$ SCI WriteBuf   0x7f: length 427
-(50)$$$$ SCI Write   0x1: 0x1
-   (42)---- Write16   0x68(0x34): 0x19
-NOW Wavetable size set to 80 
-   (43)---- Write16   0x6c(0x36): 0x52
-About to sensor->setSlaveExposure 
-  (44)-----write32   0x20: 0x12e5a
-   (45)---- Write16   0x48(0x24): 0xf000
-About to sensor->loadADCOffsetsFromFile 
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-
-Set imager settings:
-hRes 1280 vRes 1024 stride 1280 hOffset 0 vOffset 0 exposure 77351 period 94575 frameSizeWords 61440 recRegionSizeFrames 8734 
---- settings --- saving 
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   (46)---- Write16   0x428(0x214): 0x500
-   (47)---- Write16   0x430(0x218): 0x500
-   (48)---- Write16   0x42c(0x216): 0x400
-   (49)---- Write16   0x440(0x220): 0x400
-   (50)---- Write16   0x410(0x208): 0x652
-   (51)---- Write16   0x418(0x20c): 0x1
-   (52)---- Write16   0x420(0x210): 0x40
-   (53)---- Write16   0x414(0x20a): 0x405
-   (54)---- Write16   0x41c(0x20e): 0x1
-   (55)---- Write16   0x424(0x212): 0x4
-  (56)-----write32   0x60: 0x0
-Error: colGain file /opt/camera/cal:dcgL.bin not found
-Error while loading cal gain - resetting to 1.0
-loadFPNFromFile: File not found fpn:fpn_1280x1024off0x0_G1_WT80.raw
-   (57)---- Write16   0xbc(0x5e): 0x0
-testing print 2
-Opening frame GPIO
-Starting encoder threads
-Trying to set encoderThread realtime prio = 98SCHED_FIFO OKThread priority is 98UI init done
-
- NOW Starting rec data thread
-  (58)-----write32   0x20: 0x78
-Starting record with a length of 2 frames 
-  (59)-----write32   0x50: 0x1fffe000
-  (60)-----write32   0x104: 0x0
-  (61)-----write32   0x100: 0x200c
-   (62)---- Write16   0x48(0x24): 0xf000
-  (63)-----write32   0x40: 0x2
-  (64)-----write32   0x40: 0x0
-EndOfRec
---- Sequencer --- Total record region size: 8734 
-   (65)---- Write16   0xbc(0x5e): 0x0
---- Using old settings --- Exposure time: 77351 (default: 94075)
-  (66)-----write32   0x20: 0x12e5a
---- Saving settings --- Exposure time: 77351
-Record done, doing normal FPN correction 
-  (67)-----write32   0x20: 0x0
---- Using old settings --- Exposure time: 77351 (default: 94075)
-  (68)-----write32   0x20: 0x12e5a
---- Saving settings --- Exposure time: 77351
-imgGain set to 1.05594 
-Setting WB Matrix: 1.055942 1.055942 1.055942
-   (69)---- Write16   0x4f0(0x278): 0x10e5
-   (70)---- Write16   0x4f4(0x27a): 0x10e5
-   (71)---- Write16   0x4f8(0x27c): 0x10e5
-About to write file... 
-FPN correction done 
-Setting Color Matrix:
-	1.914551 -0.576660 -0.234131
-	-0.305420 1.389404 -0.096680
-	0.127197 -0.952881 1.649170
-
-   (72)---- Write16   0x4c0(0x260): 0x1ea2
-   (73)---- Write16   0x4c4(0x262): 0xf6c6
-   (74)---- Write16   0x4c8(0x264): 0xfc41
-   (75)---- Write16   0x4d0(0x268): 0xfb1d
-   (76)---- Write16   0x4d4(0x26a): 0x163b
-   (77)---- Write16   0x4d8(0x26c): 0xfe74
-   (78)---- Write16   0x4dc(0x26e): 0x209
-   (79)---- Write16   0x4e0(0x270): 0xf0c1
-   (80)---- Write16   0x4e4(0x272): 0x1a63
-Setting WB Matrix: 1.425522 1.055942 1.672613
-   (81)---- Write16   0x4f0(0x278): 0x16ce
-   (82)---- Write16   0x4f4(0x27a): 0x10e5
-   (83)---- Write16   0x4f8(0x27c): 0x1ac3
-  (84)-----write32   0x400: 0x280
-  (85)-----write32   0x444: 0x19
-QMetaObject::connectSlotsByName: No matching signal for on_StatusWindowTimer()
-  (86)-----write32   0x20: 0x12c31
---- Saving settings --- Exposure time: 76828
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbecd44c8, name = "CamMainWindow") 
-keyboardBase::saveFocusWidget lastFocusedWidget set to CamMainWindow(0xbecd44c8, name = "CamMainWindow") 
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-QLock::lock(): Invalid argument
-QLock::unlock(): Unlock without corresponding lock
-
diff --git a/io.py b/io.py
deleted file mode 100644
index 6f8a354..0000000
--- a/io.py
+++ /dev/null
@@ -1,35 +0,0 @@
-import time
-import pdb
-
-
-
-
-
-class IOObject:
-	'''all the IO!
-	STILL TO BE IMPLEMENTED'''
-
-	def __init__(self):
-		cprint ("IOObject Init", "yellow")
-
-
-	def setTriggerEnable(self):
-
-
-
-	def setTriggerInvert(self):
-
-
-
-	def setTriggerDebounceEn(self):
-
-
-
-
-	def setTriggerDelayFrames(self):
-
-
-
-
-	def setShutterGatingEnable(self):
-
diff --git a/list of SCIWrites b/list of SCIWrites
deleted file mode 100644
index 1fdce07..0000000
--- a/list of SCIWrites	
+++ /dev/null
@@ -1,134 +0,0 @@
-
-
-SCI Writes:
-
-Camera::Init
-  Lux1310::Init
-    ::InitSensor
-      1 - 39
-  ::setImagerSettings
-    Lux1310::setResolution
-      40 - 43
-    ::setGain
-      44 - 46
-    ::updateWavetableSetting
-      ::setWavetable
-      47 - 50  
-
-
-FPGA Writes:
-
-Camera::Init
-  1
-  ::setLiveOutputTiming
-    2 - 11
-  12 - 16
-  ::setRecRegionStartWords
-    17
-  18
-  Lux1310::Init
-    ::InitSensor
-      19 - 20
-      ::setReset
-        21 - 22
-      ::autoPhaseCal
-        ::setClkPhase
-          23 - 25
-      26 - 27
-      ::setFramePeriod
-        ::setSlavePeriod
-          28 
-      ::setIntegrationTime
-        ::setSlaveExposure
-          29
-  IO::init
-    ::setTriggerEnable
-      30
-    ::setTriggerInvert
-      31
-    ::setTriggerDebounceEn
-      32
-    ::[misc]
-      33 - 39
-  ::setImagerSettings
-    40
-    Lux1310::setFramePeriod
-      ::setSlavePeriod
-        41 
-    ::updateWavetableSetting
-      ::setWavetable
-        ::setABNDelayClocks
-          42
-    43
-    Lux1310::setSlaveExposure
-      44
-  ::setFrameSizeWords
-      45
-    ::setDisplaySettings
-      ::setLiveOutputTiming
-        46 - 55
-  IO::setTriggerDelayFrames
-    56
-  ::autoFPNCorrection
-    IO::setShutterGatingEnable
-      57
-    ::setIntegrationTime
-      ::setSlaveExposure
-        58
-    ::setRecSequencerModeSingleBlock
-      ::setRecRegionEndWords
-        59
-      ::writeSeqPgmMemory
-        60 - 61
-      ::setFrameSizeWords
-        62
-    ::startRecording
-      ::startSequencer
-        63 - 64
-      ::setShutterGatingEnable
-       65
-    ::setIntegrationTime
-      Lux1310:::setIntegrationTime
-        ::setSlaveExposure
-          66
-    ::computeFPNCorrection2
-      Lux1310::seqOnOff
-        67
-	    ::setIntegrationTime
-	      Lux1310:::setIntegrationTime
-	        ::setSlaveExposure
-	          68
-	     ::setWhiteBalance
-	       69 - 71
-	::setCCMatrix
-	  72 - 80
-	::setWhiteBalance
-	  81 - 83
-	::setFocusPeakColorLL
-	  84 
-	::setFocusPeakThresholdLL
-    85	    
-
-
-<on_expSliderValueChanged>
-	Camera::setIntegrationTime
-    Lux1310:::setIntegrationTime
-      ::setSlaveExposure
-        86
-
-
-
-
-
-
-
-
-
-    Lux1310::setResolution
-      40 - 43
-    ::setGain
-      44 - 46
-    ::updateWavetableSetting
-      ::setWavetable
-      47 - 50  
-
diff --git a/list of SCIWrites and FPGAWrites b/list of SCIWrites and FPGAWrites
deleted file mode 100644
index d155767..0000000
--- a/list of SCIWrites and FPGAWrites	
+++ /dev/null
@@ -1,124 +0,0 @@
-
-
-SCI Writes:
-
-Camera::Init
-  Lux1310::Init
-    ::InitSensor
-      1 - 39
-  ::setImagerSettings
-    Lux1310::setResolution
-      40 - 43
-    ::setGain
-      44 - 46
-    ::updateWavetableSetting
-      ::setWavetable
-      47 - 50  
-
-
-FPGA Writes:
-
-Camera::Init
-  1
-  ::setLiveOutputTiming
-    2 - 11
-  12 - 16
-  ::setRecRegionStartWords
-    17
-  18
-  Lux1310::Init
-    ::InitSensor
-      19 - 20
-      ::setReset
-        21 - 22
-      ::autoPhaseCal
-        ::setClkPhase
-          23 - 25
-      26 - 27
-      ::setFramePeriod
-        ::setSlavePeriod
-          28 
-      ::setIntegrationTime
-        ::setSlaveExposure
-          29
-  IO::init
-    ::setTriggerEnable
-      30
-    ::setTriggerInvert
-      31
-    ::setTriggerDebounceEn
-      32
-    ::[misc]
-      33 - 39
-  ::setImagerSettings
-    40
-    Lux1310::setFramePeriod
-      ::setSlavePeriod
-        41 
-    ::updateWavetableSetting
-      ::setWavetable
-        ::setABNDelayClocks
-          42
-    43
-    Lux1310::setSlaveExposure
-      44
-  ::setFrameSizeWords
-      45
-    ::setDisplaySettings
-      ::setLiveOutputTiming
-        46 - 55
-  IO::setTriggerDelayFrames
-    56
-  ::autoFPNCorrection
-    IO::setShutterGatingEnable
-      57
-    ::setIntegrationTime
-      ::setSlaveExposure
-        58
-    ::setRecSequencerModeSingleBlock
-      ::setRecRegionEndWords
-        59
-      ::writeSeqPgmMemory
-        60 - 61
-      ::setFrameSizeWords
-        62
-    ::startRecording
-      ::startSequencer
-        63 - 64
-      ::setShutterGatingEnable
-       65
-    ::setIntegrationTime
-      Lux1310:::setIntegrationTime
-        ::setSlaveExposure
-          66
-    ::computeFPNCorrection2
-      Lux1310::seqOnOff
-        67
-	    ::setIntegrationTime
-	      Lux1310:::setIntegrationTime
-	        ::setSlaveExposure
-	          68
-	     ::setWhiteBalance
-	       69 - 71
-	::setCCMatrix
-	  72 - 80
-	::setWhiteBalance
-	  81 - 83
-	::setFocusPeakColorLL
-	  84 
-	::setFocusPeakThresholdLL
-    85	    
-
-
-<on_expSliderValueChanged>
-	Camera::setIntegrationTime
-    Lux1310:::setIntegrationTime
-      ::setSlaveExposure
-        86
-
-
-
-
-
-
-
diff --git a/list of SCIWrites and FPGAWrites2 b/list of SCIWrites and FPGAWrites2
deleted file mode 100644
index f6e4c5f..0000000
--- a/list of SCIWrites and FPGAWrites2	
+++ /dev/null
@@ -1,119 +0,0 @@
-
-
-SCI Writes:
-
-Camera::Init
-  Lux1310::Init
-    Lux1310::InitSensor
-      1 - 39
-  Camera::setImagerSettings
-    Lux1310::setResolution
-      40 - 43
-    Lux1310::setGain
-      44 - 46
-    Lux1310::updateWavetableSetting
-      Lux1310::setWavetable
-      47 - 50  
-
-
-FPGA Writes:
-
-Camera::Init
-  1
-  Camera::setLiveOutputTiming
-    2 - 11
-  12 - 16
-  Camera::setRecRegionStartWords
-    17
-  18
-  Lux1310::Init
-    Lux1310::InitSensor
-      19 - 20
-      Lux1310::setReset
-        21 - 22
-      Lux1310::autoPhaseCal
-        Lux1310::setClkPhase
-          23 - 25
-      26 - 27
-      Lux1310::setFramePeriod
-        Lux1310::setSlavePeriod
-          28 
-      Lux1310::setIntegrationTime
-        Lux1310::setSlaveExposure
-          29
-  IO::init
-    IO::setTriggerEnable
-      30
-    IO::setTriggerInvert
-      31
-    IO::setTriggerDebounceEn
-      32
-    IO::[misc]
-      33 - 39
-  Camera::setImagerSettings
-    40
-    Lux1310::setFramePeriod
-      Lux1310::setSlavePeriod
-        41 
-    Lux1310::updateWavetableSetting
-      Lux1310::setWavetable
-        Lux1310::setABNDelayClocks
-          42
-    43
-    Lux1310::setSlaveExposure
-      44
-  Camera::setFrameSizeWords
-      45
-    Camera::setDisplaySettings
-      Camera::setLiveOutputTiming
-        46 - 55
-  IO::setTriggerDelayFrames
-    56
-  Camera::autoFPNCorrection
-    IO::setShutterGatingEnable
-      57
-    Camera::setIntegrationTime
-      Camera::setSlaveExposure
-        58
-    Camera::setRecSequencerModeSingleBlock
-      Camera::setRecRegionEndWords
-        59
-      Camera::writeSeqPgmMemory
-        60 - 61
-      Camera::setFrameSizeWords
-        62
-    Camera::startRecording
-      Camera::startSequencer
-        63 - 64
-      Camera::setShutterGatingEnable
-       65
-    Camera::setIntegrationTime
-      Lux1310:::setIntegrationTime
-        Lux1310::setSlaveExposure
-          66
-    Camera::computeFPNCorrection2
-      Lux1310::seqOnOff
-        67
-	    Lux1310::setIntegrationTime
-	      Lux1310:::setIntegrationTime
-	        Lux1310::setSlaveExposure
-	          68
-	     Lux1310::setWhiteBalance
-	       69 - 71
-	Camera::setCCMatrix
-	  72 - 80
-	Camera::setWhiteBalance
-	  81 - 83
-	Camera::setFocusPeakColorLL
-	  84 
-	Camera::setFocusPeakThresholdLL
-    85	    
-
-
-<on_expSliderValueChanged>
-	Camera::setIntegrationTime
-    Lux1310::setIntegrationTime
-      Lux1310::setSlaveExposure
-        86
-
-
diff --git a/live.py b/live.py
index 11e4fd7..4841055 100644
--- a/live.py
+++ b/live.py
@@ -1,7 +1,7 @@
 
 # import pdb; pdb.set_trace()
 
-print("Live Video Testing")
+print("\n\nLive Video Testing")
 
 # breakpoint()
 
@@ -15,6 +15,8 @@ from termcolor import colored
 # exit()
 # main part
 
+globvar = 123
+
 cam = CamObject()
 
 # exit()
@@ -54,7 +56,7 @@ for x in range(10):
 cam.mem.GPIOWrite("record-led.0", 0)
 cam.mem.GPIOWrite("record-led.1", 0)
 
-exit()
+# exit()
 
 while 0:
 	a = cam.mem.GPIORead("encoder-a")
@@ -67,7 +69,8 @@ while 0:
 # cam.sensor.Lux1310RegDump()
 print("........")
 
-cam.sensor.Lux1310ShowTestPattern()
+# breakpoint()
+# cam.sensor.Lux1310ShowTestPattern()
 
 # cam.TestLive()
 
diff --git a/lux1310.py b/lux1310.py
index da14446..a99ded3 100644
--- a/lux1310.py
+++ b/lux1310.py
@@ -14,8 +14,11 @@ import struct
 from lux1310waves import *
 from lux1310sensor import *
 
+
+
+
 NODAC = False
-# NODAC = True
+NODAC = True
 
 
 '''
@@ -84,6 +87,9 @@ class Lux1310Object(SensorObject):
 	breakSCI = False
 	# breakSCI = True
 
+	noSCI = True
+	noSCI = False
+
 	# we'll keep a copy of the wavetable delay
 	keepdelay = 0
 	SCIc = 0  # how many SCI writes
@@ -179,13 +185,15 @@ class Lux1310Object(SensorObject):
 		#print (repr(self))
 		readdata = self.mem.fpga_read16(addr)
 		readdata &= mask
-		self.mem.fpga_write16s(addr, readdata)
+		self.mem.FPGAWrite16s(addr, readdata)
+		cprint (f"FPGAndBits: FPGAwrite16 - 0x{addr:x}: 0x{readdata:x}", "white", "on_blue")
 
 	def FPGAOrBits(self, addr, mask):
 		#print (f"  $$$ FPGAOrBits(0x{addr:x}, 0x{mask:x})")
 		readdata = self.mem.fpga_read16(addr)
 		readdata |= mask
-		self.mem.fpga_write16s(addr, readdata)
+		self.mem.FPGAWrite16s(addr, readdata)
+		cprint (f"FPGAOrBits: FPGAwrite16 - 0x{addr:x}: 0x{readdata:x}", "white", "on_blue")
 
 	#raise Exception("\n\nSCI writing doesn't work!")
 
@@ -198,6 +206,7 @@ class Lux1310Object(SensorObject):
 		# pprint(vars(self))
 
 		# NOTE: this uses the write + "s" methods, that do not print debug info
+		if self.noSCI: return
 		self.mem.fpga_write16s(SENSOR_SCI_CONTROL, 0x8000)
 
 		self.FPGAAndBits(SENSOR_SCI_CONTROL, 0xffff - SENSOR_SCI_CONTROL_RW_MASK)
@@ -220,6 +229,7 @@ class Lux1310Object(SensorObject):
 		# Clear RW, and setup the transfer and fill the FIFO
 		# print (f"\n\n SELF = {self}")
 		# pprint(vars(self))
+		if self.noSCI: return
 
 		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 0x8000)
 		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 0)
@@ -243,6 +253,7 @@ class Lux1310Object(SensorObject):
 		# self.Lux1310SCIWritePure(addr, value)
 		# print (f" ({self.SCIc})$$$ Lux1310SCIWrite(0x{addr:x}, 0x{value:x})")
 
+		if self.noSCI: return
 		if self.breakSCI: breakpoint()
 		self.Lux1310SCIWriteWithMask(addr, value)
 
@@ -250,19 +261,38 @@ class Lux1310Object(SensorObject):
 	def Lux1310SCIWriteBuf(self, addr, values):
 		'''Perform a series of 8 bit register writes'''
 		# Clear RW, and setup the transfer and fill the FIFO
+
+		debugWB = True
+		cprint (f"### WriteBuf ###", "white", "on_blue")
+
+		if self.noSCI: return
 		print (f"$$$ Lux1310SCIWriteBuf to 0x{addr:x}: {len(values)} entries")
-		self.mem.fpga_write16s(SENSOR_SCI_CONTROL, 0x8000)
-		
-		self.FPGAAndBits(SENSOR_SCI_CONTROL, 0xffff - SENSOR_SCI_CONTROL_RW_MASK)
-		self.mem.fpga_write16s(SENSOR_SCI_ADDRESS, addr)
-		self.mem.fpga_write16s(SENSOR_SCI_DATALEN, len(values))
+		rw = self.mem.fpga_read16(SENSOR_SCI_CONTROL) & (0xffff - SENSOR_SCI_CONTROL_RW_MASK)
+		self.mem.FPGAWrite16(SENSOR_SCI_CONTROL, 0x8000 | rw)
+		if debugWB:
+			cprint (f"WB: fpga_write16s - 0x{SENSOR_SCI_CONTROL:x}: 0x{(0x8000 | rw):x}", "white", "on_blue")
+
+		# self.FPGAAndBits(SENSOR_SCI_CONTROL, (0xffff - SENSOR_SCI_CONTROL_RW_MASK))
+		self.mem.FPGAWrite16(SENSOR_SCI_ADDRESS, addr)
+		if debugWB:
+			cprint (f"WB: fpga_write16s - 0x{SENSOR_SCI_ADDRESS:x}: 0x{addr:x}", "white", "on_blue")
+		self.mem.FPGAWrite16(SENSOR_SCI_DATALEN, len(values))
+		if debugWB:
+			cprint (f"WB: fpga_write16s - 0x{SENSOR_SCI_DATALEN:x}: 0x{len(values):x}", "white", "on_blue")
 		for b in values:
-			self.mem.fpga_write16s(SENSOR_SCI_FIFO_WR_ADDR, b)
+			self.mem.FPGAWrite16s(SENSOR_SCI_FIFO_WR_ADDR, b)
+			if debugWB:
+				# cprint (f"WB: fpga_write16s - 0x{SENSOR_SCI_FIFO_WR_ADDR:x}: 0x{b:x}", "white", "on_blue")
+				print (b)
 			# print (f"  - 0x{b:x}")
 
 		# Start the transfer and then wait for completion.
 		self.FPGAOrBits(SENSOR_SCI_CONTROL, SENSOR_SCI_CONTROL_RUN_MASK)
+		f = self.mem.fpga_read16(SENSOR_SCI_CONTROL)
+		f = f & SENSOR_SCI_CONTROL_RUN_MASK
+		print (f"f is {f}")
 		while self.mem.fpga_read16(SENSOR_SCI_CONTROL) & SENSOR_SCI_CONTROL_RUN_MASK:
+			# print (".")
 			pass
 
 	def Lux1310SCIRead(self, addr):
@@ -295,35 +325,40 @@ class Lux1310Object(SensorObject):
 		#debug testing: sleep some
 		time.sleep(0.01)
 		# breakpoint()
+		if self.noSCI: return
 
-		self.SCIc = self.SCIc + 1
+		self.mem.writesCount += 1
 		if type(reg) is str:
 			lreg = Lux1310_dict[reg]
 			sciaddr = lreg >> self.SCI.LUX1310_SCI_REG_ADDR
 			scidata = setbits(val, lreg & self.SCI.LUX1310_SCI_REG_MASK)
-			cprint(f'  <{self.SCIc}>$$$ Lux1310Write("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
+			cprint(f'  [{self.mem.writesCount}]$$$ Lux1310Write("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
 			self.Lux1310SCIWrite(sciaddr, scidata)
+			cprint(f"  SCI WRITE: 0x{sciaddr:x}: 0x{scidata:x}", "blue", "on_yellow")
 		else:
-			cprint(f"  <{self.SCIc}>$$$ Lux1310Write(0x{reg:x}, 0x{val:x})", "red")
+			cprint(f"  [{self.mem.writesCount}]$$$ Lux1310Write(0x{reg:x}, 0x{val:x})", "red")
 		
 			sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
 			scidata = setbits(val, reg & self.SCI.LUX1310_SCI_REG_MASK)
 			self.Lux1310SCIWrite(sciaddr, scidata)
+			cprint(f"  SCI WRITE: 0x{sciaddr:x}: 0x{scidata:x}", "blue", "on_yellow")
 
 
 	def Lux1310WriteWord(self, reg, val):
 		'''Perform a full register write, without considering bit-field definitions
 		NEW: pass a string instead
 		'''
-		self.SCIc = self.SCIc + 1
+		if self.noSCI: return
+
+		self.mem.writesCount += 1
 		if type(reg) is str:
 			lreg = Lux1310_dict[reg]
 			sciaddr = lreg >> self.SCI.LUX1310_SCI_REG_ADDR
 			scidata = val
-			cprint(f'  <{self.SCIc}>$$$ Lux1310Write("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
+			cprint(f'  [{self.mem.writesCount}]$$$ Lux1310WriteWord("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
 			self.Lux1310SCIWrite(sciaddr, scidata)
 		else:
-			cprint(f"  <{self.SCIc}>$$$ Lux1310Write(0x{reg:x}, 0x{val:x})", "red")
+			cprint(f'  [{self.mem.writesCount}]$$$ Lux1310WriteWord("{reg}", 0x{val:x}) - 0x{sciaddr:x}, 0x{scidata:x}', "yellow")
 			sciaddr = reg >> self.SCI.LUX1310_SCI_REG_ADDR
 			scidata = val
 			self.Lux1310SCIWrite(sciaddr, scidata)
@@ -500,7 +535,7 @@ class Lux1310Object(SensorObject):
 		return 0;
 
 	def Lux1310SetGain(self, gain):
-		breakpoint()
+		# breakpoint()
 		if NODAC:
 			return
 		print (f"Lux1310SetGain: {gain}")
@@ -662,6 +697,9 @@ class Lux1310Object(SensorObject):
 	def __init__(self, mem):
 		print (colored("### lux1310 __init__", "red"))
 		cprint ("### lux1310 __init__", "red", "on_white")
+
+		print (f"mem is {mem}")
+
 		SensorObject.__init__(self, mem)
 
 		
@@ -716,7 +754,10 @@ class Lux1310Object(SensorObject):
 		#lux1310_write_wavetab(data, &lux1310_wt_sram80);
 		# TODO: don't just assume the first wavetable is delay of 80!
 	
+		# while True:
 		self.Lux1310SCIWriteBuf(0x7F, Lux1310Wave80Data);
+			# time.sleep(0.1)
+		# self.Lux1310SCIWriteBuf(0x7F, Lux1310Wave80Data);
 		
 		self.Lux1310Write("LUX1310_SCI_TIMING_EN", 1);
 		
@@ -809,7 +850,7 @@ class Lux1310Object(SensorObject):
 		
 
 	def _writeDACVoltages(self):
-		breakpoint()
+		# breakpoint()
 		print("_writeDACVoltages")
 		self._initDAC();
 		self._writeDACVoltage(VABL_VOLTAGE, 0.3);
@@ -863,8 +904,8 @@ class Lux1310Object(SensorObject):
 		time.sleep(0.01)
 
 
-		self.lux1310SetReset(True)
-		self.lux1310SetReset(False)
+		# self.lux1310SetReset(True)
+		# self.lux1310SetReset(False)
 
 		time.sleep(0.001)
 
@@ -874,9 +915,9 @@ class Lux1310Object(SensorObject):
 	def lux1310SetReset(self, value):
 		readvalue = self.mem.fpga_mmio.read16(IMAGE_SENSOR_CONTROL)
 		if value:
-			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue | IMAGE_SENSOR_RESET_MASK)
+			self.mem.FPGAWrite16(IMAGE_SENSOR_CONTROL, readvalue | IMAGE_SENSOR_RESET_MASK)
 		else:
-			self.mem.fpga_write16(IMAGE_SENSOR_CONTROL, readvalue & 0xffff - IMAGE_SENSOR_RESET_MASK)
+			self.mem.FPGAWrite16(IMAGE_SENSOR_CONTROL, readvalue & 0xffff - IMAGE_SENSOR_RESET_MASK)
 
 	def SensorInit(self):
 		#self.ImageSensor = ImageSensorData()
@@ -949,15 +990,15 @@ class Lux1310Object(SensorObject):
 		self.Lux1310AutoPhaseCal()
 		
 		# Toggle the clock phase and wait for the FPGA to lock. 
-		self.mem.fpga_write16(SENSOR_CLK_PHASE, 0)
-		self.mem.fpga_write16(SENSOR_CLK_PHASE, 1)
-		self.mem.fpga_write16(SENSOR_CLK_PHASE, 0)
+		self.mem.FPGAWrite16(SENSOR_CLK_PHASE, 0)
+		self.mem.FPGAWrite16(SENSOR_CLK_PHASE, 1)
+		self.mem.FPGAWrite16(SENSOR_CLK_PHASE, 0)
 		#/ TODO: Shouldn't there be a while loop here? */
 		data_correct = self.Lux1310GetDataCorrect()
 		print(f"\nlux1310_data_correct: {data_correct}")
 
 		self.Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xf00)
-		self.Lux1310Write("LUX1310_SCI_TST_PAT", 0x2202)  # ADC clock control
+		self.Lux1310Write("LUX1310_SCI_TST_PAT", 0x0)  # ADC clock control
 
 
 #to here
@@ -1053,8 +1094,8 @@ class Lux1310Object(SensorObject):
 
 		print ("Setting display addresses")
 		cr = self.mem.FPGARead16("DISPLAY_CTL") | 1	
-		self.mem.FPGAWrite16("DISPLAY_CTL", cr) #Set to display from display frame address register
-		self.mem.FPGAWrite32("DISPLAY_FRAME_ADDRESS", 0x40000)	# Set display address
+		self.mem.FPGAWrite16nb("DISPLAY_CTL", cr) #Set to display from display frame address register
+		self.mem.FPGAWrite32nb("DISPLAY_FRAME_ADDRESS", 0x40000)	# Set display address
 
 
 		print ("Testing RAM R/W")
@@ -1078,8 +1119,9 @@ class Lux1310Object(SensorObject):
 		
 		print ("Zero image area")
 		#Zero image area
-		self.mem.FPGAWrite32("GPMC_PAGE_OFFSET", 0x40000) #Set GPMC offset
+		self.mem.FPGAWrite32nb("GPMC_PAGE_OFFSET", 0x40000) #Set GPMC offset
 		for i in range(0, FRAME_SIZE, 2):
+			# self.mem.RAMWrite16(i, (i >> 8) & 0xff80)
 			self.mem.RAMWrite16(i, (i >> 8) & 0xff80)
 
 		print ("Draw a rectangular box with diagonal")
@@ -1092,7 +1134,14 @@ class Lux1310Object(SensorObject):
 		for y in range(80): 
 			for x in range(128):	
 			
-				#self.writePixel12(x+y*1280, 0x2000000, 2048) #;//(x == 0 || y == 0 || x == 1279 || y == 1023 || x == y) ? 0xFFF : 0);
+				# self.writePixel12(x+y*1280, 0x2000000, 2048) #(x == 0 || y == 0 || x == 1279 || y == 1023 || x == y) ? 0xFFF : 0);
+				d =  ((x == 0) or (y == 0) or (x == 1279) or (y == 1023) or (x == y)) 
+				if d:
+					self.writePixel12(x+y*1280, 0x0000000, 0xFFF )
+				else:
+					self.writePixel12(x+y*1280, 0x0000000, 0)
+				# self.writePixel12(x+y*1280, 0x2000000, ((x == 0) || (y == 0) || (x == 1279) || (y == 1023) || (x == y)) ? 0xFFF : 0);
+				# self.writePixel12(x+y*1280, 0x2000000,  (x == y) ? 0xFFF : 0);
 				#print(".")
 				#qDebug() << "line" << y;
 				pass
@@ -1117,4 +1166,3 @@ class Lux1310Object(SensorObject):
 		dataH |= (value >> (8 - shift))
 		self.mem.RAMWrite8(address, dataL)
 		self.mem.RAMWrite8(address+1, dataH)
-
diff --git a/memobj.py b/memobj.py
index a9d3ca0..d4160b1 100644
--- a/memobj.py
+++ b/memobj.py
@@ -13,6 +13,7 @@ from spi import *
 from lux import *
 from ctypes import *
 
+import pychronos
 
 
 def nicehex(n):
@@ -27,11 +28,39 @@ class MemObject:
 	#print ("Created!")
 	FPGAc = 0  # how many FPGA writes
 
+	#masking off the FPGA writes
+	FPGAfirst = 0		#only write if it's more than or equal to this, default 0
+	FPGAlast = 20000		#only write if it's less than or equal to this, default 100
+	FPGAbp = 100			#break before this write (or blocked write) - usually FPGAlast+1
+
+	# these are the counters for both FPGA and SCI writes
+	writesCount = 0 
+	writesFirst = 0		#only write if it's more than or equal to this, default 0
+	writesLast = 200	#only write if it's less than or equal to this, default 100
+	writesBP = 0		#break before this write (or blocked write) - usually writesLast+1
+
+
 	FPGAcol = "green"
 	FPGAcol_old = "red"
 
 	breakFPGA = False
 	# breakFPGA = True
+	usePC = False  		#pychronos
+	usePC = True  		#pychronos
+
+	usePCRAM = True		#pychronos raw RAM access
+	usePCRAM = False		#pychronos raw RAM access
+
+	noFPGA = True
+	noFPGA = False
+	noGPIO = True
+
+	FPGActypes = True
+	# FPGActypes = False
+
+
+
+
 
 	fpga_mmio = MMIO(0x01000000, 0x3000)
 	RAM_mmio = MMIO(0x02000000, 0x1000000)    
@@ -44,10 +73,11 @@ class MemObject:
 	FPGAwptr = cast(ptr, POINTER(c_ushort))
 	FPGAbptr = cast(ptr, POINTER(c_ubyte))
 
+
+	fpga = pychronos.fpgamap()
+
 	# breakpoint()
 
-	FPGActypes = True
-	# FPGActypes = False
 
 	print ("Testing RAM R/W")
 	x = RAM_mmio.read8(0)
@@ -57,6 +87,8 @@ class MemObject:
 	x = RAM_mmio.read8(0)
 	print (f" - reading {x}")
 
+	# print (f"globvar is {globvar}")
+
 	def CtypesTest(self):
 		# ptr = self.fpga_mmio.pointer
 		# print(f"ptr is {ptr}")
@@ -110,33 +142,121 @@ class MemObject:
 	# 	self.fpga_mmio.write32(addr, data)
 
 
+
+	def FPGAmasked(self, addr):
+		ret = False
+		if self.writesCount <= self.writesFirst:
+			cprint(f"FPGA write #{self.writesCount} masked! ({addr})", "white", "on_red")
+			ret = True
+		if self.FPGAc > self.FPGAlast:
+			cprint(f"FPGA write #{self.writesCount} masked! ({addr})", "white", "on_red")
+			ret = True
+		if self.writesCount == self.writesBP:
+			breakpoint()
+
+		return ret
+
+
+
+
 	#NEW: use Python dictionary to do FPGA writes
 
 	def FPGAWrite8(self, addr, data):
-		self.FPGAc = self.FPGAc + 1
-		FPGAreg = FPGA_dict[addr]
-		cprint (f'   ({self.FPGAc})--- FPGAWrite8("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		if self.noFPGA: return
+		self.writesCount += 1
+		if self.FPGAmasked(addr): return
+		if type(addr) is str:
+			FPGAreg = FPGA_dict[addr]
+		else:
+			FPGAreg = addr
+		cprint (f'   [{self.writesCount}]- - - FPGAWrite8("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
 		if self.breakFPGA: breakpoint()
+		if self.usePC:
+			old = self.fpga.mem8[FPGAreg]
+			self.fpga.mem8[FPGAreg] = data & 0xff
+			new = self.fpga.mem8[FPGAreg]
+			if old != new:
+				cprint(f"0x{FPGAreg:x}: was 0x{old:x}, is 0x{new:x}", "white", "on_blue" )
+			return
 		if self.FPGActypes:
 			self.FPGAbptr[FPGAreg] = data & 0xff
 		else:
 			self.fpga_mmio.write8(FPGAreg, data)
 
 	def FPGAWrite16(self, addr, data):
+		if self.noFPGA: return
+		self.writesCount += 1
+		if self.FPGAmasked(addr): return
+		if type(addr) is str:
+			FPGAreg = FPGA_dict[addr]
+		else:
+			FPGAreg = addr
+		cprint (f'   [{self.writesCount}]----- FPGAWrite16("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		if self.breakFPGA: breakpoint()
+		if self.usePC:
+			old = self.fpga.mem16[FPGAreg // 2]
+			self.fpga.mem16[FPGAreg // 2] = data & 0xffff
+			new = self.fpga.mem16[FPGAreg // 2]
+			if old != new:
+				cprint(f"0x{FPGAreg:x}: was 0x{old:x}, is 0x{new:x}", "white", "on_blue" )
+			return
+		if self.FPGActypes:
+			self.FPGAwptr[FPGAreg // 2] = data & 0xffff
+		else:
+			self.fpga_mmio.write16(FPGAreg, data)
+
+	def FPGAWrite32(self, addr, data):
+		if self.noFPGA: return
+		self.writesCount += 1
+		if self.FPGAmasked(addr): return
+		if type(addr) is str:
+			FPGAreg = FPGA_dict[addr]
+		else:
+			FPGAreg = addr
+		cprint (f'   [{self.writesCount}]===== FPGAWrite32("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		if self.breakFPGA: breakpoint()
+		if self.usePC:
+			old = self.fpga.mem32[FPGAreg // 4]
+			self.fpga.mem32[FPGAreg // 4] = data
+			new = self.fpga.mem32[FPGAreg // 4]
+			if old != new:
+				cprint(f"0x{FPGAreg:x}: was 0x{old:x}, is 0x{new:x}", "white", "on_blue" )
+			return
+		if self.FPGActypes:
+			self.FPGAlptr[FPGAreg // 4] = data
+		else:
+			self.fpga_mmio.write32(FPGAreg, data)
+
+# These are non-blockable FPGA writes:
+	def FPGAWrite16nb(self, addr, data):
 		self.FPGAc = self.FPGAc + 1
 		FPGAreg = FPGA_dict[addr]
-		cprint (f'   ({self.FPGAc})--- FPGAWrite16("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		cprint (f'   ({self.FPGAc})----- FPGAWrite16("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
 		if self.breakFPGA: breakpoint()
+		if self.usePC:
+			old = self.fpga.mem16[FPGAreg // 2]
+			self.fpga.mem16[FPGAreg // 2] = data & 0xffff
+			new = self.fpga.mem16[FPGAreg // 2]
+			if old != new:
+				cprint(f"0x{FPGAreg:x}: was 0x{old:x}, is 0x{new:x}", "white", "on_blue" )
+			return
 		if self.FPGActypes:
 			self.FPGAwptr[FPGAreg // 2] = data & 0xffff
 		else:
 			self.fpga_mmio.write16(FPGAreg, data)
 
-	def FPGAWrite32(self, addr, data):
+	def FPGAWrite32nb(self, addr, data):
 		self.FPGAc = self.FPGAc + 1
 		FPGAreg = FPGA_dict[addr]
-		cprint (f'   ({self.FPGAc})--- FPGAWrite32("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
+		cprint (f'   ({self.FPGAc})===== FPGAWrite32("{addr}":0x{FPGAreg:x}, 0x{data:x})', self.FPGAcol)
 		if self.breakFPGA: breakpoint()
+		if self.usePC:
+			old = self.fpga.mem32[FPGAreg // 4]
+			self.fpga.mem32[FPGAreg // 4] = data
+			new = self.fpga.mem32[FPGAreg // 4]
+			if old != new:
+				cprint(f"0x{FPGAreg:x}: was 0x{old:x}, is 0x{new:x}", "white", "on_blue" )
+			return
 		if self.FPGActypes:
 			self.FPGAlptr[FPGAreg // 4] = data
 		else:
@@ -146,24 +266,45 @@ class MemObject:
 #duplicate functions without debug, for SCI writes
 
 	def FPGAWrite8s(self, addr, data):
+		if self.noFPGA: return
 		self.FPGAc = self.FPGAc + 1
-		FPGAreg = FPGA_dict[addr] * 1
+		if type(addr) is str:
+			FPGAreg = FPGA_dict[addr]
+		else:
+			FPGAreg = addr
+		if self.usePC:
+			self.fpga.mem8[FPGAreg] = data & 0xff
+			return
 		if self.FPGActypes:
 			self.FPGAbptr[FPGAreg] = data & 0xff
 		else:
 			self.fpga_mmio.write8(FPGAreg, data)
 
 	def FPGAWrite16s(self, addr, data):
+		if self.noFPGA: return
 		self.FPGAc = self.FPGAc + 1
-		FPGAreg = FPGA_dict[addr] * 1
+		if type(addr) is str:
+			FPGAreg = FPGA_dict[addr]
+		else:
+			FPGAreg = addr
+		if self.usePC:
+			self.fpga.mem16[FPGAreg // 2] = data & 0xffff
+			return
 		if self.FPGActypes:
 			self.FPGAwptr[FPGAreg // 2] = data & 0xffff
 		else:
 			self.fpga_mmio.write16(FPGAreg, data)
 
 	def FPGAWrite32s(self, addr, data):
+		if self.noFPGA: return
 		self.FPGAc = self.FPGAc + 1
-		FPGAreg = FPGA_dict[addr] * 1
+		if type(addr) is str:
+			FPGAreg = FPGA_dict[addr]
+		else:
+			FPGAreg = addr
+		if self.usePC:
+			self.fpga.mem32[FPGAreg // 4] = data
+			return
 		if self.FPGActypes:
 			self.FPGAlptr[FPGAreg // 4] = data 
 		else:
@@ -193,7 +334,11 @@ class MemObject:
 
 	#OLDER non-Pythonic: use these three functions to write to the (16 bit) FPGA address
 	def fpga_write8(self, addr, data):
+		self.FPGAWrite8(addr, data)
+		return
+		if self.noFPGA: return
 		self.FPGAc = self.FPGAc + 1
+		if self.FPGAmasked(addr): return
 		cprint (f"   ({self.FPGAc})--- fpga_write8(0x{1 * addr:x}, 0x{data:x})", self.FPGAcol_old)
 		if self.breakFPGA: breakpoint()
 		if self.FPGActypes:
@@ -202,8 +347,13 @@ class MemObject:
 			self.fpga_mmio.write8(1 * addr, data)
 
 	def fpga_write16(self, addr, data):
+		self.FPGAWrite16(addr, data)
+		return
+		if self.noFPGA: return
 		self.FPGAc = self.FPGAc + 1
+		if self.FPGAmasked(addr): return
 		cprint (f"   ({self.FPGAc})--- fpga_write16(0x{1 * addr:x}, 0x{data:x})", self.FPGAcol_old)
+		# breakpoint()
 		if self.breakFPGA: breakpoint()
 		if self.FPGActypes:
 			self.FPGAwptr[addr // 2] = data & 0xffff
@@ -211,7 +361,11 @@ class MemObject:
 			self.fpga_mmio.write16(1 * addr, data)
 
 	def fpga_write32(self, addr, data):
+		self.FPGAWrite32(addr, data)
+		return
+		if self.noFPGA: return
 		self.FPGAc = self.FPGAc + 1
+		if self.FPGAmasked(addr): return
 		cprint (f"   ({self.FPGAc})--- fpga_write32(0x{1 * addr:x}, 0x{data:x})", self.FPGAcol_old)
 		if self.breakFPGA: breakpoint()
 		if self.FPGActypes:
@@ -222,18 +376,27 @@ class MemObject:
 
 #duplicate functions without debug, for SCI writes
 	def fpga_write8s(self, addr, data):
+		self.FPGAWrite8s(addr, data)
+		return
+		if self.noFPGA: return
 		if self.FPGActypes:
 			self.FPGAbptr[addr] = data & 0xff
 		else:
 			self.fpga_mmio.write8(1 * addr, data)
 
 	def fpga_write16s(self, addr, data):
+		self.FPGAWrite16s(addr, data)
+		return
+		if self.noFPGA: return
 		if self.FPGActypes:
 			self.FPGAwptr[addr // 2] = data & 0xffff
 		else:
 			self.fpga_mmio.write16(1 * addr, data)
 
 	def fpga_write32s(self, addr, data):
+		self.FPGAWrite32s(addr, data)
+		return
+		if self.noFPGA: return
 		if self.FPGActypes:
 			self.FPGAlptr[addr // 4] = data
 		else:
@@ -263,10 +426,16 @@ class MemObject:
 
 
 	def RAMWrite8(self, addr, data):
-		self.RAM_mmio.write8(addr, data)
+		if self.usePCRAM:
+			self.fpga.mem8[addr] = data
+		else:
+			self.RAM_mmio.write8(addr, data)
 
 	def RAMWrite16(self, addr, data):
-		self.RAM_mmio.write16(addr, data)
+		if self.usePCRAM:
+			self.fpga.mem16[addr // 2] = data
+		else:
+			self.RAM_mmio.write16(addr, data)
 
 	def RAMRead8(self, addr):
 		res = self.RAM_mmio.read8(addr)
@@ -299,6 +468,7 @@ class MemObject:
 
 
 	def GPIOWrite(self, pin_name, value):
+		if self.noGPIO: return
 		gpio = self._GPIO_ports[pin_name]
 		gpio.write(bool(value))
 
@@ -336,5 +506,16 @@ class MemObject:
 
 
 
+	def MemTest(self):
+		addr = 0x0
+		ram1 = self.RAMRead8(addr)
+		self.RAMWrite8(addr, 0x23)
+		ram2 = self.RAMRead8(addr)
+
+		cprint(f"MEMTEST: was 0x{ram1:x}, is 0x{ram2:x}", "blue", "on_yellow")
+		
+
+
+
 
 #fpga_mmio.close()
diff --git a/python output dec 17.odt b/python output dec 17.odt
deleted file mode 100644
index 161cd55b197af0637c8d8e186b76073dcafe502d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 26869
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

diff --git a/python output dec14 b/python output dec14
deleted file mode 100644
index be99d12..0000000
--- a/python output dec14	
+++ /dev/null
@@ -1,247 +0,0 @@
-setLiveOutputTiming: 1550*1024@59 (1280*1024 max: 60)
-   (1)--- FPGAWrite16("DISPLAY_H_RES":0x428, 0x510)
-   (2)--- FPGAWrite16("DISPLAY_H_OUT_RES":0x430, 0x500)
-   (3)--- FPGAWrite16("DISPLAY_V_RES":0x42c, 0x400)
-   (4)--- FPGAWrite16("DISPLAY_V_OUT_RES":0x440, 0x400)
-   (5)--- FPGAWrite16("DISPLAY_H_PERIOD":0x410, 0x652)
-   (6)--- FPGAWrite16("DISPLAY_H_SYNC_LEN":0x418, 0x1)
-   (7)--- FPGAWrite16("DISPLAY_H_BACK_PORCH":0x420, 0x40)
-   (8)--- FPGAWrite16("DISPLAY_V_PERIOD":0x414, 0x405)
-   (9)--- FPGAWrite16("DISPLAY_V_SYNC_LEN":0x41c, 0x1)
-   (10)--- FPGAWrite16("DISPLAY_V_BACK_PORCH":0x424, 0x4)
-pixel rate is 1385431040
-maxfps is 1057.0
-h_max_res = 1280
-   (11)--- FPGAWrite16("SENSOR_FIFO_START_W_THRESH":0x10, 0x100)
-   (12)--- FPGAWrite16("SENSOR_FIFO_STOP_W_THRESH":0x14, 0x100)
-   (13)--- FPGAWrite32("SEQ_LIVE_ADDR_0":0x54, 0xf000)
-   (14)--- FPGAWrite32("SEQ_LIVE_ADDR_1":0x58, 0x1e000)
-   (15)--- FPGAWrite32("SEQ_LIVE_ADDR_2":0x5c, 0x2d000)
-   (16)--- FPGAWrite32("SEQ_REC_REGION_START":0x4c, 0x3c000)
----------
-dctrl is 0x280
-AND mask is 0x8
-   (17)--- FPGAWrite32("DISPLAY_CTL":0x400, 0x2f0)
-   (18)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x61a80)
-   (19)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x5f370)
-> /root/lowpy/camobj.py(392)CamInit()
--> self.sensor._writeDACVoltages()
-(Pdb) c
-> /root/lowpy/lux1310.py(813)_writeDACVoltages()
--> print("_writeDACVoltages")
-(Pdb) c
-_writeDACVoltages
-_writeDACVoltage: 1, 0.3V
-   writeDAC 1: 0x4d3
-      writeDACSPI 0x14d3
-_writeDACVoltage: 4, 2.7V
-   writeDAC 4: 0xd16
-      writeDACSPI 0x4d16
-_writeDACVoltage: 7, 3.3V
-   writeDAC 7: 0xd53
-      writeDACSPI 0x7d53
-_writeDACVoltage: 6, 0.7V
-   writeDAC 6: 0xb43
-      writeDACSPI 0x6b43
-_writeDACVoltage: 5, 3.6V
-   writeDAC 5: 0xe89
-      writeDACSPI 0x5e89
-_writeDACVoltage: 2, 2.5V
-   writeDAC 2: 0xc1e
-      writeDACSPI 0x2c1e
-_writeDACVoltage: 3, 2V
-   writeDAC 3: 0x9b1
-      writeDACSPI 0x39b1
-_writeDACVoltage: 0, 1.5V
-   writeDAC 0: 0x745
-      writeDACSPI 0x745
-<lux1310.Lux1310Object object at 0x40127690>
-   (20)--- fpga_write16(0x0, 0x5)
-   (21)--- fpga_write16(0x0, 0x4)
-#############
-Lux has been reset
-#############
-  <1>$$$ Lux1310Write("LUX1310_SCI_SRESET_B", 0x0) - 0x7e, 0x0
-  <2>$$$ Lux1310Write("LUX1310_SCI_CUST_PAT", 0xfc0) - 0x57, 0xfc0
-  <3>$$$ Lux1310Write("LUX1310_SCI_TST_PAT", 0x2) - 0x56, 0x2
-  <4>$$$ Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xfc0) - 0x4c, 0xfc0
-  <5>$$$ Lux1310Write("LUX1310_SCI_DAC_ILV", 0xe1) - 0x5a, 0xe1
-   (22)--- fpga_write16(0x4, 0x0)
-   (23)--- fpga_write16(0x4, 0x1)
-   (24)--- fpga_write16(0x4, 0x0)
-
-lux1310_data_correct: 0
-  <6>$$$ Lux1310Write("LUX1310_SCI_PCLK_VBLANK", 0xf00) - 0x4c, 0xf00
-  <7>$$$ Lux1310Write("LUX1310_SCI_TST_PAT", 0x2202) - 0x56, 0x2
-  <8>$$$ Lux1310Write("LUX1310_SCI_RDOUT_DLY", 0x50) - 0x37, 0x50
-  <9>$$$ Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", 0x50) - 0x7a, 0x50
-  <10>$$$ Lux1310Write("LUX1310_SCI_LINE_VALID_DLY", 0x7) - 0x71, 0x7
-  <11>$$$ Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL0", 0xe08e) - 0x2d, 0xe08e
-  <12>$$$ Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL1", 0xfc1f) - 0x2e, 0xfc1f
-  <13>$$$ Lux1310Write("LUX1310_SCI_STATE_IDLE_CTRL2", 0x3) - 0x2f, 0x3
-  <14>$$$ Lux1310Write("LUX1310_SCI_ADC_CLOCK_CTRL", 0x2202) - 0x5c, 0x2202
-  <15>$$$ Lux1310Write("LUX1310_SCI_SEL_VCM", 0x4b76) - 0x62, 0x4b76
-  <16>$$$ Lux1310Write("LUX1310_SCI_INT_CLK_TIMING", 0x41f) - 0x74, 0x41f
-LuxInit2
-configuring for LUX1310 silicon rev 2
-  <17>$$$ Lux1310Write("LUX1310_SCI_TERMB_RXCLK", 0x307f) - 0x5b, 0x307f
-< undocumented 0x7b Lux write >
-  <19>$$$ Lux1310Write(0x3a07ff, 0x0)
-  <20>$$$ Lux1310Write(0x3b07ff, 0x0)
-  <21>$$$ Lux1310Write(0x3c07ff, 0x0)
-  <22>$$$ Lux1310Write(0x3d07ff, 0x0)
-  <23>$$$ Lux1310Write(0x3e07ff, 0x0)
-  <24>$$$ Lux1310Write(0x3f07ff, 0x0)
-  <25>$$$ Lux1310Write(0x4007ff, 0x0)
-  <26>$$$ Lux1310Write(0x4107ff, 0x0)
-  <27>$$$ Lux1310Write(0x4207ff, 0x0)
-  <28>$$$ Lux1310Write(0x4307ff, 0x0)
-  <29>$$$ Lux1310Write(0x4407ff, 0x0)
-  <30>$$$ Lux1310Write(0x4507ff, 0x0)
-  <31>$$$ Lux1310Write(0x4607ff, 0x0)
-  <32>$$$ Lux1310Write(0x4707ff, 0x0)
-  <33>$$$ Lux1310Write(0x4807ff, 0x0)
-  <34>$$$ Lux1310Write(0x4907ff, 0x0)
-  <35>$$$ Lux1310Write("LUX1310_SCI_ADC_CAL_EN", 0x1) - 0x39, 0x1
-  <36>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", 0x7f) - 0x51, 0x7f
-  <37>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_FB", 0x7f) - 0x52, 0x7f
-  <38>$$$ Lux1310Write("LUX1310_SCI_GAIN_BIT", 0x3) - 0x53, 0x3
-$$$ Lux1310SCIWriteBuf to 0x7f: 427 entries
-  <39>$$$ Lux1310Write("LUX1310_SCI_TIMING_EN", 0x1) - 0x1, 0x1
-   (25)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x61a80)
-   (26)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x5f370)
-getMinFramePeriod: 0.0009457444444444445
-Requested period 0.00094575
-getMinFramePeriod: 0.0009457444444444445
-   (27)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x1716f)
-   (28)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x16f8e)
-done LuxInit2
-TODO: don't do fake IO
-   (29)--- fpga_write16(0xa0, 0x1)
-   (30)--- fpga_write16(0xa4, 0x1)
-   (31)--- fpga_write16(0xa8, 0x0)
-   (32)--- fpga_write32(0x60, 0x0)
-   (33)--- fpga_write16(0xb4, 0x0)
-   (34)--- fpga_write16(0xb0, 0x0)
-   (35)--- fpga_write16(0xac, 0x2)
-   (36)--- fpga_write16(0xbc, 0x0)
-   (37)--- fpga_write16(0xbc, 0x0)
-   (38)--- fpga_write16(0xbc, 0x0)
-   (39)--- FPGAWrite32("IMAGER_INT_TIME":0x20, 0x0)
-### Lux1310SetResolutions
-ImageGeometryData(hres=1280, vres=1024, hoffset=0, voffset=0)
-0
-80
-  <40>$$$ Lux1310Write("LUX1310_SCI_X_START", 0x20) - 0x5, 0x20
-  <41>$$$ Lux1310Write("LUX1310_SCI_X_END", 0x51f) - 0x6, 0x51f
-  <42>$$$ Lux1310Write("LUX1310_SCI_Y_START", 0x0) - 0x7, 0x0
-  <43>$$$ Lux1310Write("LUX1310_SCI_Y_END", 0x3ff) - 0x8, 0x3ff
-   (40)--- FPGAWrite32("IMAGER_FRAME_PERIOD":0x1c, 0x1716f)
-> /root/lowpy/lux1310.py(504)Lux1310SetGain()
--> if NODAC:
-(Pdb) c
-Lux1310SetGain: 0
-  <44>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_SAMP", 0x7f) - 0x51, 0x7f
-  <45>$$$ Lux1310Write("LUX1310_SCI_GAIN_SEL_FB", 0x7f) - 0x52, 0x7f
-  <46>$$$ Lux1310Write("LUX1310_SCI_GAIN_BIT", 0x3) - 0x53, 0x3
-  <47>$$$ Lux1310Write("LUX1310_SCI_TIMING_EN", 0x8000) - 0x1, 0x0
-  <48>$$$ Lux1310Write("LUX1310_SCI_RDOUT_DLY", 0x50) - 0x37, 0x50
-  <49>$$$ Lux1310Write("LUX1310_SCI_WAVETAB_SIZE", 0x50) - 0x7a, 0x50
-$$$ Lux1310SCIWriteBuf to 0x7f: 427 entries
-  <50>$$$ Lux1310Write("LUX1310_SCI_TIMING_EN", 0x1) - 0x1, 0x1
-   (41)--- FPGAWrite16("SENSOR_MAGIC_START_DELAY":0x68, 0x50)
-Wavetable size set to 80
-Resetting cal gain to 1.0
-> /root/lowpy/camobj.py(435)CamInit()
--> self.FakeInit()
-(Pdb) c
-TODO: don't do fake init
---- faking 16 bit (0x6c, (0x52)
-   (42)--- fpga_write16(0x6c, 0x52)
-=== faking 32 bit (0x20, (0x12e5a)
-   (43)--- fpga_write32(0x20, 0x12e5a)
---- faking 16 bit (0x48, (0xf000)
-   (44)--- fpga_write16(0x48, 0xf000)
---- faking 16 bit (0x428, (0x500)
-   (45)--- fpga_write16(0x428, 0x500)
---- faking 16 bit (0x430, (0x500)
-   (46)--- fpga_write16(0x430, 0x500)
---- faking 16 bit (0x42c, (0x400)
-   (47)--- fpga_write16(0x42c, 0x400)
---- faking 16 bit (0x440, (0x400)
-   (48)--- fpga_write16(0x440, 0x400)
---- faking 16 bit (0x410, (0x652)
-   (49)--- fpga_write16(0x410, 0x652)
---- faking 16 bit (0x418, (0x1)
-   (50)--- fpga_write16(0x418, 0x1)
---- faking 16 bit (0x420, (0x40)
-   (51)--- fpga_write16(0x420, 0x40)
---- faking 16 bit (0x414, (0x405)
-   (52)--- fpga_write16(0x414, 0x405)
---- faking 16 bit (0x41c, (0x1)
-   (53)--- fpga_write16(0x41c, 0x1)
---- faking 16 bit (0x424, (0x4)
-   (54)--- fpga_write16(0x424, 0x4)
-=== faking 32 bit (0x60, (0x0)
-   (55)--- fpga_write32(0x60, 0x0)
---- faking 16 bit (0xbc, (0x0)
-   (56)--- fpga_write16(0xbc, 0x0)
-=== faking 32 bit (0x20, (0x78)
-   (57)--- fpga_write32(0x20, 0x78)
-=== faking 32 bit (0x50, (0x1fffe000)
-   (58)--- fpga_write32(0x50, 0x1fffe000)
-=== faking 32 bit (0x104, (0x0)
-   (59)--- fpga_write32(0x104, 0x0)
-=== faking 32 bit (0x100, (0x200c)
-   (60)--- fpga_write32(0x100, 0x200c)
---- faking 16 bit (0x48, (0xf000)
-   (61)--- fpga_write16(0x48, 0xf000)
-=== faking 32 bit (0x40, (0x2)
-   (62)--- fpga_write32(0x40, 0x2)
-=== faking 32 bit (0x40, (0x0)
-   (63)--- fpga_write32(0x40, 0x0)
---- faking 16 bit (0xbc, (0x0)
-   (64)--- fpga_write16(0xbc, 0x0)
-=== faking 32 bit (0x20, (0x12e5a)
-   (65)--- fpga_write32(0x20, 0x12e5a)
-=== faking 32 bit (0x20, (0x0)
-   (66)--- fpga_write32(0x20, 0x0)
-=== faking 32 bit (0x20, (0x12e5a)
-   (67)--- fpga_write32(0x20, 0x12e5a)
---- faking 16 bit (0x4f0, (0x10e5)
-   (68)--- fpga_write16(0x4f0, 0x10e5)
---- faking 16 bit (0x4f4, (0x10e5)
-   (69)--- fpga_write16(0x4f4, 0x10e5)
---- faking 16 bit (0x4f8, (0x10e5)
-   (70)--- fpga_write16(0x4f8, 0x10e5)
---- faking 16 bit (0x4c0, (0x1ea2)
-   (71)--- fpga_write16(0x4c0, 0x1ea2)
---- faking 16 bit (0x4c4, (0xf6c6)
-   (72)--- fpga_write16(0x4c4, 0xf6c6)
---- faking 16 bit (0x4c8, (0xfc41)
-   (73)--- fpga_write16(0x4c8, 0xfc41)
---- faking 16 bit (0x4d0, (0xfb1d)
-   (74)--- fpga_write16(0x4d0, 0xfb1d)
---- faking 16 bit (0x4d4, (0x163b)
-   (75)--- fpga_write16(0x4d4, 0x163b)
---- faking 16 bit (0x4d8, (0xfe74)
-   (76)--- fpga_write16(0x4d8, 0xfe74)
---- faking 16 bit (0x4dc, (0x209)
-   (77)--- fpga_write16(0x4dc, 0x209)
---- faking 16 bit (0x4e0, (0xf0c1)
-   (78)--- fpga_write16(0x4e0, 0xf0c1)
---- faking 16 bit (0x4e4, (0x1a63)
-   (79)--- fpga_write16(0x4e4, 0x1a63)
---- faking 16 bit (0x4f0, (0x16ce)
-   (80)--- fpga_write16(0x4f0, 0x16ce)
---- faking 16 bit (0x4f4, (0x10e5)
-   (81)--- fpga_write16(0x4f4, 0x10e5)
---- faking 16 bit (0x4f8, (0x1ac3)
-   (82)--- fpga_write16(0x4f8, 0x1ac3)
-=== faking 32 bit (0x400, (0x280)
-   (83)--- fpga_write32(0x400, 0x280)
-=== faking 32 bit (0x444, (0x19)
-   (84)--- fpga_write32(0x444, 0x19)
-=== faking 32 bit (0x20, (0x12c31)
-   (85)--- fpga_write32(0x20, 0x12c31)
-LIVE FPGA registers
diff --git a/python output with fake.odt b/python output with fake.odt
deleted file mode 100644
index 636a130b07f0e65a72de22d980559019b78a5a1e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 26895
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
I76Rgb0K5~ttN;K2

-- 
2.7.4


From aec352b786ac616a5a7be2bf818ab26bf33d0d9d Mon Sep 17 00:00:00 2001
From: Johan Thornton <johan@krontech.ca>
Date: Thu, 17 Jan 2019 16:58:37 -0800
Subject: [PATCH 7/7] DAC works

---
 lux1310.py | 91 +++++++++++++++++++++++++++++++++++++++++++++++++++++---------
 memobj.py  |  2 +-
 spi.py     | 38 +++++++++++++++++++++-----
 3 files changed, 111 insertions(+), 20 deletions(-)

diff --git a/lux1310.py b/lux1310.py
index a99ded3..93f994f 100644
--- a/lux1310.py
+++ b/lux1310.py
@@ -18,7 +18,7 @@ from lux1310sensor import *
 
 
 NODAC = False
-NODAC = True
+# NODAC = True
 
 
 '''
@@ -112,6 +112,8 @@ class Lux1310Object(SensorObject):
 	# get SCI constants
 	SCI = SCIObject()
 
+	thisSPIobj = spi.SPIobj()
+
 	# SPI_DEV = "/dev/spidev3.0"
 	# SPI_MODE = 1
 	# SPI_SPEED = 1000000
@@ -183,12 +185,14 @@ class Lux1310Object(SensorObject):
 		#pprint(vars(self))
 		#help(self)
 		#print (repr(self))
+
 		readdata = self.mem.fpga_read16(addr)
 		readdata &= mask
 		self.mem.FPGAWrite16s(addr, readdata)
 		cprint (f"FPGAndBits: FPGAwrite16 - 0x{addr:x}: 0x{readdata:x}", "white", "on_blue")
 
 	def FPGAOrBits(self, addr, mask):
+
 		#print (f"  $$$ FPGAOrBits(0x{addr:x}, 0x{mask:x})")
 		readdata = self.mem.fpga_read16(addr)
 		readdata |= mask
@@ -207,6 +211,8 @@ class Lux1310Object(SensorObject):
 
 		# NOTE: this uses the write + "s" methods, that do not print debug info
 		if self.noSCI: return
+		if self.breakSCI: breakpoint()
+
 		self.mem.fpga_write16s(SENSOR_SCI_CONTROL, 0x8000)
 
 		self.FPGAAndBits(SENSOR_SCI_CONTROL, 0xffff - SENSOR_SCI_CONTROL_RW_MASK)
@@ -230,6 +236,8 @@ class Lux1310Object(SensorObject):
 		# print (f"\n\n SELF = {self}")
 		# pprint(vars(self))
 		if self.noSCI: return
+		if self.breakSCI: breakpoint()
+
 
 		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 0x8000)
 		self.mem.fpga_write16(SENSOR_SCI_CONTROL, 0)
@@ -262,10 +270,12 @@ class Lux1310Object(SensorObject):
 		'''Perform a series of 8 bit register writes'''
 		# Clear RW, and setup the transfer and fill the FIFO
 
-		debugWB = True
+		debugWB = False
 		cprint (f"### WriteBuf ###", "white", "on_blue")
 
 		if self.noSCI: return
+		if self.breakSCI: breakpoint()
+
 		print (f"$$$ Lux1310SCIWriteBuf to 0x{addr:x}: {len(values)} entries")
 		rw = self.mem.fpga_read16(SENSOR_SCI_CONTROL) & (0xffff - SENSOR_SCI_CONTROL_RW_MASK)
 		self.mem.FPGAWrite16(SENSOR_SCI_CONTROL, 0x8000 | rw)
@@ -326,6 +336,8 @@ class Lux1310Object(SensorObject):
 		time.sleep(0.01)
 		# breakpoint()
 		if self.noSCI: return
+		if self.breakSCI: breakpoint()
+
 
 		self.mem.writesCount += 1
 		if type(reg) is str:
@@ -349,6 +361,7 @@ class Lux1310Object(SensorObject):
 		NEW: pass a string instead
 		'''
 		if self.noSCI: return
+		if self.breakSCI: breakpoint()
 
 		self.mem.writesCount += 1
 		if type(reg) is str:
@@ -796,8 +809,8 @@ class Lux1310Object(SensorObject):
 		self.mem.GPIOWrite("lux1310-dac-cs", 0)
 		#spilist = [reg >> 8, reg & 255]
 		#print (spilist)
-		spi.spi_transfer(reg)
-
+		# SPITransfer16(reg)
+		self.thisSPIobj.spi_transfer3(reg)
 		self.mem.GPIOWrite("lux1310-dac-cs", 1)
 
 			
@@ -806,6 +819,7 @@ class Lux1310Object(SensorObject):
 	# gpio_write(data->daccs, 1);
 
 	def _writeDACVoltage(self, chan, voltage):
+		# breakpoint()
 		cprint(f"_writeDACVoltage: {chan}, {voltage}V", "blue", "on_white")
 		if chan == VDR3_VOLTAGE:
 			self.writeDAC(voltage * VDR3_SCALE, VDR3_VOLTAGE)
@@ -835,24 +849,77 @@ class Lux1310Object(SensorObject):
 
 	def writeDACSPI(self, data):
 		cprint(f"      writeDACSPI 0x{data:x}", "blue", "on_white")
-		self.mem.GPIOWrite("lux1310-dac-cs", 0)
-		spi.spi_transfer(data)
+		self.mem.GPIOWrite("lux1310-dac-cs", 0)	
+		self.thisSPIobj.spi_transfer3(data)
 		self.mem.GPIOWrite("lux1310-dac-cs", 1)
 		
 
 
 	def _initDAC(self):
-		spi.spi_open()
-		# exit()
-		self.mem.GPIOWrite("lux1310-dac-cs", 0)
-		spi.spi_transfer(0x9000)
+		# spi.spi_open()
+		self.thisSPIobj.spi_open3()
+
+		cprint(f" initDAC:     writeDACSPI 0x{0x9000:x}", "blue", "on_white")
 		self.mem.GPIOWrite("lux1310-dac-cs", 0)
+		# self.SPITransfer16(0x9000)
+		self.thisSPIobj.spi_transfer3(0x9000)	
+		self.mem.GPIOWrite("lux1310-dac-cs", 1)
 		
+	def _blinkCS(self):
+		while True:
+			print ("Blinking DAC CS")
+			self.mem.GPIOWrite("record-led.0", 0)
+			self.mem.GPIOWrite("record-led.1", 0)
+			self.mem.GPIOWrite("lux1310-dac-cs", 0)
+			time.sleep(1)
+			print ("...")
+			self.mem.GPIOWrite("record-led.0", 1)
+			self.mem.GPIOWrite("record-led.1", 1)
+			self.mem.GPIOWrite("lux1310-dac-cs", 1)
+			time.sleep(1)
+		
+	def SPITransfer16(self, data):
+		print (f"SPITransfer16: 0x{data:x}")
+		tup = [(data >> 8) & 0xff, data & 0xff]
+		spiobj.transfer(tup)
+
+	def testSPI(self):
+		# breakpoint()
+		# spi.spi_open()	
+
+		# thisSPIobj = spi.SPIobj()
+		# self.thisSPIobj = spi.SPIobj()
+
+
+		# print (self.thisSPIobj)
+
+		self.thisSPIobj.spi_open3()
+		# print (spiobj)
+		n = 0
+		while True:
+			cprint(f" SPI TEST{n}", "blue", "on_white")
+			self.mem.GPIOWrite("lux1310-dac-cs", 0)
+			# self.SPITransfer16(0x9123)	
+			# spi.spi_transfer(0x9123)	
+			# spi.spi_transfer([0x91, 0x23])
+			# thisSPIobj.spi_obj.transfer([0x91, 0x23])
+			
+
+			self.thisSPIobj.spi_transfer3(0x9123)	
+
+			self.mem.GPIOWrite("lux1310-dac-cs", 1)
+			# time.sleep(0.1)
+			n += 1
+
+
 
-	def _writeDACVoltages(self):
+	def _writeDACVoltages(self):	
 		# breakpoint()
 		print("_writeDACVoltages")
-		self._initDAC();
+		# spi.spi_open2()
+		# self.testSPI()
+		self._initDAC()
+		# self._blinkCS()
 		self._writeDACVoltage(VABL_VOLTAGE, 0.3);
 		self._writeDACVoltage(VRSTB_VOLTAGE, 2.7);
 		self._writeDACVoltage(VRST_VOLTAGE, 3.3);
diff --git a/memobj.py b/memobj.py
index d4160b1..ccb6749 100644
--- a/memobj.py
+++ b/memobj.py
@@ -53,7 +53,7 @@ class MemObject:
 
 	noFPGA = True
 	noFPGA = False
-	noGPIO = True
+	noGPIO = False
 
 	FPGActypes = True
 	# FPGActypes = False
diff --git a/spi.py b/spi.py
index 36f2f33..2c813df 100644
--- a/spi.py
+++ b/spi.py
@@ -11,14 +11,38 @@ SPI_BITS = 16
 
 #spi = 0
 
-def spi_open():
-	global spi
-	spi = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+def spi_open2():
+	breakpoint()
+	print ("spi_open!!!!")
+	global spiobj
+	spiobj = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
 	#print (spi)
 
 def spi_transfer(data):
-	global spi
-	spilist = [data >> 8, data & 255]
+	breakpoint()
+	print (f"spi_transfer 0x{data:x}")
+	global spiobj
+	spilist = [(data >> 8) & 0xff, data & 0xff]
 	#print (spilist)
-	spi.transfer(spilist)
-	
\ No newline at end of file
+	spiobj.transfer(spilist)
+		
+
+
+
+class SPIobj:
+
+	spi_obj = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+
+	def spi_open3(self):
+		print ("spi_open!!!!")
+		# spiobj = SPI(SPI_DEV, SPI_MODE, SPI_SPEED, SPI_BITORDER, SPI_BITS)
+		#print (spi)
+
+	def spi_transfer3(self, data):
+		print (f"-->spi_transfer 0x{data:x}")
+		# global spiobj
+		# spilist = [(data >> 8) & 0xff, data & 0xff]
+		spilist = [data & 0xff, (data >> 8) & 0xff]
+		#print (spilist)
+		self.spi_obj.transfer(spilist)
+
-- 
2.7.4

