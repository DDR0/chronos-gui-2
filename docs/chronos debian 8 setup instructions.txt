#!/bin/bash
set -euxo pipefail #enable "safe mode"

#Installing GUI2 on a New Camera or Build Server:
#   Prerequisites:
#       1 Chronos Camera running Debian (or build server)
#       1 USB stick (if using camera)
#       Ethernet cable for internet access
#       Optional: MiniUSB cable for SSH access
#
#   To run this script, SSH onto your camera. Then, block by block,
#   read this script. Follow any instructions in the block, and run
#   the block by pasting it into your SSH session. 

killall camApp --quiet || true

# install deps
    #Add backports. (Not needed for base debian images released after January 2019.)
    sed -e 's/jessie/jessie-backports/g' /etc/apt/sources.list.d/multistrap-debian.list > /etc/apt/sources.list.d/backports-debian.list
    
    apt update && apt-get upgrade --yes
    apt install ntpdate ca-certificates cowsay vim rsync python3-pyqt5 python3-pyqt5.qtsvg curl python3-numpy python3-termcolor --yes
    ntpdate -s time.nist.gov

# install the back-of-camera interface & dev environment
    #Copy over application.
    mkdir /opt/camera
    echo "Copy chronos-gui-2 over to /opt/camera/chronos-gui-2. You can use util/watch-computer.sh for this, or do it manually - in my case, I copy-pasted the folder chronos-gui-2 folder from `git checkout && xdg-open .` to fish://root@192.168.12.1 in my file manager, Dolphin. Your setup will probably be different, but as long as you have /opt/camera/chronos-gui-2/ with the .py files in it you should be good."
    
    #Set up environment.
    cat >> ~/.bashrc <<'EOL'

#env vars required by QT to run, display, and be touched:
export QSG_RENDER_LOOP=basic
export QT_QPA_PLATFORM=linuxfb:fb=/dev/fb0
export QT_QPA_GENERIC_PLUGINS=tslib:/dev/input/event0

#Make Python 3.4 not choke on unicode characters.
export PYTHONIOENCODING=utf-8
EOL
    
    #Set up the Video API, since it's not mocked. (ed note: this doesn't work, so it's half-heartedly mocked now)
    #cd ~
    #wget https://github.com/krontech/chronos-cli/archive/master.zip
    #python3 <<< "from zipfile import PyZipFile; PyZipFile('chronos-cli-master.zip').extractall()"
    #mv chronos-cli-master chronos-cli
    #cd chronos-cli
    #chmod +x bootstrap src/mock/gen-frames.sh
    #./bootstrap
    #./configure
    #make -j$(nproc)
    #cd src
    #./cam-mock &
    
    #Create a few "well-known" files.
    echo "-1" >> /opt/camera/serial_number
    echo "Chronos 1.4 16gb Color" >> /opt/camera/model
    
    #Allow GUI2 to start D-Bus.
    echo "Copy ~util/com.krontech.chronos.conf to the camera as noted in it."
    
    #Install app dependancies.
    cd /opt/camera/chronos-gui-2
    apt install python3-pychronos
    
    #Start the app.
    cd /opt/camera/chronos-gui-2 # Wait for the copy to this folder, started earlier, to finish.
    export QT_QPA_PLATFORM=linuxfb:fb=/dev/fb1 #tell qt to use use framebuffer (vs X)
    python3 src/main.py
    
    #QoL
    pip3 install pdbpp watchdog typing future-fstrings python-periphery #watchdog provides watchmedo, used for automatic deployment.
    pip3 install --upgrade setuptools #required for smbus2
    pip3 install smbus2
    cat >> ~/.pdbrc <<'EOL'
#Refresh the terminal - something disables keyboard echoing when running watch_guest.sh.
import os
os.system("stty sane")
EOL
    
    #Bonus Content - this is NOT required
    
    #ponysay, a cowsay replacement
    cd ~
    wget http://www.vcheng.org/ponysay/ponysay_3.0.2-1_all.deb
    dpkg -i ponysay_3.0.2-1_all.deb
    rm ponysay_3.0.2-1_all.deb
    cat >> /etc/profile.d/horse.sh <<'EOS'
ponysay ++pony aquarius ++pony archlinux ++pony aries ++pony artemis ++pony aurora ++pony barbara ++pony bubbleberry ++pony butterscotch ++pony buttonmom ++pony calamity ++pony cancer ++pony capricorn ++pony childrenofthenight ++pony chrome ++pony coffeetalk ++pony coffeewalk ++pony danger ++pony doctornohat ++pony donutpony ++pony drhooves1 ++pony drhooves10 ++pony drhooves11 ++pony drhooves8 ++pony drhooves9 ++pony drhoovesdiscorded ++pony drizzle ++pony duskshine ++pony elusive ++pony faust ++pony firefox ++pony fluffle ++pony freckles ++pony fyrefly ++pony fyreflyready ++pony gemini ++pony gleamingshield ++pony gnupony ++pony hestelle ++pony internetexplorer ++pony johndelancie ++pony jristz ++pony kingsley ++pony kingsleybanner ++pony leo ++pony libra ++pony littlepip ++pony maandree ++pony milky ++pony milkylay ++pony molestia ++pony nyx ++pony nyxdisguised ++pony opera ++pony orion ++pony oscura ++pony paradise ++pony pinkaminacupcake ++pony pisces ++pony pizzapony ++pony posey ++pony princeartemis ++pony rainbowblitz ++pony reddit ++pony robodash ++pony sagittarius ++pony scorpio ++pony seabreeze ++pony sealyra ++pony slanderpony ++pony snowdrop ++pony snowdrop-crew ++pony solaris ++pony sparkler ++pony starstruck ++pony surprise ++pony sweetiebot ++pony taurus ++pony tempo ++pony ticket ++pony twibrain ++pony virgo ++pony wiggles ++pony woona ++pony woonanohat << EOQ
Hello. Welcome to camera #$(cat /opt/camera/serial_number)! ($(cat /opt/camera/model))
For help and documentation, see http://forum.krontech.ca/ and https://github.com/krontech.
EOQ
EOS
    
    #Faster SSH:
    #If present, edit /etc/profile.d/horse.sh to use /usr/games/cowsay instead
    #   of ponysay. Ponysay takes a *moment* to run. ðŸ˜­
    
    #Static IP
    #Edit the eth0 section in /etc/network/interfaces on the camera like:
    #   auto eth0
    #   iface eth0 inet static
    #           address 192.168.1.214
    #           netmask 255.255.255.0
    #           gateway 192.168.1.1
    #Where "214" is your static IP address choice.